{"meta":{"version":1,"warehouse":"5.0.0"},"models":{"Asset":[{"_id":"node_modules/hexo-theme-fluid/source/css/highlight-dark.styl","path":"css/highlight-dark.styl","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/css/gitalk.css","path":"css/gitalk.css","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/css/highlight.styl","path":"css/highlight.styl","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/img/avatar.png","path":"img/avatar.png","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/img/default.png","path":"img/default.png","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/img/fluid.png","path":"img/fluid.png","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/img/loading.gif","path":"img/loading.gif","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/img/police_beian.png","path":"img/police_beian.png","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/js/boot.js","path":"js/boot.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/js/color-schema.js","path":"js/color-schema.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/js/events.js","path":"js/events.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/js/img-lazyload.js","path":"js/img-lazyload.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/js/leancloud.js","path":"js/leancloud.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/js/plugins.js","path":"js/plugins.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/js/local-search.js","path":"js/local-search.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/js/utils.js","path":"js/utils.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/xml/local-search.xml","path":"xml/local-search.xml","modified":0,"renderable":1},{"_id":"source/img/default.png","path":"img/default.png","modified":0,"renderable":0},{"_id":"source/img/logo-l.png","path":"img/logo-l.png","modified":0,"renderable":0}],"Cache":[{"_id":"source/_posts/2023112410009.md","hash":"eed8000c2e6481b2b20fe4239640b119400ebed7","modified":1701941071927},{"_id":"source/.DS_Store","hash":"c0199adca93a6deb3490fb80ed5190f104e8b47f","modified":1708682522624},{"_id":"source/_posts/20231130112354.md","hash":"16d1510da4b322a35e2b659459755eedb4bff3a1","modified":1701941087498},{"_id":"source/_posts/20231207172556.md","hash":"f85b2b77b64483fe2a896d45fd7b612c6be9778e","modified":1701941693074},{"_id":"source/_posts/20231207173941.md","hash":"2f2d4bb61e834fb5f42a068cf6e0610dec1637e5","modified":1703581996156},{"_id":"source/about/index.md","hash":"a599150f01cb5a59db17b415271c58254022979e","modified":1701940514908},{"_id":"source/_posts/20231129151306.md","hash":"b394b81b94f6cfca78450eee47f43b9724af0e2f","modified":1701941083956},{"_id":"themes/fluid/source/css/_pages/_tag/tag.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1701940514976},{"_id":"themes/fluid/.editorconfig","hash":"33218fbd623feb43edf5f99f15965392cecc44a6","modified":1701940514909},{"_id":"themes/fluid/.eslintrc","hash":"4bc2b19ce2b8c4d242f97d4ccf2d741e68ab0097","modified":1701940514911},{"_id":"themes/fluid/.gitattributes","hash":"a54f902957d49356376b59287b894b1a3d7a003f","modified":1701940514911},{"_id":"themes/fluid/.gitignore","hash":"ae3bfcb89777657c5dfb5169d91445dcb0e5ab98","modified":1701940514916},{"_id":"themes/fluid/LICENSE","hash":"26f9356fd6e84b5a88df6d9014378f41b65ba209","modified":1701940514917},{"_id":"themes/fluid/README.md","hash":"49f681a203eecfa7127ac22edc13bd3b49693d0a","modified":1701940514918},{"_id":"themes/fluid/package.json","hash":"41983970c0977b3c626c3f1e3c714cf78ac6a04e","modified":1701940514947},{"_id":"themes/fluid/README_en.md","hash":"49541d4ec48c4b517c5b3fe17a2e92d87090d007","modified":1701940514919},{"_id":"themes/fluid/_config.yml","hash":"cdde6c6d6a1bdf9fb965313e21d92cf6213582b6","modified":1701940514919},{"_id":"themes/fluid/languages/de.yml","hash":"0e7d455d9e004ff15d8924b7a0c35cea25ee5b1d","modified":1701940514920},{"_id":"themes/fluid/languages/en.yml","hash":"cb11b39f44ea069652c9647179606b6cecc98d50","modified":1701940514920},{"_id":"themes/fluid/languages/eo.yml","hash":"a556251cc50a5680578c03f1efbf252b1f4ab860","modified":1701940514920},{"_id":"themes/fluid/.DS_Store","hash":"e6746d5739a3c542a615295342098cb62fd7de8d","modified":1701942699273},{"_id":"themes/fluid/languages/ja.yml","hash":"3dd6d20f8d26585a7c154a8e59fe8d5d902f4c6a","modified":1701940514921},{"_id":"themes/fluid/languages/es.yml","hash":"7112594259c88c04714be152af7fd377687dad40","modified":1701940514921},{"_id":"themes/fluid/languages/ru.yml","hash":"7dc78f22696649a4c68dc65a9b52d9a992fa82a0","modified":1701940514922},{"_id":"themes/fluid/languages/zh-TW.yml","hash":"596d031dff3826ae8e4ffc8931fff28977b73247","modified":1701940514924},{"_id":"themes/fluid/layout/about.ejs","hash":"163bee643e6a38912d3ae70923c83c48d57222e7","modified":1701940514943},{"_id":"themes/fluid/languages/zh-CN.yml","hash":"f96a22f989897ecddc69d5867a206e1cf6b8f610","modified":1701940514923},{"_id":"themes/fluid/layout/archive.ejs","hash":"7c1f44005849791feae4abaa10fae4cb983d3277","modified":1701940514943},{"_id":"themes/fluid/layout/404.ejs","hash":"b84d575c7b7f778b4cb64e89ad3d0aed4a896820","modified":1701940514924},{"_id":"themes/fluid/languages/zh-HK.yml","hash":"80ed400a7adaa92ea54fc7f5d534c9af795bed00","modified":1701940514923},{"_id":"themes/fluid/layout/index.ejs","hash":"9b4c154462ce78de4c9ea7dd15dce4ca8e8c1cf8","modified":1701940514945},{"_id":"themes/fluid/layout/category.ejs","hash":"f099161b738a16a32253f42085b5444f902018ed","modified":1701940514944},{"_id":"themes/fluid/layout/categories.ejs","hash":"13859726c27b6c79b5876ec174176d0f9c1ee164","modified":1701940514944},{"_id":"themes/fluid/layout/page.ejs","hash":"ed5007a3feb8f14d3d2843271bfb298eb0c56219","modified":1701940514946},{"_id":"themes/fluid/layout/tags.ejs","hash":"1d06af34b6cf1d8a20d2eb565e309326ceba309f","modified":1701940514947},{"_id":"themes/fluid/layout/tag.ejs","hash":"9d686364c4d16a1a9219471623af452035c5b966","modified":1701940514947},{"_id":"themes/fluid/.github/ISSUE_TEMPLATE/bug_report.md","hash":"554c0d0e086a0784d83ee71c83f8bceeb60aecc8","modified":1701940514913},{"_id":"themes/fluid/.github/ISSUE_TEMPLATE/bug_report_zh.md","hash":"c8b0d49c49e3c88872fd3b37909345ff5b2b6aa0","modified":1701940514913},{"_id":"themes/fluid/.github/ISSUE_TEMPLATE/feature_request.md","hash":"c134dd57ffd269b93402ccfffe7dbe0f0b583bec","modified":1701940514913},{"_id":"themes/fluid/layout/layout.ejs","hash":"7e0023474128fbe4d68c467704c41f1712432415","modified":1701940514945},{"_id":"themes/fluid/.github/ISSUE_TEMPLATE/feature_request_zh.md","hash":"ed08574b196447376dd74411cca664ac9227a5d4","modified":1701940514914},{"_id":"themes/fluid/layout/links.ejs","hash":"1cac32ec4579aaf7b9fa39d317497331d4c5e1dd","modified":1701940514945},{"_id":"themes/fluid/.github/workflows/limit.yaml","hash":"f8bd2edeb4424ee7a055b31583445d5d5dff91a4","modified":1701940514915},{"_id":"themes/fluid/.github/ISSUE_TEMPLATE/question.md","hash":"ab5eab9e3ff889c4ba7fd82846e7f5b7ae15bebc","modified":1701940514914},{"_id":"themes/fluid/layout/post.ejs","hash":"75ab6958d929e92566ca580d0b8bd0eeae10649a","modified":1701940514946},{"_id":"themes/fluid/layout/_partials/category-chains.ejs","hash":"18309584aab83bc4deb20723ebad832149dd2e24","modified":1701940514925},{"_id":"themes/fluid/.github/workflows/publish.yaml","hash":"6f02e6440d88629229556e3fd47d0280fe2240db","modified":1701940514916},{"_id":"themes/fluid/source/.DS_Store","hash":"62d23c1782a467576453bcfd196c649e41ac63d4","modified":1701942700886},{"_id":"themes/fluid/layout/_partials/archive-list.ejs","hash":"7520fbf91f762207c2ab06b2c293235cd5b23905","modified":1701940514924},{"_id":"themes/fluid/layout/_partials/footer.ejs","hash":"10ccfb8eef4e16182183c9a3e175c90d5b6397d3","modified":1701940514931},{"_id":"themes/fluid/layout/_partials/category-list.ejs","hash":"f8d2f1907450e61968e6d54443e9be8138196a77","modified":1701940514925},{"_id":"themes/fluid/layout/_partials/comments.ejs","hash":"d707c47b2638c94e489bc43d4cfd098b7c58447f","modified":1701940514926},{"_id":"themes/fluid/layout/_partials/css.ejs","hash":"85f6e051550907681ab4ed2e268ac8f6e9ebf931","modified":1701940514931},{"_id":"themes/fluid/layout/_partials/paginator.ejs","hash":"0f38a2c238169edcb63fc46c23bfc529ff3859b7","modified":1701940514934},{"_id":"themes/fluid/layout/_partials/header.ejs","hash":"0d5e397d30051e5fbabe7b47cfd1f1e6a5820af1","modified":1701940514933},{"_id":"themes/fluid/layout/_partials/head.ejs","hash":"7b7b1d098726e86687a15fe3d520d178577ffcae","modified":1701940514932},{"_id":"themes/fluid/scripts/events/index.js","hash":"79de5a379b28cad759a49048351c7f6b8915bd7d","modified":1701940514948},{"_id":"themes/fluid/scripts/filters/default-injects.js","hash":"b2013ae8e189cd07ebc8a2ff48a78e153345210f","modified":1701940514951},{"_id":"themes/fluid/scripts/filters/locals.js","hash":"58d0fec976f6b1d35e7ea03edc45414088acf05c","modified":1701940514952},{"_id":"themes/fluid/scripts/filters/post-filter.js","hash":"0047666f996c54017e06668b5242ed8a311ebce0","modified":1701940514952},{"_id":"themes/fluid/scripts/generators/index-generator.js","hash":"9159fc22fa84a7b605dd15fe4104f01fe9c71147","modified":1701940514952},{"_id":"themes/fluid/layout/_partials/markdown-plugins.ejs","hash":"fc4bdf7de0cf1a66d0e5e4fba1b31d6f7ed49468","modified":1701940514934},{"_id":"themes/fluid/scripts/generators/local-search.js","hash":"9ac5ddad06e9b0e6015ce531430018182a4bc0fa","modified":1701940514953},{"_id":"themes/fluid/scripts/generators/pages.js","hash":"d3e75f53c59674d171309e50702954671f31f1a4","modified":1701940514953},{"_id":"themes/fluid/scripts/helpers/date.js","hash":"9bda6382f61b40a20c24af466fe10c8366ebb74c","modified":1701940514953},{"_id":"themes/fluid/scripts/helpers/engine.js","hash":"d3a231d106795ce99cb0bc77eb65f9ae44515933","modified":1701940514954},{"_id":"themes/fluid/scripts/helpers/export-config.js","hash":"8e67b522c47aa250860e3fe2c733f1f958a506c0","modified":1701940514954},{"_id":"themes/fluid/scripts/helpers/import.js","hash":"ca53e8dbf7d44cfd372cfa79ac60f35a7d5b0076","modified":1701940514954},{"_id":"themes/fluid/scripts/helpers/injects.js","hash":"1ad2ae6b11bd8806ee7dd6eb7140d8b54a95d613","modified":1701940514955},{"_id":"themes/fluid/scripts/helpers/scope.js","hash":"d41d9d658fcb54964b388598e996747aadb85b0f","modified":1701940514957},{"_id":"themes/fluid/layout/_partials/scripts.ejs","hash":"da5810785105e5075861593c7ac22c7aa9665a72","modified":1701940514942},{"_id":"themes/fluid/scripts/helpers/url.js","hash":"2a6a8288176d0e0f6ec008056bf2745a86e8943e","modified":1701940514957},{"_id":"themes/fluid/layout/_partials/search.ejs","hash":"70e1c929e084ca8a2648cedabf29b372511ea2b8","modified":1701940514943},{"_id":"themes/fluid/scripts/helpers/utils.js","hash":"226f99b465ff513de075a8e78b321d6cb62592ca","modified":1701940514957},{"_id":"themes/fluid/scripts/helpers/wordcount.js","hash":"4543b8954c5c2ca91191cc0d53cf071b3f26faaa","modified":1701940514958},{"_id":"themes/fluid/.github/ISSUE_TEMPLATE/question_zh.md","hash":"fff07ce0472afc368d388637cb9d438195da9b5b","modified":1701940514915},{"_id":"themes/fluid/scripts/tags/button.js","hash":"3eb43a8cdea0a64576ad6b31b4df6c2bf5698d4c","modified":1701940514958},{"_id":"themes/fluid/scripts/tags/group-image.js","hash":"4aeebb797026f1df25646a5d69f7fde79b1bcd26","modified":1701940514959},{"_id":"themes/fluid/scripts/tags/mermaid.js","hash":"75160561e1ef3603b6d2ad2938464ab1cb77fd38","modified":1701940514959},{"_id":"themes/fluid/scripts/tags/checkbox.js","hash":"4938610c3543a921a341bc074626d511cb1a4b45","modified":1701940514958},{"_id":"themes/fluid/scripts/tags/label.js","hash":"f05a6d32cca79535b22907dc03edb9d3fa2d8176","modified":1701940514959},{"_id":"themes/fluid/scripts/tags/note.js","hash":"e3b456a079e5dc0032473b516c865b20f83d2c26","modified":1701940514960},{"_id":"themes/fluid/scripts/utils/object.js","hash":"33b57e4decdc5e75c518859f168c8ba80b2c665b","modified":1701940514961},{"_id":"themes/fluid/scripts/utils/resolve.js","hash":"8c4a8b62aa8608f12f1e9046231dff04859dc3e9","modified":1701940514961},{"_id":"themes/fluid/scripts/utils/url-join.js","hash":"718aab5e7b2059a06b093ca738de420d9afa44ba","modified":1701940514961},{"_id":"themes/fluid/source/css/gitalk.css","hash":"a57b3cc8e04a0a4a27aefa07facf5b5e7bca0e76","modified":1701940514977},{"_id":"themes/fluid/source/css/highlight-dark.styl","hash":"45695ef75c31a4aa57324dd408b7e2327a337018","modified":1701940514977},{"_id":"themes/fluid/source/img/avatar.png","hash":"fe739a158cc128f70f780eb5fa96f388b81d478f","modified":1701940514979},{"_id":"themes/fluid/scripts/utils/compare-versions.js","hash":"dbbc928c914fc2bd242cd66aa0c45971aec13a5d","modified":1701940514960},{"_id":"themes/fluid/scripts/helpers/page.js","hash":"4607607445233b3029ef20ed5e91de0da0a7f9c5","modified":1701940514955},{"_id":"themes/fluid/source/css/highlight.styl","hash":"a9efc52a646a9e585439c768557e3e3c9e3326dc","modified":1701940514978},{"_id":"themes/fluid/source/css/main.styl","hash":"855ae5fe229c51afa57f7645f6997a27a705d7e4","modified":1701940514978},{"_id":"themes/fluid/source/img/fluid.png","hash":"64b215db2cb3af98fe639e94537cb5209f959c78","modified":1701940514979},{"_id":"themes/fluid/source/img/loading.gif","hash":"2d2fc0f947940f98c21afafef39ecf226a2e8d55","modified":1701940514980},{"_id":"themes/fluid/source/img/logo-l.png","hash":"699e350d51736056a8feb02818de4822f5600e11","modified":1701940514982},{"_id":"themes/fluid/source/js/color-schema.js","hash":"76a198f8721352ebeaf5b2ef2f4db00612da4796","modified":1701940514983},{"_id":"themes/fluid/source/img/logo-bg.png","hash":"d774a80ea6aa56575928e2af90b7e3e70e2c5d74","modified":1701940514981},{"_id":"themes/fluid/source/img/police_beian.png","hash":"90efded6baa2dde599a9d6b1387973e8e64923ea","modified":1701940514983},{"_id":"themes/fluid/source/js/boot.js","hash":"38bd26c6b7acdafda86dda3560e6a3ca488d3c76","modified":1701940514983},{"_id":"themes/fluid/source/js/leancloud.js","hash":"eff77c7a5c399fcaefda48884980571e15243fc9","modified":1701940514984},{"_id":"themes/fluid/source/js/img-lazyload.js","hash":"cbdeca434ec4da51f488c821d51b4d23c73294af","modified":1701940514984},{"_id":"themes/fluid/source/js/events.js","hash":"89e3561488a618ed0caeb9edf18e441978e29c25","modified":1701940514983},{"_id":"themes/fluid/source/js/plugins.js","hash":"c34916291e392a774ff3e85c55badb83e8661297","modified":1701940514984},{"_id":"themes/fluid/layout/_partials/comments/changyan.ejs","hash":"c9b2d68ed3d375f1953e7007307d2a3f75ed6249","modified":1701940514926},{"_id":"themes/fluid/source/js/utils.js","hash":"b82e7c289a66dfd36064470fd41c0e96fc598b43","modified":1701940514985},{"_id":"themes/fluid/source/xml/local-search.xml","hash":"8c96ba6a064705602ce28d096fd7dd9069630a55","modified":1701940514985},{"_id":"themes/fluid/layout/_partials/comments/disqus.ejs","hash":"aab4a4d24c55231a37db308ae94414319cecdd9b","modified":1701940514927},{"_id":"themes/fluid/source/js/local-search.js","hash":"b9945f76f8682f3ec32edfb285b26eb559f7b7e8","modified":1701940514984},{"_id":"themes/fluid/layout/_partials/comments/cusdis.ejs","hash":"5f9dc012be27040bbe874d0c093c0d53958cc987","modified":1701940514926},{"_id":"themes/fluid/layout/_partials/comments/discuss.ejs","hash":"98d065b58ce06b7d18bff3c974e96fa0f34ae03a","modified":1701940514927},{"_id":"themes/fluid/layout/_partials/comments/remark42.ejs","hash":"d4e9532feeb02aed61bd15eda536b5b631454dac","modified":1701940514929},{"_id":"themes/fluid/layout/_partials/comments/giscus.ejs","hash":"95f8b866b158eff9352c381c243b332a155a5110","modified":1701940514928},{"_id":"themes/fluid/layout/_partials/comments/livere.ejs","hash":"2264758fed57542a7389c7aa9f00f1aefa17eb87","modified":1701940514929},{"_id":"themes/fluid/layout/_partials/comments/twikoo.ejs","hash":"d84bcb5ccd78470a60c067fc914ac0ac67ac8777","modified":1701940514929},{"_id":"themes/fluid/layout/_partials/comments/gitalk.ejs","hash":"843bc141a4545eb20d1c92fb63c85d459b4271ec","modified":1701940514928},{"_id":"themes/fluid/layout/_partials/comments/valine.ejs","hash":"19ba937553dddd317f827d682661a1066a7b1f30","modified":1701940514930},{"_id":"themes/fluid/layout/_partials/comments/waline.ejs","hash":"12727da7cf3ac83443270f550be4d1c06135b52b","modified":1701940514930},{"_id":"themes/fluid/layout/_partials/comments/utterances.ejs","hash":"c7ccf7f28308334a6da6f5425b141a24b5eca0e2","modified":1701940514930},{"_id":"themes/fluid/layout/_partials/footer/beian.ejs","hash":"4fb9b5dd3f3e41a586d6af44e5069afe7c81fff2","modified":1701940514931},{"_id":"themes/fluid/layout/_partials/footer/statistics.ejs","hash":"454d8dd4c39f9494ebeb03ca0746f5bc122af76a","modified":1701940514932},{"_id":"themes/fluid/layout/_partials/header/navigation.ejs","hash":"870db75e4e403a840c4463dfeed2c9114846e7cc","modified":1701940514933},{"_id":"themes/fluid/layout/_partials/plugins/analytics.ejs","hash":"4f68c80bd1395e2f6d11e373116e54de11cb62e8","modified":1701940514935},{"_id":"themes/fluid/layout/_partials/header/banner.ejs","hash":"e07757b59e7b89eea213d0e595cb5932f812fd32","modified":1701940514933},{"_id":"themes/fluid/layout/_partials/plugins/anchorjs.ejs","hash":"40181442d3a2b8734783a0ad7caf2d2522e3f2ab","modified":1701940514935},{"_id":"themes/fluid/layout/_partials/plugins/code-widget.ejs","hash":"3a505cba37942badf62a56bbb8b605b72af330aa","modified":1701940514935},{"_id":"themes/fluid/layout/_partials/plugins/fancybox.ejs","hash":"9d1ea2a46b8c8ad8c168594d578f40764818ef13","modified":1701940514936},{"_id":"themes/fluid/layout/_partials/plugins/encrypt.ejs","hash":"0fff24cf5bf99fbe5c56c292e2eac4a89bf29db4","modified":1701940514936},{"_id":"themes/fluid/layout/_partials/plugins/nprogress.ejs","hash":"4c2d39ce816b8a6dcd6b53113c8695f8bd650a23","modified":1701940514939},{"_id":"themes/fluid/layout/_partials/plugins/highlight.ejs","hash":"7529dd215b09d3557804333942377b9e20fa554e","modified":1701940514936},{"_id":"themes/fluid/layout/_partials/plugins/mermaid.ejs","hash":"03ac02762f801970d1c4e73d6ec8d4c503780e50","modified":1701940514939},{"_id":"themes/fluid/layout/_partials/post/copyright.ejs","hash":"529f3069742b3d338c769ba2d836e7f3c342a09d","modified":1701940514940},{"_id":"themes/fluid/layout/_partials/plugins/math.ejs","hash":"dcbf9a381ee76f2f1f75fcbc22c50a502ec85023","modified":1701940514937},{"_id":"themes/fluid/layout/_partials/plugins/typed.ejs","hash":"f345374885cd6a334f09a11f59c443b5d577c06c","modified":1701940514939},{"_id":"themes/fluid/layout/_partials/post/category-bar.ejs","hash":"8772bce97ed297e7a88523f4e939ed6436c22f87","modified":1701940514940},{"_id":"themes/fluid/scripts/events/lib/compatible-configs.js","hash":"ef474d1fa5bbafc52619ced0f9dc7eaf2affb363","modified":1701940514948},{"_id":"themes/fluid/scripts/events/lib/footnote.js","hash":"b2f61b91fffb17d11ad56811f07d52d23f012741","modified":1701940514949},{"_id":"themes/fluid/layout/_partials/post/meta-bottom.ejs","hash":"375974ec017696e294dc12469fb0ae257800dc2d","modified":1701940514941},{"_id":"themes/fluid/layout/_partials/post/sidebar-left.ejs","hash":"9992c99b3eb728ad195970e1b84d665f2c8691c4","modified":1701940514941},{"_id":"themes/fluid/scripts/events/lib/hello.js","hash":"44c5eb97b98813a07c659d6afedd17fad63b1821","modified":1701940514949},{"_id":"themes/fluid/scripts/events/lib/highlight.js","hash":"8d3ae1ec6660fbb0e563bc08c2f8deefde1f3bf6","modified":1701940514950},{"_id":"themes/fluid/scripts/events/lib/injects.js","hash":"5ae4b07204683e54b5a1b74e931702bbce2ac23e","modified":1701940514950},{"_id":"themes/fluid/scripts/events/lib/lazyload.js","hash":"9ba0d4bc224e22af8a5a48d6ff13e5a0fcfee2a4","modified":1701940514950},{"_id":"themes/fluid/scripts/events/lib/merge-configs.js","hash":"7c944c43b2ece5dd84859bd9d1fe955d13427387","modified":1701940514951},{"_id":"themes/fluid/source/css/_functions/base.styl","hash":"2e46f3f4e2c9fe34c1ff1c598738fc7349ae8188","modified":1701940514962},{"_id":"themes/fluid/source/css/_mixins/base.styl","hash":"542e306ee9494e8a78e44d6d7d409605d94caeb3","modified":1701940514962},{"_id":"themes/fluid/layout/_partials/post/sidebar-right.ejs","hash":"d5fcc9b60e02f869a29a8c17a16a6028ecc1e6d8","modified":1701940514942},{"_id":"themes/fluid/source/css/_variables/base.styl","hash":"4ed5f0ae105ef4c7dd92eaf652ceda176c38e502","modified":1701940514977},{"_id":"themes/fluid/source/css/_pages/_about/about.styl","hash":"97fe42516ea531fdad771489b68aa8b2a7f6ae46","modified":1701940514963},{"_id":"themes/fluid/layout/_partials/post/toc.ejs","hash":"635a89060fbf72eeda066fc4bd0a97462f069417","modified":1701940514942},{"_id":"themes/fluid/source/css/_pages/pages.styl","hash":"b8e887bc7fb3b765a1f8ec9448eff8603a41984f","modified":1701940514977},{"_id":"themes/fluid/source/css/_pages/_archive/archive.styl","hash":"c475e6681546d30350eaed11f23081ecae80c375","modified":1701940514963},{"_id":"themes/fluid/layout/_partials/post/meta-top.ejs","hash":"ce6e9f578f4faa45840abddf8f46af3f4b69c177","modified":1701940514941},{"_id":"themes/fluid/source/css/_pages/_base/inline.styl","hash":"411a3fa3f924a87e00ff04d18b5c83283b049a4d","modified":1701940514971},{"_id":"themes/fluid/source/css/_pages/_base/base.styl","hash":"643284c567665f96915f0b64e59934dda315f74d","modified":1701940514970},{"_id":"themes/fluid/source/css/_pages/_base/keyframes.styl","hash":"94065ea50f5bef7566d184f2422f6ac20866ba22","modified":1701940514971},{"_id":"themes/fluid/source/css/_pages/_base/print.styl","hash":"166afbc596ea4b552bad7290ec372d25ec34db7b","modified":1701940514971},{"_id":"themes/fluid/source/css/_pages/_base/color-schema.styl","hash":"e413212e5a667d5b8299c4d2a39c4dfa1378d119","modified":1701940514970},{"_id":"themes/fluid/source/css/_pages/_category/category-bar.styl","hash":"cc6df43fef6bb3efecbfdd8b9e467424a1dea581","modified":1701940514972},{"_id":"themes/fluid/source/css/_pages/_category/category-chain.styl","hash":"0cdf7ef50dfd0669d3b257821384ff31cd81b7c9","modified":1701940514972},{"_id":"themes/fluid/source/css/_pages/_category/category-list.styl","hash":"7edfe1b571ecca7d08f5f4dbcf76f4ffdcfbf0b5","modified":1701940514973},{"_id":"themes/fluid/source/css/_pages/_index/index.styl","hash":"0acbd71633bcc7191672ea4e1b2277bea350d73b","modified":1701940514973},{"_id":"themes/fluid/source/css/_pages/_links/links.styl","hash":"5c7f2044e3f1da05a3229537c06bd879836f8d6e","modified":1701940514973},{"_id":"themes/fluid/source/css/_pages/_post/comment.styl","hash":"780f3788e7357bcd3f3262d781cb91bb53976a93","modified":1701940514974},{"_id":"themes/fluid/source/css/_pages/_post/markdown.styl","hash":"1e3d3a82721e7c10bcfcecec6d81cf2979039452","modified":1701940514975},{"_id":"themes/fluid/source/css/_pages/_post/highlight.styl","hash":"4df764d298fe556e501db4afc2b05686fe6ebcfb","modified":1701940514974},{"_id":"themes/fluid/source/css/_pages/_post/post-tag.styl","hash":"27f70062415ccf66a9b6f4952db124fc1471fda5","modified":1701940514976},{"_id":"themes/fluid/source/css/_pages/_post/post-page.styl","hash":"ecf3488566b374d564ae985c61e08562ba908023","modified":1701940514975},{"_id":"themes/fluid/source/css/_pages/_tag/tags.styl","hash":"65bfc01c76abc927fa1a23bf2422892b0d566c3f","modified":1701940514976},{"_id":"themes/fluid/source/css/_pages/_base/_widget/code-widget.styl","hash":"b66ab013f0f37d724a149b85b3c7432afcf460ad","modified":1701940514965},{"_id":"themes/fluid/source/css/_pages/_base/_widget/banner.styl","hash":"7a0bd629bc234fc75e3cc8e3715ffada92f09e73","modified":1701940514964},{"_id":"themes/fluid/source/css/_pages/_base/_widget/anchorjs.styl","hash":"e0cebda4a6f499aff75e71417d88caa7ceb13b94","modified":1701940514964},{"_id":"themes/fluid/source/css/_pages/_base/_widget/board.styl","hash":"4397037fc3f0033dbe546c33cd9dbdabd8cb1632","modified":1701940514964},{"_id":"themes/fluid/source/css/_pages/_base/_widget/copyright.styl","hash":"26f71a9cd60d96bb0cb5bbdf58150b8e524d9707","modified":1701940514965},{"_id":"themes/fluid/source/css/_pages/_base/_widget/footer.styl","hash":"2caaca71dd1ff63d583099ed817677dd267b457e","modified":1701940514966},{"_id":"themes/fluid/source/css/_pages/_base/_widget/footnote.styl","hash":"ae9289cc89649af2042907f8a003303b987f3404","modified":1701940514966},{"_id":"themes/fluid/source/css/_pages/_base/_widget/header.styl","hash":"c4459248c66ea1326feed021179b847ae91d465f","modified":1701940514966},{"_id":"themes/fluid/source/css/_pages/_base/_widget/modal.styl","hash":"adf6c1e5c8e1fb41c77ce6e2258001df61245aa2","modified":1701940514967},{"_id":"themes/fluid/source/css/_pages/_base/_widget/ngrogress.styl","hash":"5d225357b4a58d46118e6616377168336ed44cb2","modified":1701940514967},{"_id":"themes/fluid/source/css/_pages/_base/_widget/noscript.styl","hash":"0cf2f2bb44f456150d428016675d5876a9d2e2aa","modified":1701940514968},{"_id":"themes/fluid/source/css/_pages/_base/_widget/pagination.styl","hash":"8bb1b68e5f3552cb48c2ffa31edbc53646a8fb4c","modified":1701940514968},{"_id":"themes/fluid/source/css/_pages/_base/_widget/qrcode.styl","hash":"78704a94c0436097abfb0e0a57abeb3429c749b7","modified":1701940514968},{"_id":"themes/fluid/source/css/_pages/_base/_widget/search.styl","hash":"10f7e91a91e681fb9fe46f9df7707b9ef78707c8","modified":1701940514969},{"_id":"themes/fluid/source/css/_pages/_base/_widget/toc.styl","hash":"9e7452aa2372153f25d7a4675c9d36d281a65d24","modified":1701940514969},{"_id":"themes/fluid/source/css/_pages/_base/_widget/scroll-btn.styl","hash":"f0e429a27fa8a7658fcbddbb4d4dbe4afa12499a","modified":1701940514969},{"_id":"themes/fluid/source/img/default.png","hash":"e8cbb396190cecb571bd3885d2291daf0685cefa","modified":1701942611856},{"_id":"public/local-search.xml","hash":"aaed61cf1694229bd8266a63cd2cb8af924f277c","modified":1710825327730},{"_id":"public/about/index.html","hash":"c99525a80836e7a4f21a72238db2b8cdbcab5f23","modified":1707203356175},{"_id":"public/archives/index.html","hash":"5b579edf3111e501058d16ed7a120d65ed86005f","modified":1710825327730},{"_id":"public/archives/2023/index.html","hash":"dd9de9e1de28beb0a9578b3b3a482e1b4b581920","modified":1710825327730},{"_id":"public/archives/2023/11/index.html","hash":"bd6733edb8eec95fc03007622f2d3808f583f9a6","modified":1710825327730},{"_id":"public/archives/2023/12/index.html","hash":"6dd1a7e6ed54c4df2ab4d83d747f6e487442e498","modified":1710825327730},{"_id":"public/categories/js/index.html","hash":"510ecbf596719251cff70193c1a24bec8ef1db17","modified":1710825327730},{"_id":"public/categories/npm/index.html","hash":"3d0f789174010f0bbdd29ebfa90dafa825ba2219","modified":1707203356175},{"_id":"public/tags/js/index.html","hash":"37658707d333741548d0ce403cf5e9b1ca2dad39","modified":1710825327730},{"_id":"public/tags/npm/index.html","hash":"680948af7d6a73171f4ab4083f9f75d9d1db3644","modified":1707203356175},{"_id":"public/index.html","hash":"6af3bc0357045cb00be68af507b4e948a1d7439a","modified":1710825327730},{"_id":"public/tags/index.html","hash":"4658704217fe4ee9ad1cc43a9bf76773b94259b5","modified":1708681122918},{"_id":"public/categories/index.html","hash":"2c12ef9607994c88fb085147fa371843f746ae5e","modified":1710825327730},{"_id":"public/404.html","hash":"dc41ac583052518eafbb25fd350f05eee890efc1","modified":1707203356175},{"_id":"public/links/index.html","hash":"816a2bc4ac3e3a987b968acd2d66e367b5ca25ec","modified":1707203356175},{"_id":"public/2023/12/07/20231207172556/index.html","hash":"dc51bbce7ed022af46c727f692654c736bac1e32","modified":1707203356175},{"_id":"public/2023/12/07/20231207173941/index.html","hash":"6df5a6b5a161f8373223d81fe850bfc68c4cd377","modified":1707203356175},{"_id":"public/2023/11/30/20231130112354/index.html","hash":"690b4fc1e1a958fbca80f1c906ebd9316736ff5e","modified":1707203356175},{"_id":"public/2023/11/29/20231129151306/index.html","hash":"379903709a545536a152faf5c73ffa13f0f7634e","modified":1707203356175},{"_id":"public/2023/11/24/2023112410009/index.html","hash":"0b9b82b5ffd87aa90d09248a2c2d6025a6eab79f","modified":1707203356175},{"_id":"public/img/fluid.png","hash":"64b215db2cb3af98fe639e94537cb5209f959c78","modified":1701943163779},{"_id":"public/img/avatar.png","hash":"fe739a158cc128f70f780eb5fa96f388b81d478f","modified":1701943163779},{"_id":"public/img/loading.gif","hash":"2d2fc0f947940f98c21afafef39ecf226a2e8d55","modified":1701943163779},{"_id":"public/img/logo-bg.png","hash":"d774a80ea6aa56575928e2af90b7e3e70e2c5d74","modified":1701943163779},{"_id":"public/img/logo-l.png","hash":"b30334e83326c39f19ed6860e7c3881233b5be0b","modified":1708682584111},{"_id":"public/img/police_beian.png","hash":"90efded6baa2dde599a9d6b1387973e8e64923ea","modified":1701943163779},{"_id":"public/xml/local-search.xml","hash":"8c96ba6a064705602ce28d096fd7dd9069630a55","modified":1701943163779},{"_id":"public/css/gitalk.css","hash":"a57b3cc8e04a0a4a27aefa07facf5b5e7bca0e76","modified":1701943163779},{"_id":"public/css/highlight-dark.css","hash":"4720cf2051bc3580c4588d8ba4a6e09afdf92161","modified":1701943163779},{"_id":"public/css/highlight.css","hash":"04d4ddbb5e1d1007447c2fe293ee05aae9b9563e","modified":1701943163779},{"_id":"public/js/boot.js","hash":"38bd26c6b7acdafda86dda3560e6a3ca488d3c76","modified":1701943163779},{"_id":"public/js/color-schema.js","hash":"76a198f8721352ebeaf5b2ef2f4db00612da4796","modified":1701943163779},{"_id":"public/js/events.js","hash":"89e3561488a618ed0caeb9edf18e441978e29c25","modified":1701943163779},{"_id":"public/js/img-lazyload.js","hash":"cbdeca434ec4da51f488c821d51b4d23c73294af","modified":1701943163779},{"_id":"public/js/leancloud.js","hash":"eff77c7a5c399fcaefda48884980571e15243fc9","modified":1701943163779},{"_id":"public/js/local-search.js","hash":"b9945f76f8682f3ec32edfb285b26eb559f7b7e8","modified":1701943163779},{"_id":"public/js/plugins.js","hash":"c34916291e392a774ff3e85c55badb83e8661297","modified":1701943163779},{"_id":"public/js/utils.js","hash":"b82e7c289a66dfd36064470fd41c0e96fc598b43","modified":1701943163779},{"_id":"public/css/main.css","hash":"a0d32e1754460aaf8fda4646875e42cf2a9194ce","modified":1701943163779},{"_id":"public/img/default.png","hash":"e8cbb396190cecb571bd3885d2291daf0685cefa","modified":1701943163779},{"_id":"source/_posts/20231214175822.md","hash":"2d7da12ff5755e59abdfa14a6e9b318039ef50c7","modified":1702882179688},{"_id":"public/2023/12/14/20231214175822/index.html","hash":"ae853f4cfa9472de8d367c73b1287e70754e5b0a","modified":1708681122918},{"_id":"public/tags/github/index.html","hash":"07fa7008e83483b389f3994b657c4b3639d9a14a","modified":1707203356175},{"_id":"public/categories/github/index.html","hash":"d64db36f7290bc8f695ccf2288f9f7e499aa251b","modified":1707203356175},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_tag/tag.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/package.json","hash":"232895f98b7468cee4da6e5bbd235606024c046d","modified":1707120391611},{"_id":"node_modules/hexo-theme-fluid/LICENSE","hash":"26f9356fd6e84b5a88df6d9014378f41b65ba209","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/README.md","hash":"ff9b0e1fb9dba665af2f1e4a577f8cb9e840464b","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/_config.yml","hash":"759d78d97cfe364a4bcf0b5cd2d3505967674276","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/languages/de.yml","hash":"0e7d455d9e004ff15d8924b7a0c35cea25ee5b1d","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/languages/eo.yml","hash":"a556251cc50a5680578c03f1efbf252b1f4ab860","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/languages/es.yml","hash":"7112594259c88c04714be152af7fd377687dad40","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/languages/en.yml","hash":"cb11b39f44ea069652c9647179606b6cecc98d50","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/languages/ja.yml","hash":"3dd6d20f8d26585a7c154a8e59fe8d5d902f4c6a","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/languages/ru.yml","hash":"7dc78f22696649a4c68dc65a9b52d9a992fa82a0","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/languages/zh-CN.yml","hash":"2253e1bc61694b3bdc5e434ea2660d13d941b50e","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/languages/zh-HK.yml","hash":"80ed400a7adaa92ea54fc7f5d534c9af795bed00","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/languages/zh-TW.yml","hash":"596d031dff3826ae8e4ffc8931fff28977b73247","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/404.ejs","hash":"b84d575c7b7f778b4cb64e89ad3d0aed4a896820","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/about.ejs","hash":"163bee643e6a38912d3ae70923c83c48d57222e7","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/archive.ejs","hash":"7c1f44005849791feae4abaa10fae4cb983d3277","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/category.ejs","hash":"f099161b738a16a32253f42085b5444f902018ed","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/index.ejs","hash":"33c3317cdcee062789de2336dd8d0cc7f86d3650","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/categories.ejs","hash":"13859726c27b6c79b5876ec174176d0f9c1ee164","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/layout.ejs","hash":"7e0023474128fbe4d68c467704c41f1712432415","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/links.ejs","hash":"1cac32ec4579aaf7b9fa39d317497331d4c5e1dd","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/tags.ejs","hash":"1d06af34b6cf1d8a20d2eb565e309326ceba309f","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/page.ejs","hash":"ed5007a3feb8f14d3d2843271bfb298eb0c56219","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/tag.ejs","hash":"9d686364c4d16a1a9219471623af452035c5b966","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/post.ejs","hash":"9bf0d357a607a282f3b9cb04525a4df0cc2a8b76","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/archive-list.ejs","hash":"7520fbf91f762207c2ab06b2c293235cd5b23905","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/category-chains.ejs","hash":"18309584aab83bc4deb20723ebad832149dd2e24","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/css.ejs","hash":"85f6e051550907681ab4ed2e268ac8f6e9ebf931","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/head.ejs","hash":"7b7b1d098726e86687a15fe3d520d178577ffcae","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/header.ejs","hash":"0d5e397d30051e5fbabe7b47cfd1f1e6a5820af1","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/markdown-plugins.ejs","hash":"fc4bdf7de0cf1a66d0e5e4fba1b31d6f7ed49468","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/comments.ejs","hash":"d707c47b2638c94e489bc43d4cfd098b7c58447f","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/category-list.ejs","hash":"f8d2f1907450e61968e6d54443e9be8138196a77","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/footer.ejs","hash":"10ccfb8eef4e16182183c9a3e175c90d5b6397d3","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/scripts/events/index.js","hash":"79de5a379b28cad759a49048351c7f6b8915bd7d","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/scripts/filters/default-injects.js","hash":"b2013ae8e189cd07ebc8a2ff48a78e153345210f","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/scripts/filters/locals.js","hash":"58d0fec976f6b1d35e7ea03edc45414088acf05c","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/scripts/filters/post-filter.js","hash":"82bb06686158ebe160a631c79f156cd4fde35656","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/scripts/generators/index-generator.js","hash":"9159fc22fa84a7b605dd15fe4104f01fe9c71147","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/scripts/generators/local-search.js","hash":"9ac5ddad06e9b0e6015ce531430018182a4bc0fa","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/scripts/generators/pages.js","hash":"d3e75f53c59674d171309e50702954671f31f1a4","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/scripts/helpers/date.js","hash":"9bda6382f61b40a20c24af466fe10c8366ebb74c","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/scripts/helpers/engine.js","hash":"d3a231d106795ce99cb0bc77eb65f9ae44515933","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/paginator.ejs","hash":"0f38a2c238169edcb63fc46c23bfc529ff3859b7","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/search.ejs","hash":"70e1c929e084ca8a2648cedabf29b372511ea2b8","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/scripts/helpers/export-config.js","hash":"8e67b522c47aa250860e3fe2c733f1f958a506c0","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/scripts/helpers/import.js","hash":"ca53e8dbf7d44cfd372cfa79ac60f35a7d5b0076","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/scripts/helpers/injects.js","hash":"1ad2ae6b11bd8806ee7dd6eb7140d8b54a95d613","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/scripts/helpers/page.js","hash":"4607607445233b3029ef20ed5e91de0da0a7f9c5","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/scripts/helpers/scope.js","hash":"d41d9d658fcb54964b388598e996747aadb85b0f","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/scripts/helpers/url.js","hash":"2a6a8288176d0e0f6ec008056bf2745a86e8943e","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/scripts/helpers/utils.js","hash":"966689d7c5e4320008285395fbaa2751f6209be5","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/scripts/helpers/wordcount.js","hash":"4d48c424e47ff9a17a563167ea5f480890267adf","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/scripts/tags/button.js","hash":"3eb43a8cdea0a64576ad6b31b4df6c2bf5698d4c","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/scripts/tags/checkbox.js","hash":"0857aa86db2a711ae5c77218a9e3fa686d0e87b1","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/scripts/tags/fold.js","hash":"73e4fd12ce3e47981479391ed354b7d9d3279f70","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/scripts/tags/group-image.js","hash":"4aeebb797026f1df25646a5d69f7fde79b1bcd26","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/scripts/tags/mermaid.js","hash":"75160561e1ef3603b6d2ad2938464ab1cb77fd38","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/scripts/tags/label.js","hash":"f05a6d32cca79535b22907dc03edb9d3fa2d8176","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/scripts/utils/compare-versions.js","hash":"dbbc928c914fc2bd242cd66aa0c45971aec13a5d","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/scripts/utils/crypto.js","hash":"ae4ad8a188ef5b3fa6818b01629fc962b3de8551","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/scripts/utils/object.js","hash":"33b57e4decdc5e75c518859f168c8ba80b2c665b","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/scripts/utils/resolve.js","hash":"8c4a8b62aa8608f12f1e9046231dff04859dc3e9","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/scripts/utils/url-join.js","hash":"718aab5e7b2059a06b093ca738de420d9afa44ba","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/scripts.ejs","hash":"da5810785105e5075861593c7ac22c7aa9665a72","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/css/main.styl","hash":"855ae5fe229c51afa57f7645f6997a27a705d7e4","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/css/highlight-dark.styl","hash":"45695ef75c31a4aa57324dd408b7e2327a337018","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/css/highlight.styl","hash":"a9efc52a646a9e585439c768557e3e3c9e3326dc","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/img/avatar.png","hash":"fe739a158cc128f70f780eb5fa96f388b81d478f","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/css/gitalk.css","hash":"a57b3cc8e04a0a4a27aefa07facf5b5e7bca0e76","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/img/police_beian.png","hash":"90efded6baa2dde599a9d6b1387973e8e64923ea","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/img/fluid.png","hash":"64b215db2cb3af98fe639e94537cb5209f959c78","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/js/boot.js","hash":"38bd26c6b7acdafda86dda3560e6a3ca488d3c76","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/img/loading.gif","hash":"2d2fc0f947940f98c21afafef39ecf226a2e8d55","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/js/color-schema.js","hash":"c5939d14065d38c86e16d1642e154dde5a23e830","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/js/events.js","hash":"5891534506b959a2f559f29e122baa3eb9159d93","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/js/img-lazyload.js","hash":"cbdeca434ec4da51f488c821d51b4d23c73294af","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/js/local-search.js","hash":"b9945f76f8682f3ec32edfb285b26eb559f7b7e8","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/js/plugins.js","hash":"c34916291e392a774ff3e85c55badb83e8661297","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/js/leancloud.js","hash":"eff77c7a5c399fcaefda48884980571e15243fc9","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/js/utils.js","hash":"b82e7c289a66dfd36064470fd41c0e96fc598b43","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/scripts/tags/note.js","hash":"e3b456a079e5dc0032473b516c865b20f83d2c26","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/comments/changyan.ejs","hash":"c9b2d68ed3d375f1953e7007307d2a3f75ed6249","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/comments/cusdis.ejs","hash":"5f9dc012be27040bbe874d0c093c0d53958cc987","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/comments/discuss.ejs","hash":"98d065b58ce06b7d18bff3c974e96fa0f34ae03a","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/comments/disqus.ejs","hash":"aab4a4d24c55231a37db308ae94414319cecdd9b","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/xml/local-search.xml","hash":"8c96ba6a064705602ce28d096fd7dd9069630a55","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/comments/giscus.ejs","hash":"95f8b866b158eff9352c381c243b332a155a5110","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/comments/livere.ejs","hash":"2264758fed57542a7389c7aa9f00f1aefa17eb87","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/comments/gitalk.ejs","hash":"843bc141a4545eb20d1c92fb63c85d459b4271ec","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/comments/remark42.ejs","hash":"d4e9532feeb02aed61bd15eda536b5b631454dac","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/comments/waline.ejs","hash":"12727da7cf3ac83443270f550be4d1c06135b52b","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/comments/twikoo.ejs","hash":"d84bcb5ccd78470a60c067fc914ac0ac67ac8777","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/comments/utterances.ejs","hash":"c7ccf7f28308334a6da6f5425b141a24b5eca0e2","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/footer/statistics.ejs","hash":"454d8dd4c39f9494ebeb03ca0746f5bc122af76a","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/comments/valine.ejs","hash":"19ba937553dddd317f827d682661a1066a7b1f30","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/footer/beian.ejs","hash":"4fb9b5dd3f3e41a586d6af44e5069afe7c81fff2","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/header/banner.ejs","hash":"e07757b59e7b89eea213d0e595cb5932f812fd32","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/plugins/analytics.ejs","hash":"4f68c80bd1395e2f6d11e373116e54de11cb62e8","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/header/navigation.ejs","hash":"37d750428772d7c71ba36ce0c2540780d90fadea","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/plugins/code-widget.ejs","hash":"3a505cba37942badf62a56bbb8b605b72af330aa","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/plugins/fancybox.ejs","hash":"9d1ea2a46b8c8ad8c168594d578f40764818ef13","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/plugins/highlight.ejs","hash":"7529dd215b09d3557804333942377b9e20fa554e","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/plugins/mermaid.ejs","hash":"03ac02762f801970d1c4e73d6ec8d4c503780e50","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/plugins/math.ejs","hash":"dcbf9a381ee76f2f1f75fcbc22c50a502ec85023","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/plugins/encrypt.ejs","hash":"0fff24cf5bf99fbe5c56c292e2eac4a89bf29db4","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/plugins/moment.ejs","hash":"4ff3fb1b60ccc95a0af3bbdbd0757fedefc088b5","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/plugins/typed.ejs","hash":"f345374885cd6a334f09a11f59c443b5d577c06c","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/plugins/anchorjs.ejs","hash":"40181442d3a2b8734783a0ad7caf2d2522e3f2ab","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/post/copyright.ejs","hash":"529f3069742b3d338c769ba2d836e7f3c342a09d","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/post/meta-top.ejs","hash":"ce6e9f578f4faa45840abddf8f46af3f4b69c177","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/post/sidebar-right.ejs","hash":"d5fcc9b60e02f869a29a8c17a16a6028ecc1e6d8","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/post/meta-bottom.ejs","hash":"375974ec017696e294dc12469fb0ae257800dc2d","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/scripts/events/lib/compatible-configs.js","hash":"ef474d1fa5bbafc52619ced0f9dc7eaf2affb363","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/scripts/events/lib/hello.js","hash":"bd8376e1cf7892dc2daa58f2f443574be559fdbf","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/scripts/events/lib/footnote.js","hash":"c19ac8050b82c3676b0332a56099ccfcc36d9d52","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/scripts/events/lib/highlight.js","hash":"a5fe1deccb73b5f578797dbb11038efc15f63ce8","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/scripts/events/lib/lazyload.js","hash":"9ba0d4bc224e22af8a5a48d6ff13e5a0fcfee2a4","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/scripts/events/lib/merge-configs.js","hash":"7c944c43b2ece5dd84859bd9d1fe955d13427387","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/plugins/nprogress.ejs","hash":"4c2d39ce816b8a6dcd6b53113c8695f8bd650a23","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/post/sidebar-left.ejs","hash":"9992c99b3eb728ad195970e1b84d665f2c8691c4","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/post/toc.ejs","hash":"635a89060fbf72eeda066fc4bd0a97462f069417","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/css/_mixins/base.styl","hash":"542e306ee9494e8a78e44d6d7d409605d94caeb3","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/css/_functions/base.styl","hash":"2e46f3f4e2c9fe34c1ff1c598738fc7349ae8188","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/css/_variables/base.styl","hash":"4ed5f0ae105ef4c7dd92eaf652ceda176c38e502","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_about/about.styl","hash":"97fe42516ea531fdad771489b68aa8b2a7f6ae46","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/post/category-bar.ejs","hash":"8772bce97ed297e7a88523f4e939ed6436c22f87","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_archive/archive.styl","hash":"c475e6681546d30350eaed11f23081ecae80c375","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/color-schema.styl","hash":"85492ef64d7e5f70f0f7e46d570bbc911e686d7e","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/base.styl","hash":"643284c567665f96915f0b64e59934dda315f74d","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/pages.styl","hash":"b8e887bc7fb3b765a1f8ec9448eff8603a41984f","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/keyframes.styl","hash":"94065ea50f5bef7566d184f2422f6ac20866ba22","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/inline.styl","hash":"411a3fa3f924a87e00ff04d18b5c83283b049a4d","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/print.styl","hash":"166afbc596ea4b552bad7290ec372d25ec34db7b","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_category/category-bar.styl","hash":"cc6df43fef6bb3efecbfdd8b9e467424a1dea581","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_category/category-chain.styl","hash":"0cdf7ef50dfd0669d3b257821384ff31cd81b7c9","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_links/links.styl","hash":"5c7f2044e3f1da05a3229537c06bd879836f8d6e","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_category/category-list.styl","hash":"7edfe1b571ecca7d08f5f4dbcf76f4ffdcfbf0b5","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_post/markdown.styl","hash":"1e3d3a82721e7c10bcfcecec6d81cf2979039452","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_post/post-tag.styl","hash":"c96d36aa8fe20f0c3c1a29ee2473cd8064b10f73","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_index/index.styl","hash":"25fb6fa4c783b847c632584c49a7e1593cdb2f5d","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_post/comment.styl","hash":"780f3788e7357bcd3f3262d781cb91bb53976a93","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_post/post-page.styl","hash":"cd432a6411ccac7df47e6a300fb1a872cfc763e7","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_post/highlight.styl","hash":"4df764d298fe556e501db4afc2b05686fe6ebcfb","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/banner.styl","hash":"7a0bd629bc234fc75e3cc8e3715ffada92f09e73","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/anchorjs.styl","hash":"e0cebda4a6f499aff75e71417d88caa7ceb13b94","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/board.styl","hash":"4397037fc3f0033dbe546c33cd9dbdabd8cb1632","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_tag/tags.styl","hash":"65bfc01c76abc927fa1a23bf2422892b0d566c3f","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/code-widget.styl","hash":"b66ab013f0f37d724a149b85b3c7432afcf460ad","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/copyright.styl","hash":"26f71a9cd60d96bb0cb5bbdf58150b8e524d9707","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/footer.styl","hash":"2caaca71dd1ff63d583099ed817677dd267b457e","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/footnote.styl","hash":"ae9289cc89649af2042907f8a003303b987f3404","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/header.styl","hash":"c4459248c66ea1326feed021179b847ae91d465f","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/ngrogress.styl","hash":"5d225357b4a58d46118e6616377168336ed44cb2","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/modal.styl","hash":"adf6c1e5c8e1fb41c77ce6e2258001df61245aa2","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/noscript.styl","hash":"0cf2f2bb44f456150d428016675d5876a9d2e2aa","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/pagination.styl","hash":"8bb1b68e5f3552cb48c2ffa31edbc53646a8fb4c","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/qrcode.styl","hash":"78704a94c0436097abfb0e0a57abeb3429c749b7","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/scroll-btn.styl","hash":"f0e429a27fa8a7658fcbddbb4d4dbe4afa12499a","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/scripts/events/lib/injects.js","hash":"5ae4b07204683e54b5a1b74e931702bbce2ac23e","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/toc.styl","hash":"9e7452aa2372153f25d7a4675c9d36d281a65d24","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/search.styl","hash":"10f7e91a91e681fb9fe46f9df7707b9ef78707c8","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/img/default.png","hash":"167a12978d80371cf578c8a2e45c24a2eb25b6fb","modified":499162500000},{"_id":"source/img/default.png","hash":"e8cbb396190cecb571bd3885d2291daf0685cefa","modified":1707121575487},{"_id":"source/_posts/20240223162747.md","hash":"20dd36c96ebdb3969409e1fb5ca5cfc16e9ac815","modified":1708681081672},{"_id":"public/archives/2024/index.html","hash":"6aacbdf7ebbcc4a93f665cf97a5b310c8497d02b","modified":1710825327730},{"_id":"public/archives/2024/02/index.html","hash":"4a1a6b7f08ccc513d65d89effb5d1f02a4f745bd","modified":1710825327730},{"_id":"public/tags/开发日常/index.html","hash":"3d175b65cc3a9e3c738fa355e13e1c8039b0788c","modified":1708681122918},{"_id":"public/categories/开发日常/index.html","hash":"768f6019b1693c50e6a0764ac7ba42e7f7cfb047","modified":1708681122918},{"_id":"public/2024/02/23/20240223162747/index.html","hash":"daac72ec34295c9336712a19cb365776f702771c","modified":1710306036421},{"_id":"source/img/logo-l.png","hash":"b30334e83326c39f19ed6860e7c3881233b5be0b","modified":1708682197548},{"_id":"source/_posts/20240313123053.md","hash":"0d33b6e34aa6dace3de363fe7d8d79de0b9d2d04","modified":1710311849242},{"_id":"public/2024/03/13/20240313123053/index.html","hash":"75dc988a6ed92fe019fbbd86c10799562658bc09","modified":1710825327730},{"_id":"public/archives/2024/03/index.html","hash":"09a9492d5cb4b7a9061bfd8f3186a3915573d954","modified":1710825327730},{"_id":"source/_posts/20240319124707.md","hash":"3739cb4163cf1bd318a66ae98c83a6fd02d3f267","modified":1710825040682},{"_id":"public/2024/03/19/20240319124707/index.html","hash":"69e7019476dfbd619d2d75fb9f83a92c88eedb76","modified":1710825327730}],"Category":[{"name":"js","_id":"clpv10m2t00033xo989u34dny"},{"name":"npm","_id":"clpv10m2x000f3xo9b0dt3grd"},{"name":"github","_id":"clq51s05w0001e4o99ftx80h6"},{"name":"开发日常","_id":"clsyedyp7000317o913y5a0y1"}],"Data":[],"Page":[{"title":"关于我","date":"2023-11-23T10:54:19.000Z","layout":"about","_content":"\n<p style=\"display:flex;justify-content:center\"><img src=\"../img/logo-l.png\" style=\"width:200px\"/></p>\n","source":"about/index.md","raw":"---\ntitle: 关于我\ndate: 2023-11-23 18:54:19\nlayout: about\n---\n\n<p style=\"display:flex;justify-content:center\"><img src=\"../img/logo-l.png\" style=\"width:200px\"/></p>\n","updated":"2023-12-07T09:15:14.908Z","path":"about/index.html","comments":1,"_id":"clpv10m2p00003xo9483x26mu","content":"<p style=\"display:flex;justify-content:center\"><img src=\"../img/logo-l.png\" style=\"width:200px\"/></p>\n","excerpt":"","more":"<p style=\"display:flex;justify-content:center\"><img src=\"../img/logo-l.png\" style=\"width:200px\"/></p>\n"}],"Post":[{"title":"判断dom是否在视图中出现","excerpt":"判断dom是否在视图中出现,多用于页面滑动埋点","_content":"\n- 元素完全在可视区域中出现\n\n```\n/*\nreturn  true 完全出现  false  未完全出现\n*/\nfunction elementInViewport(el) {\n  var top = el.offsetTop;\n  var left = el.offsetLeft;\n  var width = el.offsetWidth;\n  var height = el.offsetHeight;\n\n  while(el.offsetParent) {\n    el = el.offsetParent;\n    top += el.offsetTop;\n    left += el.offsetLeft;\n  }\n\n  return (\n    top >= window.pageYOffset &&\n    left >= window.pageXOffset &&\n    (top + height) <= (window.pageYOffset + window.innerHeight) &&\n    (left + width) <= (window.pageXOffset + window.innerWidth)\n  );\n}\n\n```\n\n- 元素任何一部分在可视区域出现\n\n```\n\n    function elementInViewport2(el) {\n      var top = el.offsetTop;\n      var left = el.offsetLeft;\n      var width = el.offsetWidth;\n      var height = el.offsetHeight;\n\n      while(el.offsetParent) {\n        el = el.offsetParent;\n        top += el.offsetTop;\n        left += el.offsetLeft;\n      }\n\n      return (\n        top < (window.pageYOffset + window.innerHeight) &&\n        left < (window.pageXOffset + window.innerWidth) &&\n        (top + height) > window.pageYOffset &&\n        (left + width) > window.pageXOffset\n      );\n    }\n```\n","source":"_posts/2023112410009.md","raw":"---\ntitle: 判断dom是否在视图中出现\ntags: js\nexcerpt: 判断dom是否在视图中出现,多用于页面滑动埋点\ncategories: js\n---\n\n- 元素完全在可视区域中出现\n\n```\n/*\nreturn  true 完全出现  false  未完全出现\n*/\nfunction elementInViewport(el) {\n  var top = el.offsetTop;\n  var left = el.offsetLeft;\n  var width = el.offsetWidth;\n  var height = el.offsetHeight;\n\n  while(el.offsetParent) {\n    el = el.offsetParent;\n    top += el.offsetTop;\n    left += el.offsetLeft;\n  }\n\n  return (\n    top >= window.pageYOffset &&\n    left >= window.pageXOffset &&\n    (top + height) <= (window.pageYOffset + window.innerHeight) &&\n    (left + width) <= (window.pageXOffset + window.innerWidth)\n  );\n}\n\n```\n\n- 元素任何一部分在可视区域出现\n\n```\n\n    function elementInViewport2(el) {\n      var top = el.offsetTop;\n      var left = el.offsetLeft;\n      var width = el.offsetWidth;\n      var height = el.offsetHeight;\n\n      while(el.offsetParent) {\n        el = el.offsetParent;\n        top += el.offsetTop;\n        left += el.offsetLeft;\n      }\n\n      return (\n        top < (window.pageYOffset + window.innerHeight) &&\n        left < (window.pageXOffset + window.innerWidth) &&\n        (top + height) > window.pageYOffset &&\n        (left + width) > window.pageXOffset\n      );\n    }\n```\n","slug":"2023112410009","published":1,"date":"2023-11-24T02:59:45.406Z","updated":"2023-12-07T09:24:31.927Z","comments":1,"layout":"post","photos":[],"_id":"clpv10m2q00013xo9futhfdo8","content":"<ul>\n<li>元素完全在可视区域中出现</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs javascript\"><span class=\"hljs-comment\">/*</span><br><span class=\"hljs-comment\">return  true 完全出现  false  未完全出现</span><br><span class=\"hljs-comment\">*/</span><br><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">elementInViewport</span>(<span class=\"hljs-params\">el</span>) &#123;<br>  <span class=\"hljs-keyword\">var</span> top = el.<span class=\"hljs-property\">offsetTop</span>;<br>  <span class=\"hljs-keyword\">var</span> left = el.<span class=\"hljs-property\">offsetLeft</span>;<br>  <span class=\"hljs-keyword\">var</span> width = el.<span class=\"hljs-property\">offsetWidth</span>;<br>  <span class=\"hljs-keyword\">var</span> height = el.<span class=\"hljs-property\">offsetHeight</span>;<br><br>  <span class=\"hljs-keyword\">while</span>(el.<span class=\"hljs-property\">offsetParent</span>) &#123;<br>    el = el.<span class=\"hljs-property\">offsetParent</span>;<br>    top += el.<span class=\"hljs-property\">offsetTop</span>;<br>    left += el.<span class=\"hljs-property\">offsetLeft</span>;<br>  &#125;<br><br>  <span class=\"hljs-keyword\">return</span> (<br>    top &gt;= <span class=\"hljs-variable language_\">window</span>.<span class=\"hljs-property\">pageYOffset</span> &amp;&amp;<br>    left &gt;= <span class=\"hljs-variable language_\">window</span>.<span class=\"hljs-property\">pageXOffset</span> &amp;&amp;<br>    (top + height) &lt;= (<span class=\"hljs-variable language_\">window</span>.<span class=\"hljs-property\">pageYOffset</span> + <span class=\"hljs-variable language_\">window</span>.<span class=\"hljs-property\">innerHeight</span>) &amp;&amp;<br>    (left + width) &lt;= (<span class=\"hljs-variable language_\">window</span>.<span class=\"hljs-property\">pageXOffset</span> + <span class=\"hljs-variable language_\">window</span>.<span class=\"hljs-property\">innerWidth</span>)<br>  );<br>&#125;<br><br></code></pre></td></tr></table></figure>\n\n<ul>\n<li>元素任何一部分在可视区域出现</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs javascript\"><br><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">elementInViewport2</span>(<span class=\"hljs-params\">el</span>) &#123;<br>  <span class=\"hljs-keyword\">var</span> top = el.<span class=\"hljs-property\">offsetTop</span>;<br>  <span class=\"hljs-keyword\">var</span> left = el.<span class=\"hljs-property\">offsetLeft</span>;<br>  <span class=\"hljs-keyword\">var</span> width = el.<span class=\"hljs-property\">offsetWidth</span>;<br>  <span class=\"hljs-keyword\">var</span> height = el.<span class=\"hljs-property\">offsetHeight</span>;<br><br>  <span class=\"hljs-keyword\">while</span>(el.<span class=\"hljs-property\">offsetParent</span>) &#123;<br>    el = el.<span class=\"hljs-property\">offsetParent</span>;<br>    top += el.<span class=\"hljs-property\">offsetTop</span>;<br>    left += el.<span class=\"hljs-property\">offsetLeft</span>;<br>  &#125;<br><br>  <span class=\"hljs-keyword\">return</span> (<br>    top &lt; (<span class=\"hljs-variable language_\">window</span>.<span class=\"hljs-property\">pageYOffset</span> + <span class=\"hljs-variable language_\">window</span>.<span class=\"hljs-property\">innerHeight</span>) &amp;&amp;<br>    left &lt; (<span class=\"hljs-variable language_\">window</span>.<span class=\"hljs-property\">pageXOffset</span> + <span class=\"hljs-variable language_\">window</span>.<span class=\"hljs-property\">innerWidth</span>) &amp;&amp;<br>    (top + height) &gt; <span class=\"hljs-variable language_\">window</span>.<span class=\"hljs-property\">pageYOffset</span> &amp;&amp;<br>    (left + width) &gt; <span class=\"hljs-variable language_\">window</span>.<span class=\"hljs-property\">pageXOffset</span><br>  );<br>&#125;<br></code></pre></td></tr></table></figure>\n","more":"<ul>\n<li>元素完全在可视区域中出现</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs javascript\"><span class=\"hljs-comment\">/*</span><br><span class=\"hljs-comment\">return  true 完全出现  false  未完全出现</span><br><span class=\"hljs-comment\">*/</span><br><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">elementInViewport</span>(<span class=\"hljs-params\">el</span>) &#123;<br>  <span class=\"hljs-keyword\">var</span> top = el.<span class=\"hljs-property\">offsetTop</span>;<br>  <span class=\"hljs-keyword\">var</span> left = el.<span class=\"hljs-property\">offsetLeft</span>;<br>  <span class=\"hljs-keyword\">var</span> width = el.<span class=\"hljs-property\">offsetWidth</span>;<br>  <span class=\"hljs-keyword\">var</span> height = el.<span class=\"hljs-property\">offsetHeight</span>;<br><br>  <span class=\"hljs-keyword\">while</span>(el.<span class=\"hljs-property\">offsetParent</span>) &#123;<br>    el = el.<span class=\"hljs-property\">offsetParent</span>;<br>    top += el.<span class=\"hljs-property\">offsetTop</span>;<br>    left += el.<span class=\"hljs-property\">offsetLeft</span>;<br>  &#125;<br><br>  <span class=\"hljs-keyword\">return</span> (<br>    top &gt;= <span class=\"hljs-variable language_\">window</span>.<span class=\"hljs-property\">pageYOffset</span> &amp;&amp;<br>    left &gt;= <span class=\"hljs-variable language_\">window</span>.<span class=\"hljs-property\">pageXOffset</span> &amp;&amp;<br>    (top + height) &lt;= (<span class=\"hljs-variable language_\">window</span>.<span class=\"hljs-property\">pageYOffset</span> + <span class=\"hljs-variable language_\">window</span>.<span class=\"hljs-property\">innerHeight</span>) &amp;&amp;<br>    (left + width) &lt;= (<span class=\"hljs-variable language_\">window</span>.<span class=\"hljs-property\">pageXOffset</span> + <span class=\"hljs-variable language_\">window</span>.<span class=\"hljs-property\">innerWidth</span>)<br>  );<br>&#125;<br><br></code></pre></td></tr></table></figure>\n\n<ul>\n<li>元素任何一部分在可视区域出现</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs javascript\"><br><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">elementInViewport2</span>(<span class=\"hljs-params\">el</span>) &#123;<br>  <span class=\"hljs-keyword\">var</span> top = el.<span class=\"hljs-property\">offsetTop</span>;<br>  <span class=\"hljs-keyword\">var</span> left = el.<span class=\"hljs-property\">offsetLeft</span>;<br>  <span class=\"hljs-keyword\">var</span> width = el.<span class=\"hljs-property\">offsetWidth</span>;<br>  <span class=\"hljs-keyword\">var</span> height = el.<span class=\"hljs-property\">offsetHeight</span>;<br><br>  <span class=\"hljs-keyword\">while</span>(el.<span class=\"hljs-property\">offsetParent</span>) &#123;<br>    el = el.<span class=\"hljs-property\">offsetParent</span>;<br>    top += el.<span class=\"hljs-property\">offsetTop</span>;<br>    left += el.<span class=\"hljs-property\">offsetLeft</span>;<br>  &#125;<br><br>  <span class=\"hljs-keyword\">return</span> (<br>    top &lt; (<span class=\"hljs-variable language_\">window</span>.<span class=\"hljs-property\">pageYOffset</span> + <span class=\"hljs-variable language_\">window</span>.<span class=\"hljs-property\">innerHeight</span>) &amp;&amp;<br>    left &lt; (<span class=\"hljs-variable language_\">window</span>.<span class=\"hljs-property\">pageXOffset</span> + <span class=\"hljs-variable language_\">window</span>.<span class=\"hljs-property\">innerWidth</span>) &amp;&amp;<br>    (top + height) &gt; <span class=\"hljs-variable language_\">window</span>.<span class=\"hljs-property\">pageYOffset</span> &amp;&amp;<br>    (left + width) &gt; <span class=\"hljs-variable language_\">window</span>.<span class=\"hljs-property\">pageXOffset</span><br>  );<br>&#125;<br></code></pre></td></tr></table></figure>\n"},{"title":"js手写filter方法","excerpt":"js手写filter方法","_content":"\n直接上干货\n\n```javascript\nArray.prototype.myFilter = function (callback, thisArg) {\n  if (this == null) {\n    throw new TypeError(\"this is null or not defined\");\n  }\n\n  if (typeof callback !== \"function\") {\n    throw new TypeError(callback + \" is not a function\");\n  }\n\n  const res = [];\n\n  // 让O成为回调函数的对象传递（强制转换对象）\n\n  const O = Object(this);\n\n  // >>>0 保证len为number，且为正整数\n\n  const len = O.length >>> 0;\n\n  for (let i = 0; i < len; i++) {\n    // 检查i是否在O的属性（会检查原型链）\n\n    if (i in O) {\n      // 回调函数调用传参\n\n      if (callback.call(thisArg, O[i], i, O)) {\n        res.push(O[i]);\n      }\n    }\n  }\n\n  return res;\n};\n\n// 使用示例\n\nlet arr = [1, 2, 3, 4, 5];\n\nlet newArr = arr.myFilter(function (item) {\n  return item > 3;\n});\n\nconsole.log(newArr); // 输出：[4, 5]\n```\n","source":"_posts/20231129151306.md","raw":"---\ntitle: js手写filter方法\ntags: js\nexcerpt: js手写filter方法\ncategories: js\n---\n\n直接上干货\n\n```javascript\nArray.prototype.myFilter = function (callback, thisArg) {\n  if (this == null) {\n    throw new TypeError(\"this is null or not defined\");\n  }\n\n  if (typeof callback !== \"function\") {\n    throw new TypeError(callback + \" is not a function\");\n  }\n\n  const res = [];\n\n  // 让O成为回调函数的对象传递（强制转换对象）\n\n  const O = Object(this);\n\n  // >>>0 保证len为number，且为正整数\n\n  const len = O.length >>> 0;\n\n  for (let i = 0; i < len; i++) {\n    // 检查i是否在O的属性（会检查原型链）\n\n    if (i in O) {\n      // 回调函数调用传参\n\n      if (callback.call(thisArg, O[i], i, O)) {\n        res.push(O[i]);\n      }\n    }\n  }\n\n  return res;\n};\n\n// 使用示例\n\nlet arr = [1, 2, 3, 4, 5];\n\nlet newArr = arr.myFilter(function (item) {\n  return item > 3;\n});\n\nconsole.log(newArr); // 输出：[4, 5]\n```\n","slug":"20231129151306","published":1,"date":"2023-11-29T07:13:22.150Z","updated":"2023-12-07T09:24:43.956Z","comments":1,"layout":"post","photos":[],"_id":"clpv10m2s00023xo99esvhrpb","content":"<p>直接上干货</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs javascript\"><span class=\"hljs-title class_\">Array</span>.<span class=\"hljs-property\"><span class=\"hljs-keyword\">prototype</span></span>.<span class=\"hljs-property\">myFilter</span> = <span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">callback, thisArg</span>) &#123;<br>  <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-variable language_\">this</span> == <span class=\"hljs-literal\">null</span>) &#123;<br>    <span class=\"hljs-keyword\">throw</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">TypeError</span>(<span class=\"hljs-string\">&quot;this is null or not defined&quot;</span>);<br>  &#125;<br><br>  <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-keyword\">typeof</span> callback !== <span class=\"hljs-string\">&quot;function&quot;</span>) &#123;<br>    <span class=\"hljs-keyword\">throw</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">TypeError</span>(callback + <span class=\"hljs-string\">&quot; is not a function&quot;</span>);<br>  &#125;<br><br>  <span class=\"hljs-keyword\">const</span> res = [];<br><br>  <span class=\"hljs-comment\">// 让O成为回调函数的对象传递（强制转换对象）</span><br><br>  <span class=\"hljs-keyword\">const</span> O = <span class=\"hljs-title class_\">Object</span>(<span class=\"hljs-variable language_\">this</span>);<br><br>  <span class=\"hljs-comment\">// &gt;&gt;&gt;0 保证len为number，且为正整数</span><br><br>  <span class=\"hljs-keyword\">const</span> len = O.<span class=\"hljs-property\">length</span> &gt;&gt;&gt; <span class=\"hljs-number\">0</span>;<br><br>  <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">let</span> i = <span class=\"hljs-number\">0</span>; i &lt; len; i++) &#123;<br>    <span class=\"hljs-comment\">// 检查i是否在O的属性（会检查原型链）</span><br><br>    <span class=\"hljs-keyword\">if</span> (i <span class=\"hljs-keyword\">in</span> O) &#123;<br>      <span class=\"hljs-comment\">// 回调函数调用传参</span><br><br>      <span class=\"hljs-keyword\">if</span> (callback.<span class=\"hljs-title function_\">call</span>(thisArg, O[i], i, O)) &#123;<br>        res.<span class=\"hljs-title function_\">push</span>(O[i]);<br>      &#125;<br>    &#125;<br>  &#125;<br><br>  <span class=\"hljs-keyword\">return</span> res;<br>&#125;;<br><br><span class=\"hljs-comment\">// 使用示例</span><br><br><span class=\"hljs-keyword\">let</span> arr = [<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">5</span>];<br><br><span class=\"hljs-keyword\">let</span> newArr = arr.<span class=\"hljs-title function_\">myFilter</span>(<span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">item</span>) &#123;<br>  <span class=\"hljs-keyword\">return</span> item &gt; <span class=\"hljs-number\">3</span>;<br>&#125;);<br><br><span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(newArr); <span class=\"hljs-comment\">// 输出：[4, 5]</span><br></code></pre></td></tr></table></figure>\n","more":"<p>直接上干货</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs javascript\"><span class=\"hljs-title class_\">Array</span>.<span class=\"hljs-property\"><span class=\"hljs-keyword\">prototype</span></span>.<span class=\"hljs-property\">myFilter</span> = <span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">callback, thisArg</span>) &#123;<br>  <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-variable language_\">this</span> == <span class=\"hljs-literal\">null</span>) &#123;<br>    <span class=\"hljs-keyword\">throw</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">TypeError</span>(<span class=\"hljs-string\">&quot;this is null or not defined&quot;</span>);<br>  &#125;<br><br>  <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-keyword\">typeof</span> callback !== <span class=\"hljs-string\">&quot;function&quot;</span>) &#123;<br>    <span class=\"hljs-keyword\">throw</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">TypeError</span>(callback + <span class=\"hljs-string\">&quot; is not a function&quot;</span>);<br>  &#125;<br><br>  <span class=\"hljs-keyword\">const</span> res = [];<br><br>  <span class=\"hljs-comment\">// 让O成为回调函数的对象传递（强制转换对象）</span><br><br>  <span class=\"hljs-keyword\">const</span> O = <span class=\"hljs-title class_\">Object</span>(<span class=\"hljs-variable language_\">this</span>);<br><br>  <span class=\"hljs-comment\">// &gt;&gt;&gt;0 保证len为number，且为正整数</span><br><br>  <span class=\"hljs-keyword\">const</span> len = O.<span class=\"hljs-property\">length</span> &gt;&gt;&gt; <span class=\"hljs-number\">0</span>;<br><br>  <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">let</span> i = <span class=\"hljs-number\">0</span>; i &lt; len; i++) &#123;<br>    <span class=\"hljs-comment\">// 检查i是否在O的属性（会检查原型链）</span><br><br>    <span class=\"hljs-keyword\">if</span> (i <span class=\"hljs-keyword\">in</span> O) &#123;<br>      <span class=\"hljs-comment\">// 回调函数调用传参</span><br><br>      <span class=\"hljs-keyword\">if</span> (callback.<span class=\"hljs-title function_\">call</span>(thisArg, O[i], i, O)) &#123;<br>        res.<span class=\"hljs-title function_\">push</span>(O[i]);<br>      &#125;<br>    &#125;<br>  &#125;<br><br>  <span class=\"hljs-keyword\">return</span> res;<br>&#125;;<br><br><span class=\"hljs-comment\">// 使用示例</span><br><br><span class=\"hljs-keyword\">let</span> arr = [<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">5</span>];<br><br><span class=\"hljs-keyword\">let</span> newArr = arr.<span class=\"hljs-title function_\">myFilter</span>(<span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">item</span>) &#123;<br>  <span class=\"hljs-keyword\">return</span> item &gt; <span class=\"hljs-number\">3</span>;<br>&#125;);<br><br><span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(newArr); <span class=\"hljs-comment\">// 输出：[4, 5]</span><br></code></pre></td></tr></table></figure>\n"},{"title":"关于js的浮点数计算问题记录","excerpt":"在项目开发中应用到了大量的计算，考虑计算精度，就写一篇记录一下。","_content":"\n> 为什么 js 会有浮点数计算精度问题？\n\n在 JavaScript 中，整数和浮点数都归属于 Number 类型，数字都是 64 位浮点数形式存储的，这样就会导致浮点数运算时候会出现一些问题，下面是一些例子\n\n```javascript\nlet numberA = 0.1 + 0.2;\nlet numberB = 1.5 - 1.2;\nlet numberC = 19.9 * 100;\nlet numberD = 0.3 / 0.1;\nconsole.log(\n  \"numberA \",\n  numberA,\n  \" numberB \",\n  numberB,\n  \" numberC \",\n  numberC,\n  \" numberD \",\n  numberD\n);\n\n// output numberA 0.30000000000000004 numberB 0.30000000000000004 numberC 1989.9999999999998 numberD 2.9999999999999996\n```\n\n上述案例的计算结果并不符合我们数学计算逻辑，这样导致我们在进行一些复杂的浮点数运算时候出现偏差，业务场景多见于财务和商品金额计算，在项目中我们做了相关数学方法兼容处理，以下是我们的处理方案：\n\n```javascript\nmathHandle = {\n  add: (arg1: any, arg2: any) => {\n    var r1, r2, m;\n    try {\n      r1 = arg1.toString().split(\".\")[1].length;\n    } catch (e) {\n      r1 = 0;\n    }\n    try {\n      r2 = arg2.toString().split(\".\")[1].length;\n    } catch (e) {\n      r2 = 0;\n    }\n    m = Math.pow(10, Math.max(r1, r2));\n    return (arg1 * m + arg2 * m) / m;\n  },\n  subtract: (arg1: any, arg2: any) => {\n    var r1, r2, m, n;\n    try {\n      r1 = arg1.toString().split(\".\")[1].length;\n    } catch (e) {\n      r1 = 0;\n    }\n    try {\n      r2 = arg2.toString().split(\".\")[1].length;\n    } catch (e) {\n      r2 = 0;\n    }\n    m = Math.pow(10, Math.max(r1, r2));\n    //动态控制精度长度\n    n = r1 >= r2 ? r1 : r2;\n    return ((arg1 * m - arg2 * m) / m).toFixed(n);\n  },\n  multiply: (arg1: any, arg2: any) => {\n    var m = 0,\n      s1 = arg1.toString(),\n      s2 = arg2.toString();\n    try {\n      m += s1.split(\".\")[1].length;\n    } catch (e) {}\n    try {\n      m += s2.split(\".\")[1].length;\n    } catch (e) {}\n    return (\n      (Number(s1.replace(\".\", \"\")) * Number(s2.replace(\".\", \"\"))) /\n      Math.pow(10, m)\n    );\n  },\n  divide: (arg1: any, arg2: any) => {\n    var t1 = 0,\n      t2 = 0,\n      r1,\n      r2;\n    try {\n      t1 = arg1.toString().split(\".\")[1].length;\n    } catch (e) {}\n    try {\n      t2 = arg2.toString().split(\".\")[1].length;\n    } catch (e) {}\n    r1 = Number(arg1.toString().replace(\".\", \"\"));\n    r2 = Number(arg2.toString().replace(\".\", \"\"));\n    return (r1 / r2) * Math.pow(10, t2 - t1);\n  },\n};\n```\n\n上述代码已经完全应用于业务代码中，并且暂未出现问题，网上还有更多更完善的解决方案（mathjs）等，可供大家参考。\n","source":"_posts/20231130112354.md","raw":"---\ntitle: 关于js的浮点数计算问题记录\ntags: js\nexcerpt: 在项目开发中应用到了大量的计算，考虑计算精度，就写一篇记录一下。\ncategories: js\n---\n\n> 为什么 js 会有浮点数计算精度问题？\n\n在 JavaScript 中，整数和浮点数都归属于 Number 类型，数字都是 64 位浮点数形式存储的，这样就会导致浮点数运算时候会出现一些问题，下面是一些例子\n\n```javascript\nlet numberA = 0.1 + 0.2;\nlet numberB = 1.5 - 1.2;\nlet numberC = 19.9 * 100;\nlet numberD = 0.3 / 0.1;\nconsole.log(\n  \"numberA \",\n  numberA,\n  \" numberB \",\n  numberB,\n  \" numberC \",\n  numberC,\n  \" numberD \",\n  numberD\n);\n\n// output numberA 0.30000000000000004 numberB 0.30000000000000004 numberC 1989.9999999999998 numberD 2.9999999999999996\n```\n\n上述案例的计算结果并不符合我们数学计算逻辑，这样导致我们在进行一些复杂的浮点数运算时候出现偏差，业务场景多见于财务和商品金额计算，在项目中我们做了相关数学方法兼容处理，以下是我们的处理方案：\n\n```javascript\nmathHandle = {\n  add: (arg1: any, arg2: any) => {\n    var r1, r2, m;\n    try {\n      r1 = arg1.toString().split(\".\")[1].length;\n    } catch (e) {\n      r1 = 0;\n    }\n    try {\n      r2 = arg2.toString().split(\".\")[1].length;\n    } catch (e) {\n      r2 = 0;\n    }\n    m = Math.pow(10, Math.max(r1, r2));\n    return (arg1 * m + arg2 * m) / m;\n  },\n  subtract: (arg1: any, arg2: any) => {\n    var r1, r2, m, n;\n    try {\n      r1 = arg1.toString().split(\".\")[1].length;\n    } catch (e) {\n      r1 = 0;\n    }\n    try {\n      r2 = arg2.toString().split(\".\")[1].length;\n    } catch (e) {\n      r2 = 0;\n    }\n    m = Math.pow(10, Math.max(r1, r2));\n    //动态控制精度长度\n    n = r1 >= r2 ? r1 : r2;\n    return ((arg1 * m - arg2 * m) / m).toFixed(n);\n  },\n  multiply: (arg1: any, arg2: any) => {\n    var m = 0,\n      s1 = arg1.toString(),\n      s2 = arg2.toString();\n    try {\n      m += s1.split(\".\")[1].length;\n    } catch (e) {}\n    try {\n      m += s2.split(\".\")[1].length;\n    } catch (e) {}\n    return (\n      (Number(s1.replace(\".\", \"\")) * Number(s2.replace(\".\", \"\"))) /\n      Math.pow(10, m)\n    );\n  },\n  divide: (arg1: any, arg2: any) => {\n    var t1 = 0,\n      t2 = 0,\n      r1,\n      r2;\n    try {\n      t1 = arg1.toString().split(\".\")[1].length;\n    } catch (e) {}\n    try {\n      t2 = arg2.toString().split(\".\")[1].length;\n    } catch (e) {}\n    r1 = Number(arg1.toString().replace(\".\", \"\"));\n    r2 = Number(arg2.toString().replace(\".\", \"\"));\n    return (r1 / r2) * Math.pow(10, t2 - t1);\n  },\n};\n```\n\n上述代码已经完全应用于业务代码中，并且暂未出现问题，网上还有更多更完善的解决方案（mathjs）等，可供大家参考。\n","slug":"20231130112354","published":1,"date":"2023-11-30T03:24:12.297Z","updated":"2023-12-07T09:24:47.498Z","comments":1,"layout":"post","photos":[],"_id":"clpv10m2w000b3xo9dpi02l73","content":"<blockquote>\n<p>为什么 js 会有浮点数计算精度问题？</p>\n</blockquote>\n<p>在 JavaScript 中，整数和浮点数都归属于 Number 类型，数字都是 64 位浮点数形式存储的，这样就会导致浮点数运算时候会出现一些问题，下面是一些例子</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs javascript\"><span class=\"hljs-keyword\">let</span> numberA = <span class=\"hljs-number\">0.1</span> + <span class=\"hljs-number\">0.2</span>;<br><span class=\"hljs-keyword\">let</span> numberB = <span class=\"hljs-number\">1.5</span> - <span class=\"hljs-number\">1.2</span>;<br><span class=\"hljs-keyword\">let</span> numberC = <span class=\"hljs-number\">19.9</span> * <span class=\"hljs-number\">100</span>;<br><span class=\"hljs-keyword\">let</span> numberD = <span class=\"hljs-number\">0.3</span> / <span class=\"hljs-number\">0.1</span>;<br><span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<br>  <span class=\"hljs-string\">&quot;numberA &quot;</span>,<br>  numberA,<br>  <span class=\"hljs-string\">&quot; numberB &quot;</span>,<br>  numberB,<br>  <span class=\"hljs-string\">&quot; numberC &quot;</span>,<br>  numberC,<br>  <span class=\"hljs-string\">&quot; numberD &quot;</span>,<br>  numberD<br>);<br><br><span class=\"hljs-comment\">// output numberA 0.30000000000000004 numberB 0.30000000000000004 numberC 1989.9999999999998 numberD 2.9999999999999996</span><br></code></pre></td></tr></table></figure>\n\n<p>上述案例的计算结果并不符合我们数学计算逻辑，这样导致我们在进行一些复杂的浮点数运算时候出现偏差，业务场景多见于财务和商品金额计算，在项目中我们做了相关数学方法兼容处理，以下是我们的处理方案：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs javascript\">mathHandle = &#123;<br>  <span class=\"hljs-attr\">add</span>: <span class=\"hljs-function\">(<span class=\"hljs-params\">arg1: any, arg2: any</span>) =&gt;</span> &#123;<br>    <span class=\"hljs-keyword\">var</span> r1, r2, m;<br>    <span class=\"hljs-keyword\">try</span> &#123;<br>      r1 = arg1.<span class=\"hljs-title function_\">toString</span>().<span class=\"hljs-title function_\">split</span>(<span class=\"hljs-string\">&quot;.&quot;</span>)[<span class=\"hljs-number\">1</span>].<span class=\"hljs-property\">length</span>;<br>    &#125; <span class=\"hljs-keyword\">catch</span> (e) &#123;<br>      r1 = <span class=\"hljs-number\">0</span>;<br>    &#125;<br>    <span class=\"hljs-keyword\">try</span> &#123;<br>      r2 = arg2.<span class=\"hljs-title function_\">toString</span>().<span class=\"hljs-title function_\">split</span>(<span class=\"hljs-string\">&quot;.&quot;</span>)[<span class=\"hljs-number\">1</span>].<span class=\"hljs-property\">length</span>;<br>    &#125; <span class=\"hljs-keyword\">catch</span> (e) &#123;<br>      r2 = <span class=\"hljs-number\">0</span>;<br>    &#125;<br>    m = <span class=\"hljs-title class_\">Math</span>.<span class=\"hljs-title function_\">pow</span>(<span class=\"hljs-number\">10</span>, <span class=\"hljs-title class_\">Math</span>.<span class=\"hljs-title function_\">max</span>(r1, r2));<br>    <span class=\"hljs-keyword\">return</span> (arg1 * m + arg2 * m) / m;<br>  &#125;,<br>  <span class=\"hljs-attr\">subtract</span>: <span class=\"hljs-function\">(<span class=\"hljs-params\">arg1: any, arg2: any</span>) =&gt;</span> &#123;<br>    <span class=\"hljs-keyword\">var</span> r1, r2, m, n;<br>    <span class=\"hljs-keyword\">try</span> &#123;<br>      r1 = arg1.<span class=\"hljs-title function_\">toString</span>().<span class=\"hljs-title function_\">split</span>(<span class=\"hljs-string\">&quot;.&quot;</span>)[<span class=\"hljs-number\">1</span>].<span class=\"hljs-property\">length</span>;<br>    &#125; <span class=\"hljs-keyword\">catch</span> (e) &#123;<br>      r1 = <span class=\"hljs-number\">0</span>;<br>    &#125;<br>    <span class=\"hljs-keyword\">try</span> &#123;<br>      r2 = arg2.<span class=\"hljs-title function_\">toString</span>().<span class=\"hljs-title function_\">split</span>(<span class=\"hljs-string\">&quot;.&quot;</span>)[<span class=\"hljs-number\">1</span>].<span class=\"hljs-property\">length</span>;<br>    &#125; <span class=\"hljs-keyword\">catch</span> (e) &#123;<br>      r2 = <span class=\"hljs-number\">0</span>;<br>    &#125;<br>    m = <span class=\"hljs-title class_\">Math</span>.<span class=\"hljs-title function_\">pow</span>(<span class=\"hljs-number\">10</span>, <span class=\"hljs-title class_\">Math</span>.<span class=\"hljs-title function_\">max</span>(r1, r2));<br>    <span class=\"hljs-comment\">//动态控制精度长度</span><br>    n = r1 &gt;= r2 ? r1 : r2;<br>    <span class=\"hljs-keyword\">return</span> ((arg1 * m - arg2 * m) / m).<span class=\"hljs-title function_\">toFixed</span>(n);<br>  &#125;,<br>  <span class=\"hljs-attr\">multiply</span>: <span class=\"hljs-function\">(<span class=\"hljs-params\">arg1: any, arg2: any</span>) =&gt;</span> &#123;<br>    <span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-number\">0</span>,<br>      s1 = arg1.<span class=\"hljs-title function_\">toString</span>(),<br>      s2 = arg2.<span class=\"hljs-title function_\">toString</span>();<br>    <span class=\"hljs-keyword\">try</span> &#123;<br>      m += s1.<span class=\"hljs-title function_\">split</span>(<span class=\"hljs-string\">&quot;.&quot;</span>)[<span class=\"hljs-number\">1</span>].<span class=\"hljs-property\">length</span>;<br>    &#125; <span class=\"hljs-keyword\">catch</span> (e) &#123;&#125;<br>    <span class=\"hljs-keyword\">try</span> &#123;<br>      m += s2.<span class=\"hljs-title function_\">split</span>(<span class=\"hljs-string\">&quot;.&quot;</span>)[<span class=\"hljs-number\">1</span>].<span class=\"hljs-property\">length</span>;<br>    &#125; <span class=\"hljs-keyword\">catch</span> (e) &#123;&#125;<br>    <span class=\"hljs-keyword\">return</span> (<br>      (<span class=\"hljs-title class_\">Number</span>(s1.<span class=\"hljs-title function_\">replace</span>(<span class=\"hljs-string\">&quot;.&quot;</span>, <span class=\"hljs-string\">&quot;&quot;</span>)) * <span class=\"hljs-title class_\">Number</span>(s2.<span class=\"hljs-title function_\">replace</span>(<span class=\"hljs-string\">&quot;.&quot;</span>, <span class=\"hljs-string\">&quot;&quot;</span>))) /<br>      <span class=\"hljs-title class_\">Math</span>.<span class=\"hljs-title function_\">pow</span>(<span class=\"hljs-number\">10</span>, m)<br>    );<br>  &#125;,<br>  <span class=\"hljs-attr\">divide</span>: <span class=\"hljs-function\">(<span class=\"hljs-params\">arg1: any, arg2: any</span>) =&gt;</span> &#123;<br>    <span class=\"hljs-keyword\">var</span> t1 = <span class=\"hljs-number\">0</span>,<br>      t2 = <span class=\"hljs-number\">0</span>,<br>      r1,<br>      r2;<br>    <span class=\"hljs-keyword\">try</span> &#123;<br>      t1 = arg1.<span class=\"hljs-title function_\">toString</span>().<span class=\"hljs-title function_\">split</span>(<span class=\"hljs-string\">&quot;.&quot;</span>)[<span class=\"hljs-number\">1</span>].<span class=\"hljs-property\">length</span>;<br>    &#125; <span class=\"hljs-keyword\">catch</span> (e) &#123;&#125;<br>    <span class=\"hljs-keyword\">try</span> &#123;<br>      t2 = arg2.<span class=\"hljs-title function_\">toString</span>().<span class=\"hljs-title function_\">split</span>(<span class=\"hljs-string\">&quot;.&quot;</span>)[<span class=\"hljs-number\">1</span>].<span class=\"hljs-property\">length</span>;<br>    &#125; <span class=\"hljs-keyword\">catch</span> (e) &#123;&#125;<br>    r1 = <span class=\"hljs-title class_\">Number</span>(arg1.<span class=\"hljs-title function_\">toString</span>().<span class=\"hljs-title function_\">replace</span>(<span class=\"hljs-string\">&quot;.&quot;</span>, <span class=\"hljs-string\">&quot;&quot;</span>));<br>    r2 = <span class=\"hljs-title class_\">Number</span>(arg2.<span class=\"hljs-title function_\">toString</span>().<span class=\"hljs-title function_\">replace</span>(<span class=\"hljs-string\">&quot;.&quot;</span>, <span class=\"hljs-string\">&quot;&quot;</span>));<br>    <span class=\"hljs-keyword\">return</span> (r1 / r2) * <span class=\"hljs-title class_\">Math</span>.<span class=\"hljs-title function_\">pow</span>(<span class=\"hljs-number\">10</span>, t2 - t1);<br>  &#125;,<br>&#125;;<br></code></pre></td></tr></table></figure>\n\n<p>上述代码已经完全应用于业务代码中，并且暂未出现问题，网上还有更多更完善的解决方案（mathjs）等，可供大家参考。</p>\n","more":"<blockquote>\n<p>为什么 js 会有浮点数计算精度问题？</p>\n</blockquote>\n<p>在 JavaScript 中，整数和浮点数都归属于 Number 类型，数字都是 64 位浮点数形式存储的，这样就会导致浮点数运算时候会出现一些问题，下面是一些例子</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs javascript\"><span class=\"hljs-keyword\">let</span> numberA = <span class=\"hljs-number\">0.1</span> + <span class=\"hljs-number\">0.2</span>;<br><span class=\"hljs-keyword\">let</span> numberB = <span class=\"hljs-number\">1.5</span> - <span class=\"hljs-number\">1.2</span>;<br><span class=\"hljs-keyword\">let</span> numberC = <span class=\"hljs-number\">19.9</span> * <span class=\"hljs-number\">100</span>;<br><span class=\"hljs-keyword\">let</span> numberD = <span class=\"hljs-number\">0.3</span> / <span class=\"hljs-number\">0.1</span>;<br><span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<br>  <span class=\"hljs-string\">&quot;numberA &quot;</span>,<br>  numberA,<br>  <span class=\"hljs-string\">&quot; numberB &quot;</span>,<br>  numberB,<br>  <span class=\"hljs-string\">&quot; numberC &quot;</span>,<br>  numberC,<br>  <span class=\"hljs-string\">&quot; numberD &quot;</span>,<br>  numberD<br>);<br><br><span class=\"hljs-comment\">// output numberA 0.30000000000000004 numberB 0.30000000000000004 numberC 1989.9999999999998 numberD 2.9999999999999996</span><br></code></pre></td></tr></table></figure>\n\n<p>上述案例的计算结果并不符合我们数学计算逻辑，这样导致我们在进行一些复杂的浮点数运算时候出现偏差，业务场景多见于财务和商品金额计算，在项目中我们做了相关数学方法兼容处理，以下是我们的处理方案：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs javascript\">mathHandle = &#123;<br>  <span class=\"hljs-attr\">add</span>: <span class=\"hljs-function\">(<span class=\"hljs-params\">arg1: any, arg2: any</span>) =&gt;</span> &#123;<br>    <span class=\"hljs-keyword\">var</span> r1, r2, m;<br>    <span class=\"hljs-keyword\">try</span> &#123;<br>      r1 = arg1.<span class=\"hljs-title function_\">toString</span>().<span class=\"hljs-title function_\">split</span>(<span class=\"hljs-string\">&quot;.&quot;</span>)[<span class=\"hljs-number\">1</span>].<span class=\"hljs-property\">length</span>;<br>    &#125; <span class=\"hljs-keyword\">catch</span> (e) &#123;<br>      r1 = <span class=\"hljs-number\">0</span>;<br>    &#125;<br>    <span class=\"hljs-keyword\">try</span> &#123;<br>      r2 = arg2.<span class=\"hljs-title function_\">toString</span>().<span class=\"hljs-title function_\">split</span>(<span class=\"hljs-string\">&quot;.&quot;</span>)[<span class=\"hljs-number\">1</span>].<span class=\"hljs-property\">length</span>;<br>    &#125; <span class=\"hljs-keyword\">catch</span> (e) &#123;<br>      r2 = <span class=\"hljs-number\">0</span>;<br>    &#125;<br>    m = <span class=\"hljs-title class_\">Math</span>.<span class=\"hljs-title function_\">pow</span>(<span class=\"hljs-number\">10</span>, <span class=\"hljs-title class_\">Math</span>.<span class=\"hljs-title function_\">max</span>(r1, r2));<br>    <span class=\"hljs-keyword\">return</span> (arg1 * m + arg2 * m) / m;<br>  &#125;,<br>  <span class=\"hljs-attr\">subtract</span>: <span class=\"hljs-function\">(<span class=\"hljs-params\">arg1: any, arg2: any</span>) =&gt;</span> &#123;<br>    <span class=\"hljs-keyword\">var</span> r1, r2, m, n;<br>    <span class=\"hljs-keyword\">try</span> &#123;<br>      r1 = arg1.<span class=\"hljs-title function_\">toString</span>().<span class=\"hljs-title function_\">split</span>(<span class=\"hljs-string\">&quot;.&quot;</span>)[<span class=\"hljs-number\">1</span>].<span class=\"hljs-property\">length</span>;<br>    &#125; <span class=\"hljs-keyword\">catch</span> (e) &#123;<br>      r1 = <span class=\"hljs-number\">0</span>;<br>    &#125;<br>    <span class=\"hljs-keyword\">try</span> &#123;<br>      r2 = arg2.<span class=\"hljs-title function_\">toString</span>().<span class=\"hljs-title function_\">split</span>(<span class=\"hljs-string\">&quot;.&quot;</span>)[<span class=\"hljs-number\">1</span>].<span class=\"hljs-property\">length</span>;<br>    &#125; <span class=\"hljs-keyword\">catch</span> (e) &#123;<br>      r2 = <span class=\"hljs-number\">0</span>;<br>    &#125;<br>    m = <span class=\"hljs-title class_\">Math</span>.<span class=\"hljs-title function_\">pow</span>(<span class=\"hljs-number\">10</span>, <span class=\"hljs-title class_\">Math</span>.<span class=\"hljs-title function_\">max</span>(r1, r2));<br>    <span class=\"hljs-comment\">//动态控制精度长度</span><br>    n = r1 &gt;= r2 ? r1 : r2;<br>    <span class=\"hljs-keyword\">return</span> ((arg1 * m - arg2 * m) / m).<span class=\"hljs-title function_\">toFixed</span>(n);<br>  &#125;,<br>  <span class=\"hljs-attr\">multiply</span>: <span class=\"hljs-function\">(<span class=\"hljs-params\">arg1: any, arg2: any</span>) =&gt;</span> &#123;<br>    <span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-number\">0</span>,<br>      s1 = arg1.<span class=\"hljs-title function_\">toString</span>(),<br>      s2 = arg2.<span class=\"hljs-title function_\">toString</span>();<br>    <span class=\"hljs-keyword\">try</span> &#123;<br>      m += s1.<span class=\"hljs-title function_\">split</span>(<span class=\"hljs-string\">&quot;.&quot;</span>)[<span class=\"hljs-number\">1</span>].<span class=\"hljs-property\">length</span>;<br>    &#125; <span class=\"hljs-keyword\">catch</span> (e) &#123;&#125;<br>    <span class=\"hljs-keyword\">try</span> &#123;<br>      m += s2.<span class=\"hljs-title function_\">split</span>(<span class=\"hljs-string\">&quot;.&quot;</span>)[<span class=\"hljs-number\">1</span>].<span class=\"hljs-property\">length</span>;<br>    &#125; <span class=\"hljs-keyword\">catch</span> (e) &#123;&#125;<br>    <span class=\"hljs-keyword\">return</span> (<br>      (<span class=\"hljs-title class_\">Number</span>(s1.<span class=\"hljs-title function_\">replace</span>(<span class=\"hljs-string\">&quot;.&quot;</span>, <span class=\"hljs-string\">&quot;&quot;</span>)) * <span class=\"hljs-title class_\">Number</span>(s2.<span class=\"hljs-title function_\">replace</span>(<span class=\"hljs-string\">&quot;.&quot;</span>, <span class=\"hljs-string\">&quot;&quot;</span>))) /<br>      <span class=\"hljs-title class_\">Math</span>.<span class=\"hljs-title function_\">pow</span>(<span class=\"hljs-number\">10</span>, m)<br>    );<br>  &#125;,<br>  <span class=\"hljs-attr\">divide</span>: <span class=\"hljs-function\">(<span class=\"hljs-params\">arg1: any, arg2: any</span>) =&gt;</span> &#123;<br>    <span class=\"hljs-keyword\">var</span> t1 = <span class=\"hljs-number\">0</span>,<br>      t2 = <span class=\"hljs-number\">0</span>,<br>      r1,<br>      r2;<br>    <span class=\"hljs-keyword\">try</span> &#123;<br>      t1 = arg1.<span class=\"hljs-title function_\">toString</span>().<span class=\"hljs-title function_\">split</span>(<span class=\"hljs-string\">&quot;.&quot;</span>)[<span class=\"hljs-number\">1</span>].<span class=\"hljs-property\">length</span>;<br>    &#125; <span class=\"hljs-keyword\">catch</span> (e) &#123;&#125;<br>    <span class=\"hljs-keyword\">try</span> &#123;<br>      t2 = arg2.<span class=\"hljs-title function_\">toString</span>().<span class=\"hljs-title function_\">split</span>(<span class=\"hljs-string\">&quot;.&quot;</span>)[<span class=\"hljs-number\">1</span>].<span class=\"hljs-property\">length</span>;<br>    &#125; <span class=\"hljs-keyword\">catch</span> (e) &#123;&#125;<br>    r1 = <span class=\"hljs-title class_\">Number</span>(arg1.<span class=\"hljs-title function_\">toString</span>().<span class=\"hljs-title function_\">replace</span>(<span class=\"hljs-string\">&quot;.&quot;</span>, <span class=\"hljs-string\">&quot;&quot;</span>));<br>    r2 = <span class=\"hljs-title class_\">Number</span>(arg2.<span class=\"hljs-title function_\">toString</span>().<span class=\"hljs-title function_\">replace</span>(<span class=\"hljs-string\">&quot;.&quot;</span>, <span class=\"hljs-string\">&quot;&quot;</span>));<br>    <span class=\"hljs-keyword\">return</span> (r1 / r2) * <span class=\"hljs-title class_\">Math</span>.<span class=\"hljs-title function_\">pow</span>(<span class=\"hljs-number\">10</span>, t2 - t1);<br>  &#125;,<br>&#125;;<br></code></pre></td></tr></table></figure>\n\n<p>上述代码已经完全应用于业务代码中，并且暂未出现问题，网上还有更多更完善的解决方案（mathjs）等，可供大家参考。</p>\n"},{"title":"使用nrm管理npm源","excerpt":"使用nrm管理npm源","_content":"\n> 关于 NRM\n\nnrm（NPM registry manager）是 npm 的镜像源管理工具，使用它可以快速切换 npm 源。\n\n> 使用\n\n1. 全局安装\n\n```bash\nnpm i -g nrm\n```\n\n2. 日常使用\n\n```bash\n#切换源\nnrm use <registry>\n\n#添加源\nnrm add <registry> <url>\n\n#删除源\nnrm del <registry>\n```\n\n[更多信息看这里！](https://github.com/Pana/nrm)\n","source":"_posts/20231207172556.md","raw":"---\ntitle: 使用nrm管理npm源\ntags: npm\nexcerpt: 使用nrm管理npm源\ncategories: npm\n---\n\n> 关于 NRM\n\nnrm（NPM registry manager）是 npm 的镜像源管理工具，使用它可以快速切换 npm 源。\n\n> 使用\n\n1. 全局安装\n\n```bash\nnpm i -g nrm\n```\n\n2. 日常使用\n\n```bash\n#切换源\nnrm use <registry>\n\n#添加源\nnrm add <registry> <url>\n\n#删除源\nnrm del <registry>\n```\n\n[更多信息看这里！](https://github.com/Pana/nrm)\n","slug":"20231207172556","published":1,"date":"2023-12-07T09:26:10.069Z","updated":"2023-12-07T09:34:53.074Z","comments":1,"layout":"post","photos":[],"_id":"clpv10m2w000c3xo9792ahujn","content":"<blockquote>\n<p>关于 NRM</p>\n</blockquote>\n<p>nrm（NPM registry manager）是 npm 的镜像源管理工具，使用它可以快速切换 npm 源。</p>\n<blockquote>\n<p>使用</p>\n</blockquote>\n<ol>\n<li>全局安装</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">npm i -g nrm<br></code></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li>日常使用</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-comment\">#切换源</span><br>nrm use &lt;registry&gt;<br><br><span class=\"hljs-comment\">#添加源</span><br>nrm add &lt;registry&gt; &lt;url&gt;<br><br><span class=\"hljs-comment\">#删除源</span><br>nrm del &lt;registry&gt;<br></code></pre></td></tr></table></figure>\n\n<p><a href=\"https://github.com/Pana/nrm\">更多信息看这里！</a></p>\n","more":"<blockquote>\n<p>关于 NRM</p>\n</blockquote>\n<p>nrm（NPM registry manager）是 npm 的镜像源管理工具，使用它可以快速切换 npm 源。</p>\n<blockquote>\n<p>使用</p>\n</blockquote>\n<ol>\n<li>全局安装</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">npm i -g nrm<br></code></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li>日常使用</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-comment\">#切换源</span><br>nrm use &lt;registry&gt;<br><br><span class=\"hljs-comment\">#添加源</span><br>nrm add &lt;registry&gt; &lt;url&gt;<br><br><span class=\"hljs-comment\">#删除源</span><br>nrm del &lt;registry&gt;<br></code></pre></td></tr></table></figure>\n\n<p><a href=\"https://github.com/Pana/nrm\">更多信息看这里！</a></p>\n"},{"title":"JS常用Utils","excerpt":"开发中会用到很多工具类通用方法，这个是之前总结的，迁移过来。","_content":"\n###### 图片预加载\n\n```javascript\n/**\n * 预加载图片\n * @param source   Array 预加载图片列表\n */\n/*预加载图片*/\nfunction preLoadImg(source) {\n  /*加载图片方法*/\n  function loadImage(url) {\n    return new Promise((resolve, reject) => {\n      let img = new Image();\n      img.onload = () => resolve(img);\n      img.onerror = reject;\n      img.src = url;\n    });\n  }\n\n  let pr = [];\n  source.forEach((url) => {\n    // 预加载图片\n    let p = loadImage(url)\n      .then(() => {\n        console.log(\"Single image loading completed\");\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n    pr.push(p);\n  });\n  // 图片全部加载完\n  Promise.all(pr).then(() => {\n    console.log(\"All images loaded\");\n  });\n}\n```\n\n###### 获取 url 参数\n\n```js\n/**\n * 获取URL参数\n * @param name   String 要获取的参数Key\n */\n\nfunction getQueryString(name) {\n  var reg = new RegExp(\"(^|&)\" + name + \"=([^&]*)(&|$)\");\n  var r = window.location.search.substr(1).match(reg);\n  if (r != null) return unescape(r[2]);\n  return null;\n}\n```\n\n###### 判断 str 字符串中是否含有字符串\n\n```js\n/**\n * 判断 str 字符串中是否含有字符串 subStr\n * @param {} str 原字符串\n * @param {} subStr 要查找的字符串\n * @param {} isIgnoreCase 是否忽略大小写\n * @return {Boolean}\n */\nfunction contains(str, subStr, isIgnoreCase) {\n  if (isIgnoreCase) {\n    // 忽略大小写\n    str = str.toLowerCase();\n    subStr = subStr.toLowerCase();\n  }\n  var startChar = subStr.substring(0, 1);\n  var strLen = subStr.length;\n  for (var j = 0; j < str.length - strLen + 1; j++) {\n    if (str.charAt(j) == startChar) {\n      /* 如果匹配起始字符,开始查找 */\n      if (str.substring(j, j + strLen) == subStr) {\n        /*如果从j开始的字符与 str 匹配 */\n        return true;\n      }\n    }\n  }\n  return false;\n}\n```\n\n###### cookie 操作\n\n- 设置 cookie\n\n```js\n/**\n * 设置cookie\n * @param name  String key\n * @param value String Value\n * @param expdays Number 过期时间\n */\n\nfunction setCookie(name, value, expdays) {\n  var expdate = new Date();\n  //设置Cookie过期日期\n  expdate.setDate(expdate.getDate() + expdays);\n  //添加Cookie\n  document.cookie =\n    name + \"=\" + escape(value) + \";expires=\" + expdate.toUTCString();\n}\n```\n\n- 获取 cookie\n\n```js\n/**\n * 获取cookie\n * @param name String key\n * @returns {string}\n */\nfunction getCookie(name) {\n  //获取name在Cookie中起止位置\n  var start = document.cookie.indexOf(name + \"=\");\n\n  if (start != -1) {\n    start = start + name.length + 1;\n    //获取value的终止位置\n    var end = document.cookie.indexOf(\";\", start);\n    if (end == -1) end = document.cookie.length;\n    //截获cookie的value值,并返回\n    return unescape(document.cookie.substring(start, end));\n  }\n  return \"\";\n}\n```\n\n- 删除 cookie\n\n```js\nfunction delCookie(name) {\n  var exp = new Date();\n  exp.setTime(exp.getTime() - 1);\n  var cval = getCookie(name);\n  if (cval != null)\n    document.cookie = name + \"=\" + cval + \";expires=\" + exp.toGMTString();\n}\n```\n\n上述功能已经发布至 NPM 参考[p-utils](https://www.npmjs.com/package/p-utils-cli)\n","source":"_posts/20231207173941.md","raw":"---\ntitle: JS常用Utils\ntags: js\nexcerpt: 开发中会用到很多工具类通用方法，这个是之前总结的，迁移过来。\ncategories: js\n---\n\n###### 图片预加载\n\n```javascript\n/**\n * 预加载图片\n * @param source   Array 预加载图片列表\n */\n/*预加载图片*/\nfunction preLoadImg(source) {\n  /*加载图片方法*/\n  function loadImage(url) {\n    return new Promise((resolve, reject) => {\n      let img = new Image();\n      img.onload = () => resolve(img);\n      img.onerror = reject;\n      img.src = url;\n    });\n  }\n\n  let pr = [];\n  source.forEach((url) => {\n    // 预加载图片\n    let p = loadImage(url)\n      .then(() => {\n        console.log(\"Single image loading completed\");\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n    pr.push(p);\n  });\n  // 图片全部加载完\n  Promise.all(pr).then(() => {\n    console.log(\"All images loaded\");\n  });\n}\n```\n\n###### 获取 url 参数\n\n```js\n/**\n * 获取URL参数\n * @param name   String 要获取的参数Key\n */\n\nfunction getQueryString(name) {\n  var reg = new RegExp(\"(^|&)\" + name + \"=([^&]*)(&|$)\");\n  var r = window.location.search.substr(1).match(reg);\n  if (r != null) return unescape(r[2]);\n  return null;\n}\n```\n\n###### 判断 str 字符串中是否含有字符串\n\n```js\n/**\n * 判断 str 字符串中是否含有字符串 subStr\n * @param {} str 原字符串\n * @param {} subStr 要查找的字符串\n * @param {} isIgnoreCase 是否忽略大小写\n * @return {Boolean}\n */\nfunction contains(str, subStr, isIgnoreCase) {\n  if (isIgnoreCase) {\n    // 忽略大小写\n    str = str.toLowerCase();\n    subStr = subStr.toLowerCase();\n  }\n  var startChar = subStr.substring(0, 1);\n  var strLen = subStr.length;\n  for (var j = 0; j < str.length - strLen + 1; j++) {\n    if (str.charAt(j) == startChar) {\n      /* 如果匹配起始字符,开始查找 */\n      if (str.substring(j, j + strLen) == subStr) {\n        /*如果从j开始的字符与 str 匹配 */\n        return true;\n      }\n    }\n  }\n  return false;\n}\n```\n\n###### cookie 操作\n\n- 设置 cookie\n\n```js\n/**\n * 设置cookie\n * @param name  String key\n * @param value String Value\n * @param expdays Number 过期时间\n */\n\nfunction setCookie(name, value, expdays) {\n  var expdate = new Date();\n  //设置Cookie过期日期\n  expdate.setDate(expdate.getDate() + expdays);\n  //添加Cookie\n  document.cookie =\n    name + \"=\" + escape(value) + \";expires=\" + expdate.toUTCString();\n}\n```\n\n- 获取 cookie\n\n```js\n/**\n * 获取cookie\n * @param name String key\n * @returns {string}\n */\nfunction getCookie(name) {\n  //获取name在Cookie中起止位置\n  var start = document.cookie.indexOf(name + \"=\");\n\n  if (start != -1) {\n    start = start + name.length + 1;\n    //获取value的终止位置\n    var end = document.cookie.indexOf(\";\", start);\n    if (end == -1) end = document.cookie.length;\n    //截获cookie的value值,并返回\n    return unescape(document.cookie.substring(start, end));\n  }\n  return \"\";\n}\n```\n\n- 删除 cookie\n\n```js\nfunction delCookie(name) {\n  var exp = new Date();\n  exp.setTime(exp.getTime() - 1);\n  var cval = getCookie(name);\n  if (cval != null)\n    document.cookie = name + \"=\" + cval + \";expires=\" + exp.toGMTString();\n}\n```\n\n上述功能已经发布至 NPM 参考[p-utils](https://www.npmjs.com/package/p-utils-cli)\n","slug":"20231207173941","published":1,"date":"2023-12-07T09:39:52.452Z","updated":"2023-12-26T09:13:16.156Z","_id":"clpv10m2x000e3xo940azbfe8","comments":1,"layout":"post","photos":[],"content":"<h6 id=\"图片预加载\"><a href=\"#图片预加载\" class=\"headerlink\" title=\"图片预加载\"></a>图片预加载</h6><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs javascript\"><span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\"> * 预加载图片</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@param</span> source   Array 预加载图片列表</span><br><span class=\"hljs-comment\"> */</span><br><span class=\"hljs-comment\">/*预加载图片*/</span><br><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">preLoadImg</span>(<span class=\"hljs-params\">source</span>) &#123;<br>  <span class=\"hljs-comment\">/*加载图片方法*/</span><br>  <span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">loadImage</span>(<span class=\"hljs-params\">url</span>) &#123;<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Promise</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">resolve, reject</span>) =&gt;</span> &#123;<br>      <span class=\"hljs-keyword\">let</span> img = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Image</span>();<br>      img.<span class=\"hljs-property\">onload</span> = <span class=\"hljs-function\">() =&gt;</span> <span class=\"hljs-title function_\">resolve</span>(img);<br>      img.<span class=\"hljs-property\">onerror</span> = reject;<br>      img.<span class=\"hljs-property\">src</span> = url;<br>    &#125;);<br>  &#125;<br><br>  <span class=\"hljs-keyword\">let</span> pr = [];<br>  source.<span class=\"hljs-title function_\">forEach</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">url</span>) =&gt;</span> &#123;<br>    <span class=\"hljs-comment\">// 预加载图片</span><br>    <span class=\"hljs-keyword\">let</span> p = <span class=\"hljs-title function_\">loadImage</span>(url)<br>      .<span class=\"hljs-title function_\">then</span>(<span class=\"hljs-function\">() =&gt;</span> &#123;<br>        <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">&quot;Single image loading completed&quot;</span>);<br>      &#125;)<br>      .<span class=\"hljs-title function_\">catch</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">err</span>) =&gt;</span> &#123;<br>        <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(err);<br>      &#125;);<br>    pr.<span class=\"hljs-title function_\">push</span>(p);<br>  &#125;);<br>  <span class=\"hljs-comment\">// 图片全部加载完</span><br>  <span class=\"hljs-title class_\">Promise</span>.<span class=\"hljs-title function_\">all</span>(pr).<span class=\"hljs-title function_\">then</span>(<span class=\"hljs-function\">() =&gt;</span> &#123;<br>    <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">&quot;All images loaded&quot;</span>);<br>  &#125;);<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h6 id=\"获取-url-参数\"><a href=\"#获取-url-参数\" class=\"headerlink\" title=\"获取 url 参数\"></a>获取 url 参数</h6><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\"><span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\"> * 获取URL参数</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@param</span> name   String 要获取的参数Key</span><br><span class=\"hljs-comment\"> */</span><br><br><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">getQueryString</span>(<span class=\"hljs-params\">name</span>) &#123;<br>  <span class=\"hljs-keyword\">var</span> reg = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">RegExp</span>(<span class=\"hljs-string\">&quot;(^|&amp;)&quot;</span> + name + <span class=\"hljs-string\">&quot;=([^&amp;]*)(&amp;|$)&quot;</span>);<br>  <span class=\"hljs-keyword\">var</span> r = <span class=\"hljs-variable language_\">window</span>.<span class=\"hljs-property\">location</span>.<span class=\"hljs-property\">search</span>.<span class=\"hljs-title function_\">substr</span>(<span class=\"hljs-number\">1</span>).<span class=\"hljs-title function_\">match</span>(reg);<br>  <span class=\"hljs-keyword\">if</span> (r != <span class=\"hljs-literal\">null</span>) <span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">unescape</span>(r[<span class=\"hljs-number\">2</span>]);<br>  <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">null</span>;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h6 id=\"判断-str-字符串中是否含有字符串\"><a href=\"#判断-str-字符串中是否含有字符串\" class=\"headerlink\" title=\"判断 str 字符串中是否含有字符串\"></a>判断 str 字符串中是否含有字符串</h6><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\"><span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\"> * 判断 str 字符串中是否含有字符串 subStr</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@param</span> &#123;<span class=\"hljs-type\"></span>&#125; str 原字符串</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@param</span> &#123;<span class=\"hljs-type\"></span>&#125; subStr 要查找的字符串</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@param</span> &#123;<span class=\"hljs-type\"></span>&#125; isIgnoreCase 是否忽略大小写</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@return</span> &#123;<span class=\"hljs-type\">Boolean</span>&#125;</span><br><span class=\"hljs-comment\"> */</span><br><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">contains</span>(<span class=\"hljs-params\">str, subStr, isIgnoreCase</span>) &#123;<br>  <span class=\"hljs-keyword\">if</span> (isIgnoreCase) &#123;<br>    <span class=\"hljs-comment\">// 忽略大小写</span><br>    str = str.<span class=\"hljs-title function_\">toLowerCase</span>();<br>    subStr = subStr.<span class=\"hljs-title function_\">toLowerCase</span>();<br>  &#125;<br>  <span class=\"hljs-keyword\">var</span> startChar = subStr.<span class=\"hljs-title function_\">substring</span>(<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">1</span>);<br>  <span class=\"hljs-keyword\">var</span> strLen = subStr.<span class=\"hljs-property\">length</span>;<br>  <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">var</span> j = <span class=\"hljs-number\">0</span>; j &lt; str.<span class=\"hljs-property\">length</span> - strLen + <span class=\"hljs-number\">1</span>; j++) &#123;<br>    <span class=\"hljs-keyword\">if</span> (str.<span class=\"hljs-title function_\">charAt</span>(j) == startChar) &#123;<br>      <span class=\"hljs-comment\">/* 如果匹配起始字符,开始查找 */</span><br>      <span class=\"hljs-keyword\">if</span> (str.<span class=\"hljs-title function_\">substring</span>(j, j + strLen) == subStr) &#123;<br>        <span class=\"hljs-comment\">/*如果从j开始的字符与 str 匹配 */</span><br>        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">true</span>;<br>      &#125;<br>    &#125;<br>  &#125;<br>  <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">false</span>;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h6 id=\"cookie-操作\"><a href=\"#cookie-操作\" class=\"headerlink\" title=\"cookie 操作\"></a>cookie 操作</h6><ul>\n<li>设置 cookie</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\"><span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\"> * 设置cookie</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@param</span> name  String key</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@param</span> value String Value</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@param</span> expdays Number 过期时间</span><br><span class=\"hljs-comment\"> */</span><br><br><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">setCookie</span>(<span class=\"hljs-params\">name, value, expdays</span>) &#123;<br>  <span class=\"hljs-keyword\">var</span> expdate = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Date</span>();<br>  <span class=\"hljs-comment\">//设置Cookie过期日期</span><br>  expdate.<span class=\"hljs-title function_\">setDate</span>(expdate.<span class=\"hljs-title function_\">getDate</span>() + expdays);<br>  <span class=\"hljs-comment\">//添加Cookie</span><br>  <span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-property\">cookie</span> =<br>    name + <span class=\"hljs-string\">&quot;=&quot;</span> + <span class=\"hljs-built_in\">escape</span>(value) + <span class=\"hljs-string\">&quot;;expires=&quot;</span> + expdate.<span class=\"hljs-title function_\">toUTCString</span>();<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<ul>\n<li>获取 cookie</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\"><span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\"> * 获取cookie</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@param</span> name String key</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@returns</span> &#123;<span class=\"hljs-type\">string</span>&#125;</span><br><span class=\"hljs-comment\"> */</span><br><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">getCookie</span>(<span class=\"hljs-params\">name</span>) &#123;<br>  <span class=\"hljs-comment\">//获取name在Cookie中起止位置</span><br>  <span class=\"hljs-keyword\">var</span> start = <span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-property\">cookie</span>.<span class=\"hljs-title function_\">indexOf</span>(name + <span class=\"hljs-string\">&quot;=&quot;</span>);<br><br>  <span class=\"hljs-keyword\">if</span> (start != -<span class=\"hljs-number\">1</span>) &#123;<br>    start = start + name.<span class=\"hljs-property\">length</span> + <span class=\"hljs-number\">1</span>;<br>    <span class=\"hljs-comment\">//获取value的终止位置</span><br>    <span class=\"hljs-keyword\">var</span> end = <span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-property\">cookie</span>.<span class=\"hljs-title function_\">indexOf</span>(<span class=\"hljs-string\">&quot;;&quot;</span>, start);<br>    <span class=\"hljs-keyword\">if</span> (end == -<span class=\"hljs-number\">1</span>) end = <span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-property\">cookie</span>.<span class=\"hljs-property\">length</span>;<br>    <span class=\"hljs-comment\">//截获cookie的value值,并返回</span><br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">unescape</span>(<span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-property\">cookie</span>.<span class=\"hljs-title function_\">substring</span>(start, end));<br>  &#125;<br>  <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&quot;&quot;</span>;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<ul>\n<li>删除 cookie</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">delCookie</span>(<span class=\"hljs-params\">name</span>) &#123;<br>  <span class=\"hljs-keyword\">var</span> exp = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Date</span>();<br>  exp.<span class=\"hljs-title function_\">setTime</span>(exp.<span class=\"hljs-title function_\">getTime</span>() - <span class=\"hljs-number\">1</span>);<br>  <span class=\"hljs-keyword\">var</span> cval = <span class=\"hljs-title function_\">getCookie</span>(name);<br>  <span class=\"hljs-keyword\">if</span> (cval != <span class=\"hljs-literal\">null</span>)<br>    <span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-property\">cookie</span> = name + <span class=\"hljs-string\">&quot;=&quot;</span> + cval + <span class=\"hljs-string\">&quot;;expires=&quot;</span> + exp.<span class=\"hljs-title function_\">toGMTString</span>();<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<p>上述功能已经发布至 NPM 参考<a href=\"https://www.npmjs.com/package/p-utils-cli\">p-utils</a></p>\n","more":"<h6 id=\"图片预加载\"><a href=\"#图片预加载\" class=\"headerlink\" title=\"图片预加载\"></a>图片预加载</h6><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs javascript\"><span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\"> * 预加载图片</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@param</span> source   Array 预加载图片列表</span><br><span class=\"hljs-comment\"> */</span><br><span class=\"hljs-comment\">/*预加载图片*/</span><br><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">preLoadImg</span>(<span class=\"hljs-params\">source</span>) &#123;<br>  <span class=\"hljs-comment\">/*加载图片方法*/</span><br>  <span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">loadImage</span>(<span class=\"hljs-params\">url</span>) &#123;<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Promise</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">resolve, reject</span>) =&gt;</span> &#123;<br>      <span class=\"hljs-keyword\">let</span> img = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Image</span>();<br>      img.<span class=\"hljs-property\">onload</span> = <span class=\"hljs-function\">() =&gt;</span> <span class=\"hljs-title function_\">resolve</span>(img);<br>      img.<span class=\"hljs-property\">onerror</span> = reject;<br>      img.<span class=\"hljs-property\">src</span> = url;<br>    &#125;);<br>  &#125;<br><br>  <span class=\"hljs-keyword\">let</span> pr = [];<br>  source.<span class=\"hljs-title function_\">forEach</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">url</span>) =&gt;</span> &#123;<br>    <span class=\"hljs-comment\">// 预加载图片</span><br>    <span class=\"hljs-keyword\">let</span> p = <span class=\"hljs-title function_\">loadImage</span>(url)<br>      .<span class=\"hljs-title function_\">then</span>(<span class=\"hljs-function\">() =&gt;</span> &#123;<br>        <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">&quot;Single image loading completed&quot;</span>);<br>      &#125;)<br>      .<span class=\"hljs-title function_\">catch</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">err</span>) =&gt;</span> &#123;<br>        <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(err);<br>      &#125;);<br>    pr.<span class=\"hljs-title function_\">push</span>(p);<br>  &#125;);<br>  <span class=\"hljs-comment\">// 图片全部加载完</span><br>  <span class=\"hljs-title class_\">Promise</span>.<span class=\"hljs-title function_\">all</span>(pr).<span class=\"hljs-title function_\">then</span>(<span class=\"hljs-function\">() =&gt;</span> &#123;<br>    <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">&quot;All images loaded&quot;</span>);<br>  &#125;);<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h6 id=\"获取-url-参数\"><a href=\"#获取-url-参数\" class=\"headerlink\" title=\"获取 url 参数\"></a>获取 url 参数</h6><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\"><span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\"> * 获取URL参数</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@param</span> name   String 要获取的参数Key</span><br><span class=\"hljs-comment\"> */</span><br><br><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">getQueryString</span>(<span class=\"hljs-params\">name</span>) &#123;<br>  <span class=\"hljs-keyword\">var</span> reg = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">RegExp</span>(<span class=\"hljs-string\">&quot;(^|&amp;)&quot;</span> + name + <span class=\"hljs-string\">&quot;=([^&amp;]*)(&amp;|$)&quot;</span>);<br>  <span class=\"hljs-keyword\">var</span> r = <span class=\"hljs-variable language_\">window</span>.<span class=\"hljs-property\">location</span>.<span class=\"hljs-property\">search</span>.<span class=\"hljs-title function_\">substr</span>(<span class=\"hljs-number\">1</span>).<span class=\"hljs-title function_\">match</span>(reg);<br>  <span class=\"hljs-keyword\">if</span> (r != <span class=\"hljs-literal\">null</span>) <span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">unescape</span>(r[<span class=\"hljs-number\">2</span>]);<br>  <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">null</span>;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h6 id=\"判断-str-字符串中是否含有字符串\"><a href=\"#判断-str-字符串中是否含有字符串\" class=\"headerlink\" title=\"判断 str 字符串中是否含有字符串\"></a>判断 str 字符串中是否含有字符串</h6><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\"><span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\"> * 判断 str 字符串中是否含有字符串 subStr</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@param</span> &#123;<span class=\"hljs-type\"></span>&#125; str 原字符串</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@param</span> &#123;<span class=\"hljs-type\"></span>&#125; subStr 要查找的字符串</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@param</span> &#123;<span class=\"hljs-type\"></span>&#125; isIgnoreCase 是否忽略大小写</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@return</span> &#123;<span class=\"hljs-type\">Boolean</span>&#125;</span><br><span class=\"hljs-comment\"> */</span><br><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">contains</span>(<span class=\"hljs-params\">str, subStr, isIgnoreCase</span>) &#123;<br>  <span class=\"hljs-keyword\">if</span> (isIgnoreCase) &#123;<br>    <span class=\"hljs-comment\">// 忽略大小写</span><br>    str = str.<span class=\"hljs-title function_\">toLowerCase</span>();<br>    subStr = subStr.<span class=\"hljs-title function_\">toLowerCase</span>();<br>  &#125;<br>  <span class=\"hljs-keyword\">var</span> startChar = subStr.<span class=\"hljs-title function_\">substring</span>(<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">1</span>);<br>  <span class=\"hljs-keyword\">var</span> strLen = subStr.<span class=\"hljs-property\">length</span>;<br>  <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">var</span> j = <span class=\"hljs-number\">0</span>; j &lt; str.<span class=\"hljs-property\">length</span> - strLen + <span class=\"hljs-number\">1</span>; j++) &#123;<br>    <span class=\"hljs-keyword\">if</span> (str.<span class=\"hljs-title function_\">charAt</span>(j) == startChar) &#123;<br>      <span class=\"hljs-comment\">/* 如果匹配起始字符,开始查找 */</span><br>      <span class=\"hljs-keyword\">if</span> (str.<span class=\"hljs-title function_\">substring</span>(j, j + strLen) == subStr) &#123;<br>        <span class=\"hljs-comment\">/*如果从j开始的字符与 str 匹配 */</span><br>        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">true</span>;<br>      &#125;<br>    &#125;<br>  &#125;<br>  <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">false</span>;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h6 id=\"cookie-操作\"><a href=\"#cookie-操作\" class=\"headerlink\" title=\"cookie 操作\"></a>cookie 操作</h6><ul>\n<li>设置 cookie</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\"><span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\"> * 设置cookie</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@param</span> name  String key</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@param</span> value String Value</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@param</span> expdays Number 过期时间</span><br><span class=\"hljs-comment\"> */</span><br><br><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">setCookie</span>(<span class=\"hljs-params\">name, value, expdays</span>) &#123;<br>  <span class=\"hljs-keyword\">var</span> expdate = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Date</span>();<br>  <span class=\"hljs-comment\">//设置Cookie过期日期</span><br>  expdate.<span class=\"hljs-title function_\">setDate</span>(expdate.<span class=\"hljs-title function_\">getDate</span>() + expdays);<br>  <span class=\"hljs-comment\">//添加Cookie</span><br>  <span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-property\">cookie</span> =<br>    name + <span class=\"hljs-string\">&quot;=&quot;</span> + <span class=\"hljs-built_in\">escape</span>(value) + <span class=\"hljs-string\">&quot;;expires=&quot;</span> + expdate.<span class=\"hljs-title function_\">toUTCString</span>();<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<ul>\n<li>获取 cookie</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\"><span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\"> * 获取cookie</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@param</span> name String key</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@returns</span> &#123;<span class=\"hljs-type\">string</span>&#125;</span><br><span class=\"hljs-comment\"> */</span><br><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">getCookie</span>(<span class=\"hljs-params\">name</span>) &#123;<br>  <span class=\"hljs-comment\">//获取name在Cookie中起止位置</span><br>  <span class=\"hljs-keyword\">var</span> start = <span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-property\">cookie</span>.<span class=\"hljs-title function_\">indexOf</span>(name + <span class=\"hljs-string\">&quot;=&quot;</span>);<br><br>  <span class=\"hljs-keyword\">if</span> (start != -<span class=\"hljs-number\">1</span>) &#123;<br>    start = start + name.<span class=\"hljs-property\">length</span> + <span class=\"hljs-number\">1</span>;<br>    <span class=\"hljs-comment\">//获取value的终止位置</span><br>    <span class=\"hljs-keyword\">var</span> end = <span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-property\">cookie</span>.<span class=\"hljs-title function_\">indexOf</span>(<span class=\"hljs-string\">&quot;;&quot;</span>, start);<br>    <span class=\"hljs-keyword\">if</span> (end == -<span class=\"hljs-number\">1</span>) end = <span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-property\">cookie</span>.<span class=\"hljs-property\">length</span>;<br>    <span class=\"hljs-comment\">//截获cookie的value值,并返回</span><br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">unescape</span>(<span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-property\">cookie</span>.<span class=\"hljs-title function_\">substring</span>(start, end));<br>  &#125;<br>  <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&quot;&quot;</span>;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<ul>\n<li>删除 cookie</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">delCookie</span>(<span class=\"hljs-params\">name</span>) &#123;<br>  <span class=\"hljs-keyword\">var</span> exp = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Date</span>();<br>  exp.<span class=\"hljs-title function_\">setTime</span>(exp.<span class=\"hljs-title function_\">getTime</span>() - <span class=\"hljs-number\">1</span>);<br>  <span class=\"hljs-keyword\">var</span> cval = <span class=\"hljs-title function_\">getCookie</span>(name);<br>  <span class=\"hljs-keyword\">if</span> (cval != <span class=\"hljs-literal\">null</span>)<br>    <span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-property\">cookie</span> = name + <span class=\"hljs-string\">&quot;=&quot;</span> + cval + <span class=\"hljs-string\">&quot;;expires=&quot;</span> + exp.<span class=\"hljs-title function_\">toGMTString</span>();<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<p>上述功能已经发布至 NPM 参考<a href=\"https://www.npmjs.com/package/p-utils-cli\">p-utils</a></p>\n"},{"title":"使用 githubActions 完成NPM包自动发布","excerpt":"使用 githubActions 完成NPM包自动发布","_content":"\n### 背景\n\n为了拓宽知识面，将前几天发的 utils 使用 Vite 打包成了 umd 发布到了 npm,主要是用来自己使用和相关知识学习。在发布过程中，发现每次提交 npmPackage 新版本都需要进行打包，本地发布，非常繁琐，了解了一下可以使用 githubActions 进行自动发布,现在将步骤记录下。\n\n### 实现概述\n\n1. 首先我们需要打通 github 和 npm 之间的联系，了解后发现 npm 提供了 AccessToken,github 也提供了[secrets](https://docs.github.com/zh/actions/security-guides/using-secrets-in-github-actions)可以保存秘钥,实现联通。\n2. 联通后需要执行我们的部署脚本，让其在 Action 中自动执行。\n\n### 脚本实现\n\n```yml\nname: Publish Package to npmjs\n\non:\n  push:\n    branches: [main]\n\njobs:\n  build:\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v3\n      # Setup .npmrc file to publish to npm\n      - uses: actions/setup-node@v3\n        with:\n          node-version: \"16.x\"\n          registry-url: \"https://registry.npmjs.org\"\n      - run: npm install\n      - run: npm run build\n      - run: npm publish\n        env:\n          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}\n```\n\n上面是我的脚本，有相关基础的话很容易看懂。中间少了版本号生成的一步，所以在发布到 npm 之前记得手动修改哦，或者使用 npm 提供的方法进行版本号递增。\n","source":"_posts/20231214175822.md","raw":"---\ntitle: 使用 githubActions 完成NPM包自动发布\ntags: github\nexcerpt: 使用 githubActions 完成NPM包自动发布\ncategories: github\n---\n\n### 背景\n\n为了拓宽知识面，将前几天发的 utils 使用 Vite 打包成了 umd 发布到了 npm,主要是用来自己使用和相关知识学习。在发布过程中，发现每次提交 npmPackage 新版本都需要进行打包，本地发布，非常繁琐，了解了一下可以使用 githubActions 进行自动发布,现在将步骤记录下。\n\n### 实现概述\n\n1. 首先我们需要打通 github 和 npm 之间的联系，了解后发现 npm 提供了 AccessToken,github 也提供了[secrets](https://docs.github.com/zh/actions/security-guides/using-secrets-in-github-actions)可以保存秘钥,实现联通。\n2. 联通后需要执行我们的部署脚本，让其在 Action 中自动执行。\n\n### 脚本实现\n\n```yml\nname: Publish Package to npmjs\n\non:\n  push:\n    branches: [main]\n\njobs:\n  build:\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v3\n      # Setup .npmrc file to publish to npm\n      - uses: actions/setup-node@v3\n        with:\n          node-version: \"16.x\"\n          registry-url: \"https://registry.npmjs.org\"\n      - run: npm install\n      - run: npm run build\n      - run: npm publish\n        env:\n          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}\n```\n\n上面是我的脚本，有相关基础的话很容易看懂。中间少了版本号生成的一步，所以在发布到 npm 之前记得手动修改哦，或者使用 npm 提供的方法进行版本号递增。\n","slug":"20231214175822","published":1,"date":"2023-12-14T09:58:35.031Z","updated":"2023-12-18T06:49:39.688Z","_id":"clq51s05t0000e4o918df9lkf","comments":1,"layout":"post","photos":[],"content":"<h3 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h3><p>为了拓宽知识面，将前几天发的 utils 使用 Vite 打包成了 umd 发布到了 npm,主要是用来自己使用和相关知识学习。在发布过程中，发现每次提交 npmPackage 新版本都需要进行打包，本地发布，非常繁琐，了解了一下可以使用 githubActions 进行自动发布,现在将步骤记录下。</p>\n<h3 id=\"实现概述\"><a href=\"#实现概述\" class=\"headerlink\" title=\"实现概述\"></a>实现概述</h3><ol>\n<li>首先我们需要打通 github 和 npm 之间的联系，了解后发现 npm 提供了 AccessToken,github 也提供了<a href=\"https://docs.github.com/zh/actions/security-guides/using-secrets-in-github-actions\">secrets</a>可以保存秘钥,实现联通。</li>\n<li>联通后需要执行我们的部署脚本，让其在 Action 中自动执行。</li>\n</ol>\n<h3 id=\"脚本实现\"><a href=\"#脚本实现\" class=\"headerlink\" title=\"脚本实现\"></a>脚本实现</h3><figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs yml\"><span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">Publish</span> <span class=\"hljs-string\">Package</span> <span class=\"hljs-string\">to</span> <span class=\"hljs-string\">npmjs</span><br><br><span class=\"hljs-attr\">on:</span><br>  <span class=\"hljs-attr\">push:</span><br>    <span class=\"hljs-attr\">branches:</span> [<span class=\"hljs-string\">main</span>]<br><br><span class=\"hljs-attr\">jobs:</span><br>  <span class=\"hljs-attr\">build:</span><br>    <span class=\"hljs-attr\">runs-on:</span> <span class=\"hljs-string\">ubuntu-latest</span><br>    <span class=\"hljs-attr\">steps:</span><br>      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">uses:</span> <span class=\"hljs-string\">actions/checkout@v3</span><br>      <span class=\"hljs-comment\"># Setup .npmrc file to publish to npm</span><br>      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">uses:</span> <span class=\"hljs-string\">actions/setup-node@v3</span><br>        <span class=\"hljs-attr\">with:</span><br>          <span class=\"hljs-attr\">node-version:</span> <span class=\"hljs-string\">&quot;16.x&quot;</span><br>          <span class=\"hljs-attr\">registry-url:</span> <span class=\"hljs-string\">&quot;https://registry.npmjs.org&quot;</span><br>      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">run:</span> <span class=\"hljs-string\">npm</span> <span class=\"hljs-string\">install</span><br>      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">run:</span> <span class=\"hljs-string\">npm</span> <span class=\"hljs-string\">run</span> <span class=\"hljs-string\">build</span><br>      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">run:</span> <span class=\"hljs-string\">npm</span> <span class=\"hljs-string\">publish</span><br>        <span class=\"hljs-attr\">env:</span><br>          <span class=\"hljs-attr\">NODE_AUTH_TOKEN:</span> <span class=\"hljs-string\">$&#123;&#123;</span> <span class=\"hljs-string\">secrets.NPM_TOKEN</span> <span class=\"hljs-string\">&#125;&#125;</span><br></code></pre></td></tr></table></figure>\n\n<p>上面是我的脚本，有相关基础的话很容易看懂。中间少了版本号生成的一步，所以在发布到 npm 之前记得手动修改哦，或者使用 npm 提供的方法进行版本号递增。</p>\n","more":"<h3 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h3><p>为了拓宽知识面，将前几天发的 utils 使用 Vite 打包成了 umd 发布到了 npm,主要是用来自己使用和相关知识学习。在发布过程中，发现每次提交 npmPackage 新版本都需要进行打包，本地发布，非常繁琐，了解了一下可以使用 githubActions 进行自动发布,现在将步骤记录下。</p>\n<h3 id=\"实现概述\"><a href=\"#实现概述\" class=\"headerlink\" title=\"实现概述\"></a>实现概述</h3><ol>\n<li>首先我们需要打通 github 和 npm 之间的联系，了解后发现 npm 提供了 AccessToken,github 也提供了<a href=\"https://docs.github.com/zh/actions/security-guides/using-secrets-in-github-actions\">secrets</a>可以保存秘钥,实现联通。</li>\n<li>联通后需要执行我们的部署脚本，让其在 Action 中自动执行。</li>\n</ol>\n<h3 id=\"脚本实现\"><a href=\"#脚本实现\" class=\"headerlink\" title=\"脚本实现\"></a>脚本实现</h3><figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs yml\"><span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">Publish</span> <span class=\"hljs-string\">Package</span> <span class=\"hljs-string\">to</span> <span class=\"hljs-string\">npmjs</span><br><br><span class=\"hljs-attr\">on:</span><br>  <span class=\"hljs-attr\">push:</span><br>    <span class=\"hljs-attr\">branches:</span> [<span class=\"hljs-string\">main</span>]<br><br><span class=\"hljs-attr\">jobs:</span><br>  <span class=\"hljs-attr\">build:</span><br>    <span class=\"hljs-attr\">runs-on:</span> <span class=\"hljs-string\">ubuntu-latest</span><br>    <span class=\"hljs-attr\">steps:</span><br>      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">uses:</span> <span class=\"hljs-string\">actions/checkout@v3</span><br>      <span class=\"hljs-comment\"># Setup .npmrc file to publish to npm</span><br>      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">uses:</span> <span class=\"hljs-string\">actions/setup-node@v3</span><br>        <span class=\"hljs-attr\">with:</span><br>          <span class=\"hljs-attr\">node-version:</span> <span class=\"hljs-string\">&quot;16.x&quot;</span><br>          <span class=\"hljs-attr\">registry-url:</span> <span class=\"hljs-string\">&quot;https://registry.npmjs.org&quot;</span><br>      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">run:</span> <span class=\"hljs-string\">npm</span> <span class=\"hljs-string\">install</span><br>      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">run:</span> <span class=\"hljs-string\">npm</span> <span class=\"hljs-string\">run</span> <span class=\"hljs-string\">build</span><br>      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">run:</span> <span class=\"hljs-string\">npm</span> <span class=\"hljs-string\">publish</span><br>        <span class=\"hljs-attr\">env:</span><br>          <span class=\"hljs-attr\">NODE_AUTH_TOKEN:</span> <span class=\"hljs-string\">$&#123;&#123;</span> <span class=\"hljs-string\">secrets.NPM_TOKEN</span> <span class=\"hljs-string\">&#125;&#125;</span><br></code></pre></td></tr></table></figure>\n\n<p>上面是我的脚本，有相关基础的话很容易看懂。中间少了版本号生成的一步，所以在发布到 npm 之前记得手动修改哦，或者使用 npm 提供的方法进行版本号递增。</p>\n"},{"title":"问题记录-关于 VUECLI3+ 容易忽视的问题-环境变量与build","excerpt":"环境变量与build","_content":"\n## 背景\n由于近两年技术栈切换到了Vue3.0，打包工具自然而然的切换到了Vite，导致在维护旧的项目时会忽视一些关键性问题。在最近一次开发过程中，发现测试环境部署的项目一直存在比较严重的缓存问题，排查后发现是打包后的文件hash值没有发生变化，导致浏览器直接读取缓存文件，而没有重新请求资源。\n\n## 追根溯源\n既然发现是build过程中发现的问题，就查阅了VUECLI3+的文档，发现文档中关于环境变量的说明中，有这么一段话：\n\n当运行 vue-cli-service 命令时，所有的环境变量都从对应的环境文件中载入。如果文件内部不包含 NODE_ENV 变量，它的值将取决于模式，例如，在 production 模式下被设置为 \"production\"，在 test 模式下被设置为 \"test\"，默认则是 \"development\"。\n\nNODE_ENV 将决定您的应用运行的模式，是开发，生产还是测试，因此也决定了创建哪种 webpack 配置。\n\n例如通过将 NODE_ENV 设置为 \"test\"，Vue CLI 会创建一个优化过后的，并且旨在用于单元测试的 webpack 配置，它并不会处理图片以及一些对单元测试非必需的其他资源。\n\n同理，NODE_ENV=development 创建一个 webpack 配置，该配置启用热更新，不会对资源进行 hash 也不会打出 vendor bundles，目的是为了在开发的时候能够快速重新构建。\n\n当你运行 vue-cli-service build 命令时，无论你要部署到哪个环境，应该始终把 NODE_ENV 设置为 \"production\"来获取可用于部署的应用程序。\n\n## 解决方案\n上述文档描述的很清楚了，顺着文档的描述将test的环境变量NODE_ENV设置为\"production\"即可。\n\n## 总结\n在开发过程中，文档能解决框架90%的问题，因此，在开发过程中，一定要仔细阅读文档，避免走弯路。\n## 参考\n [Vue CLI - 模式与环境变量](https://cli.vuejs.org/zh/guide/mode-and-env.html#%E6%A8%A1%E5%BC%8F)","source":"_posts/20240223162747.md","raw":"---\ntitle: 问题记录-关于 VUECLI3+ 容易忽视的问题-环境变量与build\ntags: 开发日常\nexcerpt: 环境变量与build\ncategories: 开发日常\n---\n\n## 背景\n由于近两年技术栈切换到了Vue3.0，打包工具自然而然的切换到了Vite，导致在维护旧的项目时会忽视一些关键性问题。在最近一次开发过程中，发现测试环境部署的项目一直存在比较严重的缓存问题，排查后发现是打包后的文件hash值没有发生变化，导致浏览器直接读取缓存文件，而没有重新请求资源。\n\n## 追根溯源\n既然发现是build过程中发现的问题，就查阅了VUECLI3+的文档，发现文档中关于环境变量的说明中，有这么一段话：\n\n当运行 vue-cli-service 命令时，所有的环境变量都从对应的环境文件中载入。如果文件内部不包含 NODE_ENV 变量，它的值将取决于模式，例如，在 production 模式下被设置为 \"production\"，在 test 模式下被设置为 \"test\"，默认则是 \"development\"。\n\nNODE_ENV 将决定您的应用运行的模式，是开发，生产还是测试，因此也决定了创建哪种 webpack 配置。\n\n例如通过将 NODE_ENV 设置为 \"test\"，Vue CLI 会创建一个优化过后的，并且旨在用于单元测试的 webpack 配置，它并不会处理图片以及一些对单元测试非必需的其他资源。\n\n同理，NODE_ENV=development 创建一个 webpack 配置，该配置启用热更新，不会对资源进行 hash 也不会打出 vendor bundles，目的是为了在开发的时候能够快速重新构建。\n\n当你运行 vue-cli-service build 命令时，无论你要部署到哪个环境，应该始终把 NODE_ENV 设置为 \"production\"来获取可用于部署的应用程序。\n\n## 解决方案\n上述文档描述的很清楚了，顺着文档的描述将test的环境变量NODE_ENV设置为\"production\"即可。\n\n## 总结\n在开发过程中，文档能解决框架90%的问题，因此，在开发过程中，一定要仔细阅读文档，避免走弯路。\n## 参考\n [Vue CLI - 模式与环境变量](https://cli.vuejs.org/zh/guide/mode-and-env.html#%E6%A8%A1%E5%BC%8F)","slug":"20240223162747","published":1,"date":"2024-02-23T08:28:06.058Z","updated":"2024-02-23T09:38:01.672Z","_id":"clsyednqr000017o95jhyg6f1","comments":1,"layout":"post","photos":[],"content":"<h2 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h2><p>由于近两年技术栈切换到了Vue3.0，打包工具自然而然的切换到了Vite，导致在维护旧的项目时会忽视一些关键性问题。在最近一次开发过程中，发现测试环境部署的项目一直存在比较严重的缓存问题，排查后发现是打包后的文件hash值没有发生变化，导致浏览器直接读取缓存文件，而没有重新请求资源。</p>\n<h2 id=\"追根溯源\"><a href=\"#追根溯源\" class=\"headerlink\" title=\"追根溯源\"></a>追根溯源</h2><p>既然发现是build过程中发现的问题，就查阅了VUECLI3+的文档，发现文档中关于环境变量的说明中，有这么一段话：</p>\n<p>当运行 vue-cli-service 命令时，所有的环境变量都从对应的环境文件中载入。如果文件内部不包含 NODE_ENV 变量，它的值将取决于模式，例如，在 production 模式下被设置为 “production”，在 test 模式下被设置为 “test”，默认则是 “development”。</p>\n<p>NODE_ENV 将决定您的应用运行的模式，是开发，生产还是测试，因此也决定了创建哪种 webpack 配置。</p>\n<p>例如通过将 NODE_ENV 设置为 “test”，Vue CLI 会创建一个优化过后的，并且旨在用于单元测试的 webpack 配置，它并不会处理图片以及一些对单元测试非必需的其他资源。</p>\n<p>同理，NODE_ENV&#x3D;development 创建一个 webpack 配置，该配置启用热更新，不会对资源进行 hash 也不会打出 vendor bundles，目的是为了在开发的时候能够快速重新构建。</p>\n<p>当你运行 vue-cli-service build 命令时，无论你要部署到哪个环境，应该始终把 NODE_ENV 设置为 “production”来获取可用于部署的应用程序。</p>\n<h2 id=\"解决方案\"><a href=\"#解决方案\" class=\"headerlink\" title=\"解决方案\"></a>解决方案</h2><p>上述文档描述的很清楚了，顺着文档的描述将test的环境变量NODE_ENV设置为”production”即可。</p>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>在开发过程中，文档能解决框架90%的问题，因此，在开发过程中，一定要仔细阅读文档，避免走弯路。</p>\n<h2 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h2><p> <a href=\"https://cli.vuejs.org/zh/guide/mode-and-env.html#%E6%A8%A1%E5%BC%8F\">Vue CLI - 模式与环境变量</a></p>\n","more":"<h2 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h2><p>由于近两年技术栈切换到了Vue3.0，打包工具自然而然的切换到了Vite，导致在维护旧的项目时会忽视一些关键性问题。在最近一次开发过程中，发现测试环境部署的项目一直存在比较严重的缓存问题，排查后发现是打包后的文件hash值没有发生变化，导致浏览器直接读取缓存文件，而没有重新请求资源。</p>\n<h2 id=\"追根溯源\"><a href=\"#追根溯源\" class=\"headerlink\" title=\"追根溯源\"></a>追根溯源</h2><p>既然发现是build过程中发现的问题，就查阅了VUECLI3+的文档，发现文档中关于环境变量的说明中，有这么一段话：</p>\n<p>当运行 vue-cli-service 命令时，所有的环境变量都从对应的环境文件中载入。如果文件内部不包含 NODE_ENV 变量，它的值将取决于模式，例如，在 production 模式下被设置为 “production”，在 test 模式下被设置为 “test”，默认则是 “development”。</p>\n<p>NODE_ENV 将决定您的应用运行的模式，是开发，生产还是测试，因此也决定了创建哪种 webpack 配置。</p>\n<p>例如通过将 NODE_ENV 设置为 “test”，Vue CLI 会创建一个优化过后的，并且旨在用于单元测试的 webpack 配置，它并不会处理图片以及一些对单元测试非必需的其他资源。</p>\n<p>同理，NODE_ENV&#x3D;development 创建一个 webpack 配置，该配置启用热更新，不会对资源进行 hash 也不会打出 vendor bundles，目的是为了在开发的时候能够快速重新构建。</p>\n<p>当你运行 vue-cli-service build 命令时，无论你要部署到哪个环境，应该始终把 NODE_ENV 设置为 “production”来获取可用于部署的应用程序。</p>\n<h2 id=\"解决方案\"><a href=\"#解决方案\" class=\"headerlink\" title=\"解决方案\"></a>解决方案</h2><p>上述文档描述的很清楚了，顺着文档的描述将test的环境变量NODE_ENV设置为”production”即可。</p>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>在开发过程中，文档能解决框架90%的问题，因此，在开发过程中，一定要仔细阅读文档，避免走弯路。</p>\n<h2 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h2><p> <a href=\"https://cli.vuejs.org/zh/guide/mode-and-env.html#%E6%A8%A1%E5%BC%8F\">Vue CLI - 模式与环境变量</a></p>\n"},{"title":"闭包提权漏洞：修改私有对象的属性","excerpt":"闭包提权漏洞","_content":"\n#### 问题来源\n\n以前在面试过程中发现一道有趣的题，抖音刷到了袁进老师的视频，对该问题有了更进一步的认识，记录一下。\n\n#### 面试题内容\n\n> 如何在不改变源代码的情况下，修改 o 对象的属性？\n\n```javascript\nlet o =(function () {\n  var obj = {\n    a: 1,\n    b: 2,\n  };\n  return {\n    get: function (key) {\n      return obj[key];\n    },\n  };\n})()\n```\n\n1. 首先要读一个对象，就会想到读对象的原型，原型有 valueOf 方法，可以读到对象\n\n```javascript\nconsole.log(o.get(\"valueOf\")); // output : [Function: valueOf]\n```\n\n2. 读到 valueOf 方法，可以调用 valueOf 方法，读到对象\n\n```javascript\nconsole.log(o.get(\"valueOf\")()); // output : error - 知识点1:this指向问题\n// 上述代码等同于\nlet handleValueOf = o.valueOf;\nhandleValueOf(); // output : error  this不指向对象本身\n```\n\n3. valueOf 无法读到对象本身，可以直接使用 Object.defineProperty 增加一个返回对象本身的方法\n\n```javascript\nObject.defineProperty(Object.prototype, \"hack\", {\n  get: function () {\n    return this;\n  },\n});\n```\n\n4. 同多原型链自定义方法访问到私有对象本身,更改 o 对象本身,就实现了上述功能\n\n```javascript\nlet objectBackup = o.get(\"hack\");\n\nobjectBackup.c = \"hackInner\";\n\nconsole.log(o.get(\"c\")); // 'hackInner'\n```\n\n#### 防御\n\n1. 原型设置为 null\n\n```javascript\nlet o =(function () {\n  var obj = {\n    a: 1,\n    b: 2,\n  };\n\n  Object.setPrototypeOf(obj, null);\n  return {\n    get: function (key) {\n      return obj[key];\n    },\n  };\n})()\n```\n\n2. 在访问器中判断是否自身携带属性\n\n```javascript\nlet o = (function () {\n  var obj = {\n    a: 1,\n    b: 2,\n  };\n\n  return {\n    get: function (key) {\n      if (obj.hasOwnProperty(key)) {\n        return obj[key];\n      }\n    },\n  };\n})()\n```\n\n#### 总结\n\n一切代码皆有漏洞，需要谨慎编写，尽量防御\n","source":"_posts/20240313123053.md","raw":"---\ntitle: 闭包提权漏洞：修改私有对象的属性\ntags: js\nexcerpt: 闭包提权漏洞\ncategories: js\n---\n\n#### 问题来源\n\n以前在面试过程中发现一道有趣的题，抖音刷到了袁进老师的视频，对该问题有了更进一步的认识，记录一下。\n\n#### 面试题内容\n\n> 如何在不改变源代码的情况下，修改 o 对象的属性？\n\n```javascript\nlet o =(function () {\n  var obj = {\n    a: 1,\n    b: 2,\n  };\n  return {\n    get: function (key) {\n      return obj[key];\n    },\n  };\n})()\n```\n\n1. 首先要读一个对象，就会想到读对象的原型，原型有 valueOf 方法，可以读到对象\n\n```javascript\nconsole.log(o.get(\"valueOf\")); // output : [Function: valueOf]\n```\n\n2. 读到 valueOf 方法，可以调用 valueOf 方法，读到对象\n\n```javascript\nconsole.log(o.get(\"valueOf\")()); // output : error - 知识点1:this指向问题\n// 上述代码等同于\nlet handleValueOf = o.valueOf;\nhandleValueOf(); // output : error  this不指向对象本身\n```\n\n3. valueOf 无法读到对象本身，可以直接使用 Object.defineProperty 增加一个返回对象本身的方法\n\n```javascript\nObject.defineProperty(Object.prototype, \"hack\", {\n  get: function () {\n    return this;\n  },\n});\n```\n\n4. 同多原型链自定义方法访问到私有对象本身,更改 o 对象本身,就实现了上述功能\n\n```javascript\nlet objectBackup = o.get(\"hack\");\n\nobjectBackup.c = \"hackInner\";\n\nconsole.log(o.get(\"c\")); // 'hackInner'\n```\n\n#### 防御\n\n1. 原型设置为 null\n\n```javascript\nlet o =(function () {\n  var obj = {\n    a: 1,\n    b: 2,\n  };\n\n  Object.setPrototypeOf(obj, null);\n  return {\n    get: function (key) {\n      return obj[key];\n    },\n  };\n})()\n```\n\n2. 在访问器中判断是否自身携带属性\n\n```javascript\nlet o = (function () {\n  var obj = {\n    a: 1,\n    b: 2,\n  };\n\n  return {\n    get: function (key) {\n      if (obj.hasOwnProperty(key)) {\n        return obj[key];\n      }\n    },\n  };\n})()\n```\n\n#### 总结\n\n一切代码皆有漏洞，需要谨慎编写，尽量防御\n","slug":"20240313123053","published":1,"date":"2024-03-13T04:31:08.378Z","updated":"2024-03-13T06:37:29.242Z","_id":"cltpc0o8s0000j7o9cw2vcpr7","comments":1,"layout":"post","photos":[],"content":"<h4 id=\"问题来源\"><a href=\"#问题来源\" class=\"headerlink\" title=\"问题来源\"></a>问题来源</h4><p>以前在面试过程中发现一道有趣的题，抖音刷到了袁进老师的视频，对该问题有了更进一步的认识，记录一下。</p>\n<h4 id=\"面试题内容\"><a href=\"#面试题内容\" class=\"headerlink\" title=\"面试题内容\"></a>面试题内容</h4><blockquote>\n<p>如何在不改变源代码的情况下，修改 o 对象的属性？</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs javascript\"><span class=\"hljs-keyword\">let</span> o =(<span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\"></span>) &#123;<br>  <span class=\"hljs-keyword\">var</span> obj = &#123;<br>    <span class=\"hljs-attr\">a</span>: <span class=\"hljs-number\">1</span>,<br>    <span class=\"hljs-attr\">b</span>: <span class=\"hljs-number\">2</span>,<br>  &#125;;<br>  <span class=\"hljs-keyword\">return</span> &#123;<br>    <span class=\"hljs-attr\">get</span>: <span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">key</span>) &#123;<br>      <span class=\"hljs-keyword\">return</span> obj[key];<br>    &#125;,<br>  &#125;;<br>&#125;)()<br></code></pre></td></tr></table></figure>\n\n<ol>\n<li>首先要读一个对象，就会想到读对象的原型，原型有 valueOf 方法，可以读到对象</li>\n</ol>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs javascript\"><span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(o.<span class=\"hljs-title function_\">get</span>(<span class=\"hljs-string\">&quot;valueOf&quot;</span>)); <span class=\"hljs-comment\">// output : [Function: valueOf]</span><br></code></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li>读到 valueOf 方法，可以调用 valueOf 方法，读到对象</li>\n</ol>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs javascript\"><span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(o.<span class=\"hljs-title function_\">get</span>(<span class=\"hljs-string\">&quot;valueOf&quot;</span>)()); <span class=\"hljs-comment\">// output : error - 知识点1:this指向问题</span><br><span class=\"hljs-comment\">// 上述代码等同于</span><br><span class=\"hljs-keyword\">let</span> handleValueOf = o.<span class=\"hljs-property\">valueOf</span>;<br><span class=\"hljs-title function_\">handleValueOf</span>(); <span class=\"hljs-comment\">// output : error  this不指向对象本身</span><br></code></pre></td></tr></table></figure>\n\n<ol start=\"3\">\n<li>valueOf 无法读到对象本身，可以直接使用 Object.defineProperty 增加一个返回对象本身的方法</li>\n</ol>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs javascript\"><span class=\"hljs-title class_\">Object</span>.<span class=\"hljs-title function_\">defineProperty</span>(<span class=\"hljs-title class_\">Object</span>.<span class=\"hljs-property\"><span class=\"hljs-keyword\">prototype</span></span>, <span class=\"hljs-string\">&quot;hack&quot;</span>, &#123;<br>  <span class=\"hljs-attr\">get</span>: <span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\"></span>) &#123;<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-variable language_\">this</span>;<br>  &#125;,<br>&#125;);<br></code></pre></td></tr></table></figure>\n\n<ol start=\"4\">\n<li>同多原型链自定义方法访问到私有对象本身,更改 o 对象本身,就实现了上述功能</li>\n</ol>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs javascript\"><span class=\"hljs-keyword\">let</span> objectBackup = o.<span class=\"hljs-title function_\">get</span>(<span class=\"hljs-string\">&quot;hack&quot;</span>);<br><br>objectBackup.<span class=\"hljs-property\">c</span> = <span class=\"hljs-string\">&quot;hackInner&quot;</span>;<br><br><span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(o.<span class=\"hljs-title function_\">get</span>(<span class=\"hljs-string\">&quot;c&quot;</span>)); <span class=\"hljs-comment\">// &#x27;hackInner&#x27;</span><br></code></pre></td></tr></table></figure>\n\n<h4 id=\"防御\"><a href=\"#防御\" class=\"headerlink\" title=\"防御\"></a>防御</h4><ol>\n<li>原型设置为 null</li>\n</ol>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs javascript\"><span class=\"hljs-keyword\">let</span> o =(<span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\"></span>) &#123;<br>  <span class=\"hljs-keyword\">var</span> obj = &#123;<br>    <span class=\"hljs-attr\">a</span>: <span class=\"hljs-number\">1</span>,<br>    <span class=\"hljs-attr\">b</span>: <span class=\"hljs-number\">2</span>,<br>  &#125;;<br><br>  <span class=\"hljs-title class_\">Object</span>.<span class=\"hljs-title function_\">setPrototypeOf</span>(obj, <span class=\"hljs-literal\">null</span>);<br>  <span class=\"hljs-keyword\">return</span> &#123;<br>    <span class=\"hljs-attr\">get</span>: <span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">key</span>) &#123;<br>      <span class=\"hljs-keyword\">return</span> obj[key];<br>    &#125;,<br>  &#125;;<br>&#125;)()<br></code></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li>在访问器中判断是否自身携带属性</li>\n</ol>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs javascript\"><span class=\"hljs-keyword\">let</span> o = (<span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\"></span>) &#123;<br>  <span class=\"hljs-keyword\">var</span> obj = &#123;<br>    <span class=\"hljs-attr\">a</span>: <span class=\"hljs-number\">1</span>,<br>    <span class=\"hljs-attr\">b</span>: <span class=\"hljs-number\">2</span>,<br>  &#125;;<br><br>  <span class=\"hljs-keyword\">return</span> &#123;<br>    <span class=\"hljs-attr\">get</span>: <span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">key</span>) &#123;<br>      <span class=\"hljs-keyword\">if</span> (obj.<span class=\"hljs-title function_\">hasOwnProperty</span>(key)) &#123;<br>        <span class=\"hljs-keyword\">return</span> obj[key];<br>      &#125;<br>    &#125;,<br>  &#125;;<br>&#125;)()<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h4><p>一切代码皆有漏洞，需要谨慎编写，尽量防御</p>\n","more":"<h4 id=\"问题来源\"><a href=\"#问题来源\" class=\"headerlink\" title=\"问题来源\"></a>问题来源</h4><p>以前在面试过程中发现一道有趣的题，抖音刷到了袁进老师的视频，对该问题有了更进一步的认识，记录一下。</p>\n<h4 id=\"面试题内容\"><a href=\"#面试题内容\" class=\"headerlink\" title=\"面试题内容\"></a>面试题内容</h4><blockquote>\n<p>如何在不改变源代码的情况下，修改 o 对象的属性？</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs javascript\"><span class=\"hljs-keyword\">let</span> o =(<span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\"></span>) &#123;<br>  <span class=\"hljs-keyword\">var</span> obj = &#123;<br>    <span class=\"hljs-attr\">a</span>: <span class=\"hljs-number\">1</span>,<br>    <span class=\"hljs-attr\">b</span>: <span class=\"hljs-number\">2</span>,<br>  &#125;;<br>  <span class=\"hljs-keyword\">return</span> &#123;<br>    <span class=\"hljs-attr\">get</span>: <span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">key</span>) &#123;<br>      <span class=\"hljs-keyword\">return</span> obj[key];<br>    &#125;,<br>  &#125;;<br>&#125;)()<br></code></pre></td></tr></table></figure>\n\n<ol>\n<li>首先要读一个对象，就会想到读对象的原型，原型有 valueOf 方法，可以读到对象</li>\n</ol>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs javascript\"><span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(o.<span class=\"hljs-title function_\">get</span>(<span class=\"hljs-string\">&quot;valueOf&quot;</span>)); <span class=\"hljs-comment\">// output : [Function: valueOf]</span><br></code></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li>读到 valueOf 方法，可以调用 valueOf 方法，读到对象</li>\n</ol>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs javascript\"><span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(o.<span class=\"hljs-title function_\">get</span>(<span class=\"hljs-string\">&quot;valueOf&quot;</span>)()); <span class=\"hljs-comment\">// output : error - 知识点1:this指向问题</span><br><span class=\"hljs-comment\">// 上述代码等同于</span><br><span class=\"hljs-keyword\">let</span> handleValueOf = o.<span class=\"hljs-property\">valueOf</span>;<br><span class=\"hljs-title function_\">handleValueOf</span>(); <span class=\"hljs-comment\">// output : error  this不指向对象本身</span><br></code></pre></td></tr></table></figure>\n\n<ol start=\"3\">\n<li>valueOf 无法读到对象本身，可以直接使用 Object.defineProperty 增加一个返回对象本身的方法</li>\n</ol>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs javascript\"><span class=\"hljs-title class_\">Object</span>.<span class=\"hljs-title function_\">defineProperty</span>(<span class=\"hljs-title class_\">Object</span>.<span class=\"hljs-property\"><span class=\"hljs-keyword\">prototype</span></span>, <span class=\"hljs-string\">&quot;hack&quot;</span>, &#123;<br>  <span class=\"hljs-attr\">get</span>: <span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\"></span>) &#123;<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-variable language_\">this</span>;<br>  &#125;,<br>&#125;);<br></code></pre></td></tr></table></figure>\n\n<ol start=\"4\">\n<li>同多原型链自定义方法访问到私有对象本身,更改 o 对象本身,就实现了上述功能</li>\n</ol>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs javascript\"><span class=\"hljs-keyword\">let</span> objectBackup = o.<span class=\"hljs-title function_\">get</span>(<span class=\"hljs-string\">&quot;hack&quot;</span>);<br><br>objectBackup.<span class=\"hljs-property\">c</span> = <span class=\"hljs-string\">&quot;hackInner&quot;</span>;<br><br><span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(o.<span class=\"hljs-title function_\">get</span>(<span class=\"hljs-string\">&quot;c&quot;</span>)); <span class=\"hljs-comment\">// &#x27;hackInner&#x27;</span><br></code></pre></td></tr></table></figure>\n\n<h4 id=\"防御\"><a href=\"#防御\" class=\"headerlink\" title=\"防御\"></a>防御</h4><ol>\n<li>原型设置为 null</li>\n</ol>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs javascript\"><span class=\"hljs-keyword\">let</span> o =(<span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\"></span>) &#123;<br>  <span class=\"hljs-keyword\">var</span> obj = &#123;<br>    <span class=\"hljs-attr\">a</span>: <span class=\"hljs-number\">1</span>,<br>    <span class=\"hljs-attr\">b</span>: <span class=\"hljs-number\">2</span>,<br>  &#125;;<br><br>  <span class=\"hljs-title class_\">Object</span>.<span class=\"hljs-title function_\">setPrototypeOf</span>(obj, <span class=\"hljs-literal\">null</span>);<br>  <span class=\"hljs-keyword\">return</span> &#123;<br>    <span class=\"hljs-attr\">get</span>: <span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">key</span>) &#123;<br>      <span class=\"hljs-keyword\">return</span> obj[key];<br>    &#125;,<br>  &#125;;<br>&#125;)()<br></code></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li>在访问器中判断是否自身携带属性</li>\n</ol>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs javascript\"><span class=\"hljs-keyword\">let</span> o = (<span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\"></span>) &#123;<br>  <span class=\"hljs-keyword\">var</span> obj = &#123;<br>    <span class=\"hljs-attr\">a</span>: <span class=\"hljs-number\">1</span>,<br>    <span class=\"hljs-attr\">b</span>: <span class=\"hljs-number\">2</span>,<br>  &#125;;<br><br>  <span class=\"hljs-keyword\">return</span> &#123;<br>    <span class=\"hljs-attr\">get</span>: <span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">key</span>) &#123;<br>      <span class=\"hljs-keyword\">if</span> (obj.<span class=\"hljs-title function_\">hasOwnProperty</span>(key)) &#123;<br>        <span class=\"hljs-keyword\">return</span> obj[key];<br>      &#125;<br>    &#125;,<br>  &#125;;<br>&#125;)()<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h4><p>一切代码皆有漏洞，需要谨慎编写，尽量防御</p>\n"},{"title":"理解任务执行的洋葱模型 - koa","excerpt":"洋葱模型","_content":"\n## 1. 什么是洋葱模型\n\n洋葱模型，是 koa 中间件的执行顺序。\n\n## 2. 实现一个洋葱模型的任务执行构造函数\n\n需求：实现一个构造函数满足以下需求\n\n```js\nconst t = new TaskPro();\nt.addTask(async (next) => {\n  console.log(\"1\", \"start\");\n  await next();\n  console.log(\"1\", \"end\");\n});\nt.addTask(() => {\n  console.log(\"2\");\n});\nt.addTask(() => {\n  console.log(\"3\");\n});\n\nt.run(); // 输出 1 start 2 3 1 end\n```\n\n实现：\n\n```js\nclass TaskPro {\n  // 添加任务\n  _tasklist = [];\n  //当前任务正在执行标识\n  _running = false;\n  //要执行任务的下标\n  _currentIndex = 0;\n\n  //添加任务\n  addTask(task) {\n    this._tasklist.push(task);\n  }\n  async run() {\n    /**\n     * 边界情况判定，如果当前任务正在执行，直接return\n     * 否则，开始执行任务\n     */\n\n    if (this._running) return;\n    // 未在执行任务，设置标识\n    this._running = true;\n    // 执行任务\n    this._runTask();\n  }\n\n  async _next() {\n    // 执行下一个任务\n    this._currentIndex++;\n    this._runTask();\n  }\n  async _runTask() {\n    // 边界情况判定\n    if (this._currentIndex >= this._tasklist.length) {\n      // 所有任务执行完毕，设置标识\n      this._running = false;\n      // 清空任务列表\n      this._tasklist = [];\n      return;\n    }\n    // 记录任务执行之前的下标\n    const prevIndex = this._currentIndex;\n\n    // 获取当前任务\n    const task = this._tasklist[this._currentIndex];\n\n    // 执行当前任务\n    await task(this._next.bind(this));\n    // 记录任务执行之后的下标\n    const nextIndex = this._currentIndex;\n    // 边界情况判定\n    if (prevIndex === nextIndex) {\n      // 当前任务执行完毕，执行下一个任务\n      this._next();\n    }\n  }\n}\n\n\n//-------- 结果 ----------\nconst t = new TaskPro();\nt.addTask(async (next) => {\n  console.log(\"1\", \"start\");\n  await next();\n  console.log(\"1\", \"end\");\n});\nt.addTask(() => {\n  console.log(\"2\");\n});\nt.addTask(() => {\n  console.log(\"3\");\n});\nt.run(); // 输出 1 start 2 3 1 end\n```\n\n","source":"_posts/20240319124707.md","raw":"---\ntitle: 理解任务执行的洋葱模型 - koa\ntags: js\nexcerpt: 洋葱模型\ncategories: js\n---\n\n## 1. 什么是洋葱模型\n\n洋葱模型，是 koa 中间件的执行顺序。\n\n## 2. 实现一个洋葱模型的任务执行构造函数\n\n需求：实现一个构造函数满足以下需求\n\n```js\nconst t = new TaskPro();\nt.addTask(async (next) => {\n  console.log(\"1\", \"start\");\n  await next();\n  console.log(\"1\", \"end\");\n});\nt.addTask(() => {\n  console.log(\"2\");\n});\nt.addTask(() => {\n  console.log(\"3\");\n});\n\nt.run(); // 输出 1 start 2 3 1 end\n```\n\n实现：\n\n```js\nclass TaskPro {\n  // 添加任务\n  _tasklist = [];\n  //当前任务正在执行标识\n  _running = false;\n  //要执行任务的下标\n  _currentIndex = 0;\n\n  //添加任务\n  addTask(task) {\n    this._tasklist.push(task);\n  }\n  async run() {\n    /**\n     * 边界情况判定，如果当前任务正在执行，直接return\n     * 否则，开始执行任务\n     */\n\n    if (this._running) return;\n    // 未在执行任务，设置标识\n    this._running = true;\n    // 执行任务\n    this._runTask();\n  }\n\n  async _next() {\n    // 执行下一个任务\n    this._currentIndex++;\n    this._runTask();\n  }\n  async _runTask() {\n    // 边界情况判定\n    if (this._currentIndex >= this._tasklist.length) {\n      // 所有任务执行完毕，设置标识\n      this._running = false;\n      // 清空任务列表\n      this._tasklist = [];\n      return;\n    }\n    // 记录任务执行之前的下标\n    const prevIndex = this._currentIndex;\n\n    // 获取当前任务\n    const task = this._tasklist[this._currentIndex];\n\n    // 执行当前任务\n    await task(this._next.bind(this));\n    // 记录任务执行之后的下标\n    const nextIndex = this._currentIndex;\n    // 边界情况判定\n    if (prevIndex === nextIndex) {\n      // 当前任务执行完毕，执行下一个任务\n      this._next();\n    }\n  }\n}\n\n\n//-------- 结果 ----------\nconst t = new TaskPro();\nt.addTask(async (next) => {\n  console.log(\"1\", \"start\");\n  await next();\n  console.log(\"1\", \"end\");\n});\nt.addTask(() => {\n  console.log(\"2\");\n});\nt.addTask(() => {\n  console.log(\"3\");\n});\nt.run(); // 输出 1 start 2 3 1 end\n```\n\n","slug":"20240319124707","published":1,"date":"2024-03-19T04:47:18.030Z","updated":"2024-03-19T05:10:40.682Z","comments":1,"layout":"post","photos":[],"_id":"cltxx60wi00001ao97axl5pa9","content":"<h2 id=\"1-什么是洋葱模型\"><a href=\"#1-什么是洋葱模型\" class=\"headerlink\" title=\"1. 什么是洋葱模型\"></a>1. 什么是洋葱模型</h2><p>洋葱模型，是 koa 中间件的执行顺序。</p>\n<h2 id=\"2-实现一个洋葱模型的任务执行构造函数\"><a href=\"#2-实现一个洋葱模型的任务执行构造函数\" class=\"headerlink\" title=\"2. 实现一个洋葱模型的任务执行构造函数\"></a>2. 实现一个洋葱模型的任务执行构造函数</h2><p>需求：实现一个构造函数满足以下需求</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\"><span class=\"hljs-keyword\">const</span> t = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">TaskPro</span>();<br>t.<span class=\"hljs-title function_\">addTask</span>(<span class=\"hljs-keyword\">async</span> (next) =&gt; &#123;<br>  <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">&quot;1&quot;</span>, <span class=\"hljs-string\">&quot;start&quot;</span>);<br>  <span class=\"hljs-keyword\">await</span> <span class=\"hljs-title function_\">next</span>();<br>  <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">&quot;1&quot;</span>, <span class=\"hljs-string\">&quot;end&quot;</span>);<br>&#125;);<br>t.<span class=\"hljs-title function_\">addTask</span>(<span class=\"hljs-function\">() =&gt;</span> &#123;<br>  <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">&quot;2&quot;</span>);<br>&#125;);<br>t.<span class=\"hljs-title function_\">addTask</span>(<span class=\"hljs-function\">() =&gt;</span> &#123;<br>  <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">&quot;3&quot;</span>);<br>&#125;);<br><br>t.<span class=\"hljs-title function_\">run</span>(); <span class=\"hljs-comment\">// 输出 1 start 2 3 1 end</span><br></code></pre></td></tr></table></figure>\n\n<p>实现：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">TaskPro</span> &#123;<br>  <span class=\"hljs-comment\">// 添加任务</span><br>  _tasklist = [];<br>  <span class=\"hljs-comment\">//当前任务正在执行标识</span><br>  _running = <span class=\"hljs-literal\">false</span>;<br>  <span class=\"hljs-comment\">//要执行任务的下标</span><br>  _currentIndex = <span class=\"hljs-number\">0</span>;<br><br>  <span class=\"hljs-comment\">//添加任务</span><br>  <span class=\"hljs-title function_\">addTask</span>(<span class=\"hljs-params\">task</span>) &#123;<br>    <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">_tasklist</span>.<span class=\"hljs-title function_\">push</span>(task);<br>  &#125;<br>  <span class=\"hljs-keyword\">async</span> <span class=\"hljs-title function_\">run</span>(<span class=\"hljs-params\"></span>) &#123;<br>    <span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\">     * 边界情况判定，如果当前任务正在执行，直接return</span><br><span class=\"hljs-comment\">     * 否则，开始执行任务</span><br><span class=\"hljs-comment\">     */</span><br><br>    <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">_running</span>) <span class=\"hljs-keyword\">return</span>;<br>    <span class=\"hljs-comment\">// 未在执行任务，设置标识</span><br>    <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">_running</span> = <span class=\"hljs-literal\">true</span>;<br>    <span class=\"hljs-comment\">// 执行任务</span><br>    <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">_runTask</span>();<br>  &#125;<br><br>  <span class=\"hljs-keyword\">async</span> <span class=\"hljs-title function_\">_next</span>(<span class=\"hljs-params\"></span>) &#123;<br>    <span class=\"hljs-comment\">// 执行下一个任务</span><br>    <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">_currentIndex</span>++;<br>    <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">_runTask</span>();<br>  &#125;<br>  <span class=\"hljs-keyword\">async</span> <span class=\"hljs-title function_\">_runTask</span>(<span class=\"hljs-params\"></span>) &#123;<br>    <span class=\"hljs-comment\">// 边界情况判定</span><br>    <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">_currentIndex</span> &gt;= <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">_tasklist</span>.<span class=\"hljs-property\">length</span>) &#123;<br>      <span class=\"hljs-comment\">// 所有任务执行完毕，设置标识</span><br>      <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">_running</span> = <span class=\"hljs-literal\">false</span>;<br>      <span class=\"hljs-comment\">// 清空任务列表</span><br>      <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">_tasklist</span> = [];<br>      <span class=\"hljs-keyword\">return</span>;<br>    &#125;<br>    <span class=\"hljs-comment\">// 记录任务执行之前的下标</span><br>    <span class=\"hljs-keyword\">const</span> prevIndex = <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">_currentIndex</span>;<br><br>    <span class=\"hljs-comment\">// 获取当前任务</span><br>    <span class=\"hljs-keyword\">const</span> task = <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">_tasklist</span>[<span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">_currentIndex</span>];<br><br>    <span class=\"hljs-comment\">// 执行当前任务</span><br>    <span class=\"hljs-keyword\">await</span> <span class=\"hljs-title function_\">task</span>(<span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">_next</span>.<span class=\"hljs-title function_\">bind</span>(<span class=\"hljs-variable language_\">this</span>));<br>    <span class=\"hljs-comment\">// 记录任务执行之后的下标</span><br>    <span class=\"hljs-keyword\">const</span> nextIndex = <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">_currentIndex</span>;<br>    <span class=\"hljs-comment\">// 边界情况判定</span><br>    <span class=\"hljs-keyword\">if</span> (prevIndex === nextIndex) &#123;<br>      <span class=\"hljs-comment\">// 当前任务执行完毕，执行下一个任务</span><br>      <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">_next</span>();<br>    &#125;<br>  &#125;<br>&#125;<br><br><br><span class=\"hljs-comment\">//-------- 结果 ----------</span><br><span class=\"hljs-keyword\">const</span> t = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">TaskPro</span>();<br>t.<span class=\"hljs-title function_\">addTask</span>(<span class=\"hljs-keyword\">async</span> (next) =&gt; &#123;<br>  <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">&quot;1&quot;</span>, <span class=\"hljs-string\">&quot;start&quot;</span>);<br>  <span class=\"hljs-keyword\">await</span> <span class=\"hljs-title function_\">next</span>();<br>  <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">&quot;1&quot;</span>, <span class=\"hljs-string\">&quot;end&quot;</span>);<br>&#125;);<br>t.<span class=\"hljs-title function_\">addTask</span>(<span class=\"hljs-function\">() =&gt;</span> &#123;<br>  <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">&quot;2&quot;</span>);<br>&#125;);<br>t.<span class=\"hljs-title function_\">addTask</span>(<span class=\"hljs-function\">() =&gt;</span> &#123;<br>  <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">&quot;3&quot;</span>);<br>&#125;);<br>t.<span class=\"hljs-title function_\">run</span>(); <span class=\"hljs-comment\">// 输出 1 start 2 3 1 end</span><br></code></pre></td></tr></table></figure>\n\n","more":"<h2 id=\"1-什么是洋葱模型\"><a href=\"#1-什么是洋葱模型\" class=\"headerlink\" title=\"1. 什么是洋葱模型\"></a>1. 什么是洋葱模型</h2><p>洋葱模型，是 koa 中间件的执行顺序。</p>\n<h2 id=\"2-实现一个洋葱模型的任务执行构造函数\"><a href=\"#2-实现一个洋葱模型的任务执行构造函数\" class=\"headerlink\" title=\"2. 实现一个洋葱模型的任务执行构造函数\"></a>2. 实现一个洋葱模型的任务执行构造函数</h2><p>需求：实现一个构造函数满足以下需求</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\"><span class=\"hljs-keyword\">const</span> t = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">TaskPro</span>();<br>t.<span class=\"hljs-title function_\">addTask</span>(<span class=\"hljs-keyword\">async</span> (next) =&gt; &#123;<br>  <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">&quot;1&quot;</span>, <span class=\"hljs-string\">&quot;start&quot;</span>);<br>  <span class=\"hljs-keyword\">await</span> <span class=\"hljs-title function_\">next</span>();<br>  <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">&quot;1&quot;</span>, <span class=\"hljs-string\">&quot;end&quot;</span>);<br>&#125;);<br>t.<span class=\"hljs-title function_\">addTask</span>(<span class=\"hljs-function\">() =&gt;</span> &#123;<br>  <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">&quot;2&quot;</span>);<br>&#125;);<br>t.<span class=\"hljs-title function_\">addTask</span>(<span class=\"hljs-function\">() =&gt;</span> &#123;<br>  <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">&quot;3&quot;</span>);<br>&#125;);<br><br>t.<span class=\"hljs-title function_\">run</span>(); <span class=\"hljs-comment\">// 输出 1 start 2 3 1 end</span><br></code></pre></td></tr></table></figure>\n\n<p>实现：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">TaskPro</span> &#123;<br>  <span class=\"hljs-comment\">// 添加任务</span><br>  _tasklist = [];<br>  <span class=\"hljs-comment\">//当前任务正在执行标识</span><br>  _running = <span class=\"hljs-literal\">false</span>;<br>  <span class=\"hljs-comment\">//要执行任务的下标</span><br>  _currentIndex = <span class=\"hljs-number\">0</span>;<br><br>  <span class=\"hljs-comment\">//添加任务</span><br>  <span class=\"hljs-title function_\">addTask</span>(<span class=\"hljs-params\">task</span>) &#123;<br>    <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">_tasklist</span>.<span class=\"hljs-title function_\">push</span>(task);<br>  &#125;<br>  <span class=\"hljs-keyword\">async</span> <span class=\"hljs-title function_\">run</span>(<span class=\"hljs-params\"></span>) &#123;<br>    <span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\">     * 边界情况判定，如果当前任务正在执行，直接return</span><br><span class=\"hljs-comment\">     * 否则，开始执行任务</span><br><span class=\"hljs-comment\">     */</span><br><br>    <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">_running</span>) <span class=\"hljs-keyword\">return</span>;<br>    <span class=\"hljs-comment\">// 未在执行任务，设置标识</span><br>    <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">_running</span> = <span class=\"hljs-literal\">true</span>;<br>    <span class=\"hljs-comment\">// 执行任务</span><br>    <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">_runTask</span>();<br>  &#125;<br><br>  <span class=\"hljs-keyword\">async</span> <span class=\"hljs-title function_\">_next</span>(<span class=\"hljs-params\"></span>) &#123;<br>    <span class=\"hljs-comment\">// 执行下一个任务</span><br>    <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">_currentIndex</span>++;<br>    <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">_runTask</span>();<br>  &#125;<br>  <span class=\"hljs-keyword\">async</span> <span class=\"hljs-title function_\">_runTask</span>(<span class=\"hljs-params\"></span>) &#123;<br>    <span class=\"hljs-comment\">// 边界情况判定</span><br>    <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">_currentIndex</span> &gt;= <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">_tasklist</span>.<span class=\"hljs-property\">length</span>) &#123;<br>      <span class=\"hljs-comment\">// 所有任务执行完毕，设置标识</span><br>      <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">_running</span> = <span class=\"hljs-literal\">false</span>;<br>      <span class=\"hljs-comment\">// 清空任务列表</span><br>      <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">_tasklist</span> = [];<br>      <span class=\"hljs-keyword\">return</span>;<br>    &#125;<br>    <span class=\"hljs-comment\">// 记录任务执行之前的下标</span><br>    <span class=\"hljs-keyword\">const</span> prevIndex = <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">_currentIndex</span>;<br><br>    <span class=\"hljs-comment\">// 获取当前任务</span><br>    <span class=\"hljs-keyword\">const</span> task = <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">_tasklist</span>[<span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">_currentIndex</span>];<br><br>    <span class=\"hljs-comment\">// 执行当前任务</span><br>    <span class=\"hljs-keyword\">await</span> <span class=\"hljs-title function_\">task</span>(<span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">_next</span>.<span class=\"hljs-title function_\">bind</span>(<span class=\"hljs-variable language_\">this</span>));<br>    <span class=\"hljs-comment\">// 记录任务执行之后的下标</span><br>    <span class=\"hljs-keyword\">const</span> nextIndex = <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">_currentIndex</span>;<br>    <span class=\"hljs-comment\">// 边界情况判定</span><br>    <span class=\"hljs-keyword\">if</span> (prevIndex === nextIndex) &#123;<br>      <span class=\"hljs-comment\">// 当前任务执行完毕，执行下一个任务</span><br>      <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">_next</span>();<br>    &#125;<br>  &#125;<br>&#125;<br><br><br><span class=\"hljs-comment\">//-------- 结果 ----------</span><br><span class=\"hljs-keyword\">const</span> t = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">TaskPro</span>();<br>t.<span class=\"hljs-title function_\">addTask</span>(<span class=\"hljs-keyword\">async</span> (next) =&gt; &#123;<br>  <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">&quot;1&quot;</span>, <span class=\"hljs-string\">&quot;start&quot;</span>);<br>  <span class=\"hljs-keyword\">await</span> <span class=\"hljs-title function_\">next</span>();<br>  <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">&quot;1&quot;</span>, <span class=\"hljs-string\">&quot;end&quot;</span>);<br>&#125;);<br>t.<span class=\"hljs-title function_\">addTask</span>(<span class=\"hljs-function\">() =&gt;</span> &#123;<br>  <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">&quot;2&quot;</span>);<br>&#125;);<br>t.<span class=\"hljs-title function_\">addTask</span>(<span class=\"hljs-function\">() =&gt;</span> &#123;<br>  <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">&quot;3&quot;</span>);<br>&#125;);<br>t.<span class=\"hljs-title function_\">run</span>(); <span class=\"hljs-comment\">// 输出 1 start 2 3 1 end</span><br></code></pre></td></tr></table></figure>\n\n"}],"PostAsset":[],"PostCategory":[{"post_id":"clpv10m2q00013xo9futhfdo8","category_id":"clpv10m2t00033xo989u34dny","_id":"clpv10m2v00083xo95fdv8715"},{"post_id":"clpv10m2s00023xo99esvhrpb","category_id":"clpv10m2t00033xo989u34dny","_id":"clpv10m2v000a3xo9c1iebd1x"},{"post_id":"clpv10m2w000b3xo9dpi02l73","category_id":"clpv10m2t00033xo989u34dny","_id":"clpv10m2y000h3xo9g118gl41"},{"post_id":"clpv10m2x000e3xo940azbfe8","category_id":"clpv10m2t00033xo989u34dny","_id":"clpv10m2y000j3xo94b9gg1ju"},{"post_id":"clpv10m2w000c3xo9792ahujn","category_id":"clpv10m2x000f3xo9b0dt3grd","_id":"clpv10m2y000l3xo93y7f5ypk"},{"post_id":"clq51s05t0000e4o918df9lkf","category_id":"clq51s05w0001e4o99ftx80h6","_id":"clq51s05x0004e4o9gxtjho4b"},{"post_id":"clsyednqr000017o95jhyg6f1","category_id":"clsyedyp7000317o913y5a0y1","_id":"clsyedypb000617o9cfryahj7"},{"post_id":"cltpc0o8s0000j7o9cw2vcpr7","category_id":"clpv10m2t00033xo989u34dny","_id":"cltpc0o910002j7o998geak2u"},{"post_id":"cltxx60wi00001ao97axl5pa9","category_id":"clpv10m2t00033xo989u34dny","_id":"cltxx60wq00021ao9fqx51jau"}],"PostTag":[{"post_id":"clpv10m2q00013xo9futhfdo8","tag_id":"clpv10m2u00043xo9bjcz2p4r","_id":"clpv10m2v00073xo9ej7d7lss"},{"post_id":"clpv10m2s00023xo99esvhrpb","tag_id":"clpv10m2u00043xo9bjcz2p4r","_id":"clpv10m2v00093xo91m8ye8sw"},{"post_id":"clpv10m2w000b3xo9dpi02l73","tag_id":"clpv10m2u00043xo9bjcz2p4r","_id":"clpv10m2x000d3xo97eju1oj6"},{"post_id":"clpv10m2x000e3xo940azbfe8","tag_id":"clpv10m2u00043xo9bjcz2p4r","_id":"clpv10m2y000i3xo97krgfqe5"},{"post_id":"clpv10m2w000c3xo9792ahujn","tag_id":"clpv10m2x000g3xo9f33p11jb","_id":"clpv10m2y000k3xo90s6c0owf"},{"post_id":"clq51s05t0000e4o918df9lkf","tag_id":"clq51s05x0002e4o938ap189u","_id":"clq51s05x0003e4o919m5cppn"},{"post_id":"clsyednqr000017o95jhyg6f1","tag_id":"clsyedypa000417o9759z8cyi","_id":"clsyedypa000517o994nshpgi"},{"post_id":"cltpc0o8s0000j7o9cw2vcpr7","tag_id":"clpv10m2u00043xo9bjcz2p4r","_id":"cltpc0o900001j7o9gmff5vxo"},{"post_id":"cltxx60wi00001ao97axl5pa9","tag_id":"clpv10m2u00043xo9bjcz2p4r","_id":"cltxx60wp00011ao91lo633du"}],"Tag":[{"name":"js","_id":"clpv10m2u00043xo9bjcz2p4r"},{"name":"npm","_id":"clpv10m2x000g3xo9f33p11jb"},{"name":"github","_id":"clq51s05x0002e4o938ap189u"},{"name":"开发日常","_id":"clsyedypa000417o9759z8cyi"}]}}