<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>使用 githubActions 完成NPM包自动发布</title>
    <link href="/2023/12/14/20231214175822/"/>
    <url>/2023/12/14/20231214175822/</url>
    
    <content type="html"><![CDATA[<h3 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h3><p>为了拓宽知识面，将前几天发的 utils 使用 Vite 打包成了 umd 发布到了 npm,主要是用来自己使用和相关知识学习。在发布过程中，发现每次提交 npmPackage 新版本都需要进行打包，本地发布，非常繁琐，了解了一下可以使用 githubActions 进行自动发布,现在将步骤记录下。</p><h3 id="实现概述"><a href="#实现概述" class="headerlink" title="实现概述"></a>实现概述</h3><ol><li>首先我们需要打通 github 和 npm 之间的联系，了解后发现 npm 提供了 AccessToken,github 也提供了<a href="https://docs.github.com/zh/actions/security-guides/using-secrets-in-github-actions">secrets</a>可以保存秘钥,实现联通。</li><li>联通后需要执行我们的部署脚本，让其在 Action 中自动执行。</li></ol><h3 id="脚本实现"><a href="#脚本实现" class="headerlink" title="脚本实现"></a>脚本实现</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs yml"><span class="hljs-attr">name:</span> <span class="hljs-string">Publish</span> <span class="hljs-string">Package</span> <span class="hljs-string">to</span> <span class="hljs-string">npmjs</span><br><br><span class="hljs-attr">on:</span><br>  <span class="hljs-attr">push:</span><br>    <span class="hljs-attr">branches:</span> [<span class="hljs-string">main</span>]<br><br><span class="hljs-attr">jobs:</span><br>  <span class="hljs-attr">build:</span><br>    <span class="hljs-attr">runs-on:</span> <span class="hljs-string">ubuntu-latest</span><br>    <span class="hljs-attr">steps:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">uses:</span> <span class="hljs-string">actions/checkout@v3</span><br>      <span class="hljs-comment"># Setup .npmrc file to publish to npm</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">uses:</span> <span class="hljs-string">actions/setup-node@v3</span><br>        <span class="hljs-attr">with:</span><br>          <span class="hljs-attr">node-version:</span> <span class="hljs-string">&quot;16.x&quot;</span><br>          <span class="hljs-attr">registry-url:</span> <span class="hljs-string">&quot;https://registry.npmjs.org&quot;</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">run:</span> <span class="hljs-string">npm</span> <span class="hljs-string">install</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">run:</span> <span class="hljs-string">npm</span> <span class="hljs-string">run</span> <span class="hljs-string">build</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">run:</span> <span class="hljs-string">npm</span> <span class="hljs-string">publish</span><br>        <span class="hljs-attr">env:</span><br>          <span class="hljs-attr">NODE_AUTH_TOKEN:</span> <span class="hljs-string">$&#123;&#123;</span> <span class="hljs-string">secrets.NPM_TOKEN</span> <span class="hljs-string">&#125;&#125;</span><br></code></pre></td></tr></table></figure><p>上面是我的脚本，有相关基础的话很容易看懂。中间少了版本号生成的一步，所以在发布到 npm 之前记得手动修改哦，或者使用 npm 提供的方法进行版本号递增。</p>]]></content>
    
    
    <categories>
      
      <category>github</category>
      
    </categories>
    
    
    <tags>
      
      <tag>github</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>JS常用Utils</title>
    <link href="/2023/12/07/20231207173941/"/>
    <url>/2023/12/07/20231207173941/</url>
    
    <content type="html"><![CDATA[<h6 id="图片预加载"><a href="#图片预加载" class="headerlink" title="图片预加载"></a>图片预加载</h6><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 预加载图片</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> source   Array 预加载图片列表</span><br><span class="hljs-comment"> */</span><br><span class="hljs-comment">/*预加载图片*/</span><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">preLoadImg</span>(<span class="hljs-params">source</span>) &#123;<br>  <span class="hljs-comment">/*加载图片方法*/</span><br>  <span class="hljs-keyword">function</span> <span class="hljs-title function_">loadImage</span>(<span class="hljs-params">url</span>) &#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Promise</span>(<span class="hljs-function">(<span class="hljs-params">resolve, reject</span>) =&gt;</span> &#123;<br>      <span class="hljs-keyword">let</span> img = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Image</span>();<br>      img.<span class="hljs-property">onload</span> = <span class="hljs-function">() =&gt;</span> <span class="hljs-title function_">resolve</span>(img);<br>      img.<span class="hljs-property">onerror</span> = reject;<br>      img.<span class="hljs-property">src</span> = url;<br>    &#125;);<br>  &#125;<br><br>  <span class="hljs-keyword">let</span> pr = [];<br>  source.<span class="hljs-title function_">forEach</span>(<span class="hljs-function">(<span class="hljs-params">url</span>) =&gt;</span> &#123;<br>    <span class="hljs-comment">// 预加载图片</span><br>    <span class="hljs-keyword">let</span> p = <span class="hljs-title function_">loadImage</span>(url)<br>      .<span class="hljs-title function_">then</span>(<span class="hljs-function">() =&gt;</span> &#123;<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;Single image loading completed&quot;</span>);<br>      &#125;)<br>      .<span class="hljs-title function_">catch</span>(<span class="hljs-function">(<span class="hljs-params">err</span>) =&gt;</span> &#123;<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(err);<br>      &#125;);<br>    pr.<span class="hljs-title function_">push</span>(p);<br>  &#125;);<br>  <span class="hljs-comment">// 图片全部加载完</span><br>  <span class="hljs-title class_">Promise</span>.<span class="hljs-title function_">all</span>(pr).<span class="hljs-title function_">then</span>(<span class="hljs-function">() =&gt;</span> &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;All images loaded&quot;</span>);<br>  &#125;);<br>&#125;<br></code></pre></td></tr></table></figure><h6 id="获取-url-参数"><a href="#获取-url-参数" class="headerlink" title="获取 url 参数"></a>获取 url 参数</h6><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 获取URL参数</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> name   String 要获取的参数Key</span><br><span class="hljs-comment"> */</span><br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">getQueryString</span>(<span class="hljs-params">name</span>) &#123;<br>  <span class="hljs-keyword">var</span> reg = <span class="hljs-keyword">new</span> <span class="hljs-title class_">RegExp</span>(<span class="hljs-string">&quot;(^|&amp;)&quot;</span> + name + <span class="hljs-string">&quot;=([^&amp;]*)(&amp;|$)&quot;</span>);<br>  <span class="hljs-keyword">var</span> r = <span class="hljs-variable language_">window</span>.<span class="hljs-property">location</span>.<span class="hljs-property">search</span>.<span class="hljs-title function_">substr</span>(<span class="hljs-number">1</span>).<span class="hljs-title function_">match</span>(reg);<br>  <span class="hljs-keyword">if</span> (r != <span class="hljs-literal">null</span>) <span class="hljs-keyword">return</span> <span class="hljs-built_in">unescape</span>(r[<span class="hljs-number">2</span>]);<br>  <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h6 id="判断-str-字符串中是否含有字符串"><a href="#判断-str-字符串中是否含有字符串" class="headerlink" title="判断 str 字符串中是否含有字符串"></a>判断 str 字符串中是否含有字符串</h6><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 判断 str 字符串中是否含有字符串 subStr</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> &#123;<span class="hljs-type"></span>&#125; str 原字符串</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> &#123;<span class="hljs-type"></span>&#125; subStr 要查找的字符串</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> &#123;<span class="hljs-type"></span>&#125; isIgnoreCase 是否忽略大小写</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@return</span> &#123;<span class="hljs-type">Boolean</span>&#125;</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">contains</span>(<span class="hljs-params">str, subStr, isIgnoreCase</span>) &#123;<br>  <span class="hljs-keyword">if</span> (isIgnoreCase) &#123;<br>    <span class="hljs-comment">// 忽略大小写</span><br>    str = str.<span class="hljs-title function_">toLowerCase</span>();<br>    subStr = subStr.<span class="hljs-title function_">toLowerCase</span>();<br>  &#125;<br>  <span class="hljs-keyword">var</span> startChar = subStr.<span class="hljs-title function_">substring</span>(<span class="hljs-number">0</span>, <span class="hljs-number">1</span>);<br>  <span class="hljs-keyword">var</span> strLen = subStr.<span class="hljs-property">length</span>;<br>  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> j = <span class="hljs-number">0</span>; j &lt; str.<span class="hljs-property">length</span> - strLen + <span class="hljs-number">1</span>; j++) &#123;<br>    <span class="hljs-keyword">if</span> (str.<span class="hljs-title function_">charAt</span>(j) == startChar) &#123;<br>      <span class="hljs-comment">/* 如果匹配起始字符,开始查找 */</span><br>      <span class="hljs-keyword">if</span> (str.<span class="hljs-title function_">substring</span>(j, j + strLen) == subStr) &#123;<br>        <span class="hljs-comment">/*如果从j开始的字符与 str 匹配 */</span><br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>      &#125;<br>    &#125;<br>  &#125;<br>  <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h6 id="cookie-操作"><a href="#cookie-操作" class="headerlink" title="cookie 操作"></a>cookie 操作</h6><ul><li>设置 cookie</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 设置cookie</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> name  String key</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> value String Value</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> expdays Number 过期时间</span><br><span class="hljs-comment"> */</span><br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">setCookie</span>(<span class="hljs-params">name, value, expdays</span>) &#123;<br>  <span class="hljs-keyword">var</span> expdate = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>();<br>  <span class="hljs-comment">//设置Cookie过期日期</span><br>  expdate.<span class="hljs-title function_">setDate</span>(expdate.<span class="hljs-title function_">getDate</span>() + expdays);<br>  <span class="hljs-comment">//添加Cookie</span><br>  <span class="hljs-variable language_">document</span>.<span class="hljs-property">cookie</span> =<br>    name + <span class="hljs-string">&quot;=&quot;</span> + <span class="hljs-built_in">escape</span>(value) + <span class="hljs-string">&quot;;expires=&quot;</span> + expdate.<span class="hljs-title function_">toUTCString</span>();<br>&#125;<br></code></pre></td></tr></table></figure><ul><li>获取 cookie</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 获取cookie</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> name String key</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@returns</span> &#123;<span class="hljs-type">string</span>&#125;</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">getCookie</span>(<span class="hljs-params">name</span>) &#123;<br>  <span class="hljs-comment">//获取name在Cookie中起止位置</span><br>  <span class="hljs-keyword">var</span> start = <span class="hljs-variable language_">document</span>.<span class="hljs-property">cookie</span>.<span class="hljs-title function_">indexOf</span>(name + <span class="hljs-string">&quot;=&quot;</span>);<br><br>  <span class="hljs-keyword">if</span> (start != -<span class="hljs-number">1</span>) &#123;<br>    start = start + name.<span class="hljs-property">length</span> + <span class="hljs-number">1</span>;<br>    <span class="hljs-comment">//获取value的终止位置</span><br>    <span class="hljs-keyword">var</span> end = <span class="hljs-variable language_">document</span>.<span class="hljs-property">cookie</span>.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&quot;;&quot;</span>, start);<br>    <span class="hljs-keyword">if</span> (end == -<span class="hljs-number">1</span>) end = <span class="hljs-variable language_">document</span>.<span class="hljs-property">cookie</span>.<span class="hljs-property">length</span>;<br>    <span class="hljs-comment">//截获cookie的value值,并返回</span><br>    <span class="hljs-keyword">return</span> <span class="hljs-built_in">unescape</span>(<span class="hljs-variable language_">document</span>.<span class="hljs-property">cookie</span>.<span class="hljs-title function_">substring</span>(start, end));<br>  &#125;<br>  <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;&quot;</span>;<br>&#125;<br></code></pre></td></tr></table></figure><ul><li>删除 cookie</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">function</span> <span class="hljs-title function_">delCookie</span>(<span class="hljs-params">name</span>) &#123;<br>  <span class="hljs-keyword">var</span> exp = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>();<br>  exp.<span class="hljs-title function_">setTime</span>(exp.<span class="hljs-title function_">getTime</span>() - <span class="hljs-number">1</span>);<br>  <span class="hljs-keyword">var</span> cval = <span class="hljs-title function_">getCookie</span>(name);<br>  <span class="hljs-keyword">if</span> (cval != <span class="hljs-literal">null</span>)<br>    <span class="hljs-variable language_">document</span>.<span class="hljs-property">cookie</span> = name + <span class="hljs-string">&quot;=&quot;</span> + cval + <span class="hljs-string">&quot;;expires=&quot;</span> + exp.<span class="hljs-title function_">toGMTString</span>();<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>js</category>
      
    </categories>
    
    
    <tags>
      
      <tag>js</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>使用nrm管理npm源</title>
    <link href="/2023/12/07/20231207172556/"/>
    <url>/2023/12/07/20231207172556/</url>
    
    <content type="html"><![CDATA[<blockquote><p>关于 NRM</p></blockquote><p>nrm（NPM registry manager）是 npm 的镜像源管理工具，使用它可以快速切换 npm 源。</p><blockquote><p>使用</p></blockquote><ol><li>全局安装</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm i -g nrm<br></code></pre></td></tr></table></figure><ol start="2"><li>日常使用</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#切换源</span><br>nrm use &lt;registry&gt;<br><br><span class="hljs-comment">#添加源</span><br>nrm add &lt;registry&gt; &lt;url&gt;<br><br><span class="hljs-comment">#删除源</span><br>nrm del &lt;registry&gt;<br></code></pre></td></tr></table></figure><p><a href="https://github.com/Pana/nrm">更多信息看这里！</a></p>]]></content>
    
    
    <categories>
      
      <category>npm</category>
      
    </categories>
    
    
    <tags>
      
      <tag>npm</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>关于js的浮点数计算问题记录</title>
    <link href="/2023/11/30/20231130112354/"/>
    <url>/2023/11/30/20231130112354/</url>
    
    <content type="html"><![CDATA[<blockquote><p>为什么 js 会有浮点数计算精度问题？</p></blockquote><p>在 JavaScript 中，整数和浮点数都归属于 Number 类型，数字都是 64 位浮点数形式存储的，这样就会导致浮点数运算时候会出现一些问题，下面是一些例子</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">let</span> numberA = <span class="hljs-number">0.1</span> + <span class="hljs-number">0.2</span>;<br><span class="hljs-keyword">let</span> numberB = <span class="hljs-number">1.5</span> - <span class="hljs-number">1.2</span>;<br><span class="hljs-keyword">let</span> numberC = <span class="hljs-number">19.9</span> * <span class="hljs-number">100</span>;<br><span class="hljs-keyword">let</span> numberD = <span class="hljs-number">0.3</span> / <span class="hljs-number">0.1</span>;<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<br>  <span class="hljs-string">&quot;numberA &quot;</span>,<br>  numberA,<br>  <span class="hljs-string">&quot; numberB &quot;</span>,<br>  numberB,<br>  <span class="hljs-string">&quot; numberC &quot;</span>,<br>  numberC,<br>  <span class="hljs-string">&quot; numberD &quot;</span>,<br>  numberD<br>);<br><br><span class="hljs-comment">// output numberA 0.30000000000000004 numberB 0.30000000000000004 numberC 1989.9999999999998 numberD 2.9999999999999996</span><br></code></pre></td></tr></table></figure><p>上述案例的计算结果并不符合我们数学计算逻辑，这样导致我们在进行一些复杂的浮点数运算时候出现偏差，业务场景多见于财务和商品金额计算，在项目中我们做了相关数学方法兼容处理，以下是我们的处理方案：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><code class="hljs javascript">mathHandle = &#123;<br>  <span class="hljs-attr">add</span>: <span class="hljs-function">(<span class="hljs-params">arg1: any, arg2: any</span>) =&gt;</span> &#123;<br>    <span class="hljs-keyword">var</span> r1, r2, m;<br>    <span class="hljs-keyword">try</span> &#123;<br>      r1 = arg1.<span class="hljs-title function_">toString</span>().<span class="hljs-title function_">split</span>(<span class="hljs-string">&quot;.&quot;</span>)[<span class="hljs-number">1</span>].<span class="hljs-property">length</span>;<br>    &#125; <span class="hljs-keyword">catch</span> (e) &#123;<br>      r1 = <span class="hljs-number">0</span>;<br>    &#125;<br>    <span class="hljs-keyword">try</span> &#123;<br>      r2 = arg2.<span class="hljs-title function_">toString</span>().<span class="hljs-title function_">split</span>(<span class="hljs-string">&quot;.&quot;</span>)[<span class="hljs-number">1</span>].<span class="hljs-property">length</span>;<br>    &#125; <span class="hljs-keyword">catch</span> (e) &#123;<br>      r2 = <span class="hljs-number">0</span>;<br>    &#125;<br>    m = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">pow</span>(<span class="hljs-number">10</span>, <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">max</span>(r1, r2));<br>    <span class="hljs-keyword">return</span> (arg1 * m + arg2 * m) / m;<br>  &#125;,<br>  <span class="hljs-attr">subtract</span>: <span class="hljs-function">(<span class="hljs-params">arg1: any, arg2: any</span>) =&gt;</span> &#123;<br>    <span class="hljs-keyword">var</span> r1, r2, m, n;<br>    <span class="hljs-keyword">try</span> &#123;<br>      r1 = arg1.<span class="hljs-title function_">toString</span>().<span class="hljs-title function_">split</span>(<span class="hljs-string">&quot;.&quot;</span>)[<span class="hljs-number">1</span>].<span class="hljs-property">length</span>;<br>    &#125; <span class="hljs-keyword">catch</span> (e) &#123;<br>      r1 = <span class="hljs-number">0</span>;<br>    &#125;<br>    <span class="hljs-keyword">try</span> &#123;<br>      r2 = arg2.<span class="hljs-title function_">toString</span>().<span class="hljs-title function_">split</span>(<span class="hljs-string">&quot;.&quot;</span>)[<span class="hljs-number">1</span>].<span class="hljs-property">length</span>;<br>    &#125; <span class="hljs-keyword">catch</span> (e) &#123;<br>      r2 = <span class="hljs-number">0</span>;<br>    &#125;<br>    m = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">pow</span>(<span class="hljs-number">10</span>, <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">max</span>(r1, r2));<br>    <span class="hljs-comment">//动态控制精度长度</span><br>    n = r1 &gt;= r2 ? r1 : r2;<br>    <span class="hljs-keyword">return</span> ((arg1 * m - arg2 * m) / m).<span class="hljs-title function_">toFixed</span>(n);<br>  &#125;,<br>  <span class="hljs-attr">multiply</span>: <span class="hljs-function">(<span class="hljs-params">arg1: any, arg2: any</span>) =&gt;</span> &#123;<br>    <span class="hljs-keyword">var</span> m = <span class="hljs-number">0</span>,<br>      s1 = arg1.<span class="hljs-title function_">toString</span>(),<br>      s2 = arg2.<span class="hljs-title function_">toString</span>();<br>    <span class="hljs-keyword">try</span> &#123;<br>      m += s1.<span class="hljs-title function_">split</span>(<span class="hljs-string">&quot;.&quot;</span>)[<span class="hljs-number">1</span>].<span class="hljs-property">length</span>;<br>    &#125; <span class="hljs-keyword">catch</span> (e) &#123;&#125;<br>    <span class="hljs-keyword">try</span> &#123;<br>      m += s2.<span class="hljs-title function_">split</span>(<span class="hljs-string">&quot;.&quot;</span>)[<span class="hljs-number">1</span>].<span class="hljs-property">length</span>;<br>    &#125; <span class="hljs-keyword">catch</span> (e) &#123;&#125;<br>    <span class="hljs-keyword">return</span> (<br>      (<span class="hljs-title class_">Number</span>(s1.<span class="hljs-title function_">replace</span>(<span class="hljs-string">&quot;.&quot;</span>, <span class="hljs-string">&quot;&quot;</span>)) * <span class="hljs-title class_">Number</span>(s2.<span class="hljs-title function_">replace</span>(<span class="hljs-string">&quot;.&quot;</span>, <span class="hljs-string">&quot;&quot;</span>))) /<br>      <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">pow</span>(<span class="hljs-number">10</span>, m)<br>    );<br>  &#125;,<br>  <span class="hljs-attr">divide</span>: <span class="hljs-function">(<span class="hljs-params">arg1: any, arg2: any</span>) =&gt;</span> &#123;<br>    <span class="hljs-keyword">var</span> t1 = <span class="hljs-number">0</span>,<br>      t2 = <span class="hljs-number">0</span>,<br>      r1,<br>      r2;<br>    <span class="hljs-keyword">try</span> &#123;<br>      t1 = arg1.<span class="hljs-title function_">toString</span>().<span class="hljs-title function_">split</span>(<span class="hljs-string">&quot;.&quot;</span>)[<span class="hljs-number">1</span>].<span class="hljs-property">length</span>;<br>    &#125; <span class="hljs-keyword">catch</span> (e) &#123;&#125;<br>    <span class="hljs-keyword">try</span> &#123;<br>      t2 = arg2.<span class="hljs-title function_">toString</span>().<span class="hljs-title function_">split</span>(<span class="hljs-string">&quot;.&quot;</span>)[<span class="hljs-number">1</span>].<span class="hljs-property">length</span>;<br>    &#125; <span class="hljs-keyword">catch</span> (e) &#123;&#125;<br>    r1 = <span class="hljs-title class_">Number</span>(arg1.<span class="hljs-title function_">toString</span>().<span class="hljs-title function_">replace</span>(<span class="hljs-string">&quot;.&quot;</span>, <span class="hljs-string">&quot;&quot;</span>));<br>    r2 = <span class="hljs-title class_">Number</span>(arg2.<span class="hljs-title function_">toString</span>().<span class="hljs-title function_">replace</span>(<span class="hljs-string">&quot;.&quot;</span>, <span class="hljs-string">&quot;&quot;</span>));<br>    <span class="hljs-keyword">return</span> (r1 / r2) * <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">pow</span>(<span class="hljs-number">10</span>, t2 - t1);<br>  &#125;,<br>&#125;;<br></code></pre></td></tr></table></figure><p>上述代码已经完全应用于业务代码中，并且暂未出现问题，网上还有更多更完善的解决方案（mathjs）等，可供大家参考。</p>]]></content>
    
    
    <categories>
      
      <category>js</category>
      
    </categories>
    
    
    <tags>
      
      <tag>js</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>js手写filter方法</title>
    <link href="/2023/11/29/20231129151306/"/>
    <url>/2023/11/29/20231129151306/</url>
    
    <content type="html"><![CDATA[<p>直接上干货</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-title class_">Array</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>.<span class="hljs-property">myFilter</span> = <span class="hljs-keyword">function</span> (<span class="hljs-params">callback, thisArg</span>) &#123;<br>  <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">this</span> == <span class="hljs-literal">null</span>) &#123;<br>    <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">TypeError</span>(<span class="hljs-string">&quot;this is null or not defined&quot;</span>);<br>  &#125;<br><br>  <span class="hljs-keyword">if</span> (<span class="hljs-keyword">typeof</span> callback !== <span class="hljs-string">&quot;function&quot;</span>) &#123;<br>    <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">TypeError</span>(callback + <span class="hljs-string">&quot; is not a function&quot;</span>);<br>  &#125;<br><br>  <span class="hljs-keyword">const</span> res = [];<br><br>  <span class="hljs-comment">// 让O成为回调函数的对象传递（强制转换对象）</span><br><br>  <span class="hljs-keyword">const</span> O = <span class="hljs-title class_">Object</span>(<span class="hljs-variable language_">this</span>);<br><br>  <span class="hljs-comment">// &gt;&gt;&gt;0 保证len为number，且为正整数</span><br><br>  <span class="hljs-keyword">const</span> len = O.<span class="hljs-property">length</span> &gt;&gt;&gt; <span class="hljs-number">0</span>;<br><br>  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; len; i++) &#123;<br>    <span class="hljs-comment">// 检查i是否在O的属性（会检查原型链）</span><br><br>    <span class="hljs-keyword">if</span> (i <span class="hljs-keyword">in</span> O) &#123;<br>      <span class="hljs-comment">// 回调函数调用传参</span><br><br>      <span class="hljs-keyword">if</span> (callback.<span class="hljs-title function_">call</span>(thisArg, O[i], i, O)) &#123;<br>        res.<span class="hljs-title function_">push</span>(O[i]);<br>      &#125;<br>    &#125;<br>  &#125;<br><br>  <span class="hljs-keyword">return</span> res;<br>&#125;;<br><br><span class="hljs-comment">// 使用示例</span><br><br><span class="hljs-keyword">let</span> arr = [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>];<br><br><span class="hljs-keyword">let</span> newArr = arr.<span class="hljs-title function_">myFilter</span>(<span class="hljs-keyword">function</span> (<span class="hljs-params">item</span>) &#123;<br>  <span class="hljs-keyword">return</span> item &gt; <span class="hljs-number">3</span>;<br>&#125;);<br><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(newArr); <span class="hljs-comment">// 输出：[4, 5]</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>js</category>
      
    </categories>
    
    
    <tags>
      
      <tag>js</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>判断dom是否在视图中出现</title>
    <link href="/2023/11/24/2023112410009/"/>
    <url>/2023/11/24/2023112410009/</url>
    
    <content type="html"><![CDATA[<ul><li>元素完全在可视区域中出现</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">/*</span><br><span class="hljs-comment">return  true 完全出现  false  未完全出现</span><br><span class="hljs-comment">*/</span><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">elementInViewport</span>(<span class="hljs-params">el</span>) &#123;<br>  <span class="hljs-keyword">var</span> top = el.<span class="hljs-property">offsetTop</span>;<br>  <span class="hljs-keyword">var</span> left = el.<span class="hljs-property">offsetLeft</span>;<br>  <span class="hljs-keyword">var</span> width = el.<span class="hljs-property">offsetWidth</span>;<br>  <span class="hljs-keyword">var</span> height = el.<span class="hljs-property">offsetHeight</span>;<br><br>  <span class="hljs-keyword">while</span>(el.<span class="hljs-property">offsetParent</span>) &#123;<br>    el = el.<span class="hljs-property">offsetParent</span>;<br>    top += el.<span class="hljs-property">offsetTop</span>;<br>    left += el.<span class="hljs-property">offsetLeft</span>;<br>  &#125;<br><br>  <span class="hljs-keyword">return</span> (<br>    top &gt;= <span class="hljs-variable language_">window</span>.<span class="hljs-property">pageYOffset</span> &amp;&amp;<br>    left &gt;= <span class="hljs-variable language_">window</span>.<span class="hljs-property">pageXOffset</span> &amp;&amp;<br>    (top + height) &lt;= (<span class="hljs-variable language_">window</span>.<span class="hljs-property">pageYOffset</span> + <span class="hljs-variable language_">window</span>.<span class="hljs-property">innerHeight</span>) &amp;&amp;<br>    (left + width) &lt;= (<span class="hljs-variable language_">window</span>.<span class="hljs-property">pageXOffset</span> + <span class="hljs-variable language_">window</span>.<span class="hljs-property">innerWidth</span>)<br>  );<br>&#125;<br><br></code></pre></td></tr></table></figure><ul><li>元素任何一部分在可视区域出现</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">elementInViewport2</span>(<span class="hljs-params">el</span>) &#123;<br>  <span class="hljs-keyword">var</span> top = el.<span class="hljs-property">offsetTop</span>;<br>  <span class="hljs-keyword">var</span> left = el.<span class="hljs-property">offsetLeft</span>;<br>  <span class="hljs-keyword">var</span> width = el.<span class="hljs-property">offsetWidth</span>;<br>  <span class="hljs-keyword">var</span> height = el.<span class="hljs-property">offsetHeight</span>;<br><br>  <span class="hljs-keyword">while</span>(el.<span class="hljs-property">offsetParent</span>) &#123;<br>    el = el.<span class="hljs-property">offsetParent</span>;<br>    top += el.<span class="hljs-property">offsetTop</span>;<br>    left += el.<span class="hljs-property">offsetLeft</span>;<br>  &#125;<br><br>  <span class="hljs-keyword">return</span> (<br>    top &lt; (<span class="hljs-variable language_">window</span>.<span class="hljs-property">pageYOffset</span> + <span class="hljs-variable language_">window</span>.<span class="hljs-property">innerHeight</span>) &amp;&amp;<br>    left &lt; (<span class="hljs-variable language_">window</span>.<span class="hljs-property">pageXOffset</span> + <span class="hljs-variable language_">window</span>.<span class="hljs-property">innerWidth</span>) &amp;&amp;<br>    (top + height) &gt; <span class="hljs-variable language_">window</span>.<span class="hljs-property">pageYOffset</span> &amp;&amp;<br>    (left + width) &gt; <span class="hljs-variable language_">window</span>.<span class="hljs-property">pageXOffset</span><br>  );<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>js</category>
      
    </categories>
    
    
    <tags>
      
      <tag>js</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
